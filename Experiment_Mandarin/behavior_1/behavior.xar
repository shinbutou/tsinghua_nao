<?xml version="1.0" encoding="UTF-8" ?>
<ChoregrapheProject xmlns="http://www.ald.softbankrobotics.com/schema/choregraphe/project.xsd" xar_version="3">
  <Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0">
    <bitmap>media/images/box/root.png</bitmap>
    <script language="4">
      <content>
        <![CDATA[]]>
      </content>
    </script>
    <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
    <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
    <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
    <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
    <Timeline enable="0">
      <BehaviorLayer name="behavior_layer1">
        <BehaviorKeyframe name="keyframe1" index="1">
          <Diagram scale="100">
            <Box name="_实验介绍" id="1" localization="8" tooltip="" x="192" y="161">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="Wait" id="13" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="1128" y="47">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="askIntro" id="3" localization="8" tooltip="Say some text with animations. The text can be localized." x="68" y="120">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="接下来，要开始今天的实验了！现在需要我介绍一下实验的内容吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="expIntro" id="6" localization="8" tooltip="Say some text with animations. The text can be localized." x="270" y="62">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="今天，我们的任务很简单，我会示范一些动作，你需要模仿我。每一个动作，你要做三遍！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="animations/Stand/Gestures/Explain_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="expIntro (1)" id="8" localization="8" tooltip="Say some text with animations. The text can be localized." x="443" y="19">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="第一遍，我会先示范一个动作，这时候你要认真观察哦，然后由你自己单独做第一遍！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="animations/Stand/Gestures/Explain_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="expIntro (3)" id="10" localization="8" tooltip="Say some text with animations. The text can be localized." x="602" y="348">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="第三遍，由你自己单独展示一遍，我会观察你做得好不好。" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="animations/Stand/Gestures/Explain_4" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="yesAgain" id="15" localization="8" tooltip="Say some text with animations. The text can be localized." x="826" y="158">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="我会示范一些动作，你需要模仿我。每一个动作，你要做三遍；第一遍，我会先示范一个动作，这时候，你要认真观察！然后由你自己单独做第一遍！第二遍，我们俩一起同时做一遍这个动作，要注意和我保持一致！第三遍，由你自己单独展示一遍，我会观察你做得好不好。" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="noAgain" id="19" localization="8" tooltip="Say some text with animations. The text can be localized." x="848" y="321">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，那我们现在开始可以么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="no" id="1" localization="8" tooltip="Say some text with animations. The text can be localized." x="180" y="225">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="哎呀，这样呐！可是我还是得向你说明实验内容！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="start" id="28" localization="8" tooltip="Say some text. The text can be localized." x="993" y="166">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="很好！我们先来练习一次吧！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="expIntro (2)" id="4" localization="8" tooltip="Say some text. The text can be localized." x="498" y="204">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="第二遍，我们俩一起同时做一遍这个动作，要注意和我保持一致呀！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="askAgain" id="2" localization="8" tooltip="Say some text. The text can be localized." x="669" y="145">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="我说清楚了吗？需要我再重复一遍吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Stand Up" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="740" y="471">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="8" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="13" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="6" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="28" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="10" indexofoutput="4" />
                      <Link inputowner="23" indexofinput="2" outputowner="2" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_练习动作" id="2" localization="8" tooltip="" x="342" y="160">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="_说再一遍" id="3" localization="8" tooltip="Say some text with animations. The text can be localized." x="105" y="330">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="那我再示范一次！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_请再做一遍" id="8" localization="8" tooltip="Say some text with animations. The text can be localized." x="111" y="755">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，你已经单独做了一遍！接下来，第二遍，我们一起做一次！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_3" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_请最后做一遍" id="9" localization="8" tooltip="Say some text with animations. The text can be localized." x="692" y="551">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，已经完成两遍了！最后一遍，你自己做一次！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_结束练习动作" id="10" localization="8" tooltip="Say some text with animations. The text can be localized." x="784" y="103">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="很好，练习任务已经完成！我相信你已经熟悉了流程，我们可以开始正式任务了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_锻炼动作组" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="335" y="338">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="401">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe3" index="3">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="-8.96736" />
                              <Key frame="44" value="-7.82477" />
                              <Key frame="73" value="-7.82477" />
                              <Key frame="96" value="-7.82477" />
                              <Key frame="114" value="-7.82477" />
                              <Key frame="128" value="-7.82477" />
                              <Key frame="143" value="-7.82477" />
                              <Key frame="158" value="-7.82477" />
                              <Key frame="187" value="-7.82477" />
                              <Key frame="213" value="-7.82477" />
                              <Key frame="236" value="-7.82477" />
                              <Key frame="253" value="-7.82477" />
                              <Key frame="282" value="-7.82477" />
                              <Key frame="308" value="-7.82477" />
                              <Key frame="338" value="-7.82477" />
                              <Key frame="364" value="-7.82477" />
                              <Key frame="401" value="-7.82477" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.145" />
                              <Key frame="44" value="-0.353968" />
                              <Key frame="73" value="-0.266077" />
                              <Key frame="96" value="-0.353968" />
                              <Key frame="114" value="-0.266077" />
                              <Key frame="128" value="-0.266077" />
                              <Key frame="143" value="-0.353968" />
                              <Key frame="158" value="-0.353968" />
                              <Key frame="187" value="-0.266077" />
                              <Key frame="213" value="-0.353968" />
                              <Key frame="236" value="-0.353968" />
                              <Key frame="253" value="-0.353968" />
                              <Key frame="282" value="-0.353968" />
                              <Key frame="308" value="-0.353968" />
                              <Key frame="338" value="-0.353968" />
                              <Key frame="364" value="-0.353968" />
                              <Key frame="401" value="-0.353968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-68.15" />
                              <Key frame="44" value="-68.1185" />
                              <Key frame="73" value="5.44688" />
                              <Key frame="96" value="5.44688" />
                              <Key frame="114" value="5.53478" />
                              <Key frame="128" value="5.44688" />
                              <Key frame="143" value="5.53478" />
                              <Key frame="158" value="5.53478" />
                              <Key frame="187" value="5.53478" />
                              <Key frame="213" value="5.53478" />
                              <Key frame="236" value="5.53478" />
                              <Key frame="253" value="5.44688" />
                              <Key frame="282" value="5.53478" />
                              <Key frame="308" value="5.53478" />
                              <Key frame="338" value="-68.1185" />
                              <Key frame="364" value="-68.15" />
                              <Key frame="401" value="5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="-2.89802" />
                              <Key frame="44" value="-2.81013" />
                              <Key frame="73" value="-6.58948" />
                              <Key frame="96" value="-6.58948" />
                              <Key frame="114" value="-6.67737" />
                              <Key frame="128" value="-6.67737" />
                              <Key frame="143" value="-6.67737" />
                              <Key frame="158" value="-6.67737" />
                              <Key frame="187" value="-6.67737" />
                              <Key frame="213" value="-6.58948" />
                              <Key frame="236" value="-6.58948" />
                              <Key frame="253" value="-6.67737" />
                              <Key frame="282" value="-6.67737" />
                              <Key frame="308" value="-6.58948" />
                              <Key frame="338" value="-2.81013" />
                              <Key frame="364" value="-2.89802" />
                              <Key frame="401" value="-6.67737" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-22.7616" />
                              <Key frame="44" value="-22.8494" />
                              <Key frame="73" value="-22.0584" />
                              <Key frame="96" value="-87.6256" />
                              <Key frame="114" value="-22.7616" />
                              <Key frame="128" value="-87.6256" />
                              <Key frame="143" value="-13.6208" />
                              <Key frame="158" value="-79.8033" />
                              <Key frame="187" value="-21.3553" />
                              <Key frame="213" value="-53.26" />
                              <Key frame="236" value="-10.0173" />
                              <Key frame="253" value="-78.7486" />
                              <Key frame="282" value="-78.3091" />
                              <Key frame="308" value="-25.3104" />
                              <Key frame="338" value="-25.4862" />
                              <Key frame="364" value="-25.4862" />
                              <Key frame="401" value="-23.992" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.3471" />
                              <Key frame="44" value="-78.5776" />
                              <Key frame="73" value="-98.7048" />
                              <Key frame="96" value="-87.191" />
                              <Key frame="114" value="-83.8511" />
                              <Key frame="128" value="-83.4117" />
                              <Key frame="143" value="-81.7417" />
                              <Key frame="158" value="-84.2906" />
                              <Key frame="187" value="-7.12163" />
                              <Key frame="213" value="-7.38531" />
                              <Key frame="236" value="-4.13332" />
                              <Key frame="253" value="-92.7282" />
                              <Key frame="282" value="-92.0251" />
                              <Key frame="308" value="-95.9802" />
                              <Key frame="338" value="-95.9802" />
                              <Key frame="364" value="-95.9802" />
                              <Key frame="401" value="-69.349" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.9576" />
                              <Key frame="44" value="0.0352" />
                              <Key frame="73" value="0.016" />
                              <Key frame="96" value="0.0268" />
                              <Key frame="114" value="0.0268" />
                              <Key frame="128" value="0.0268" />
                              <Key frame="143" value="0.0268" />
                              <Key frame="158" value="0.0268" />
                              <Key frame="187" value="0.0268" />
                              <Key frame="213" value="0.0268" />
                              <Key frame="236" value="0.0268" />
                              <Key frame="253" value="0.0268" />
                              <Key frame="282" value="0.0316" />
                              <Key frame="308" value="0.0316" />
                              <Key frame="338" value="0.0316" />
                              <Key frame="364" value="0.9616" />
                              <Key frame="401" value="0.6208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.0781" />
                              <Key frame="44" value="-32.0781" />
                              <Key frame="73" value="7.73688" />
                              <Key frame="96" value="7.73688" />
                              <Key frame="114" value="7.73688" />
                              <Key frame="128" value="7.73688" />
                              <Key frame="143" value="7.73688" />
                              <Key frame="158" value="7.73688" />
                              <Key frame="187" value="7.73688" />
                              <Key frame="213" value="7.73688" />
                              <Key frame="236" value="7.73688" />
                              <Key frame="253" value="7.73688" />
                              <Key frame="282" value="7.73688" />
                              <Key frame="308" value="7.73688" />
                              <Key frame="338" value="-35.5059" />
                              <Key frame="364" value="-35.418" />
                              <Key frame="401" value="7.73688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="25" value="9.40682" />
                              <Key frame="44" value="9.40682" />
                              <Key frame="73" value="6.59429" />
                              <Key frame="96" value="6.59429" />
                              <Key frame="114" value="6.59429" />
                              <Key frame="128" value="6.59429" />
                              <Key frame="143" value="6.59429" />
                              <Key frame="158" value="6.59429" />
                              <Key frame="187" value="6.59429" />
                              <Key frame="213" value="6.59429" />
                              <Key frame="236" value="6.59429" />
                              <Key frame="253" value="6.59429" />
                              <Key frame="282" value="6.68218" />
                              <Key frame="308" value="6.68218" />
                              <Key frame="338" value="7.12163" />
                              <Key frame="364" value="7.12163" />
                              <Key frame="401" value="6.68218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.18802" />
                              <Key frame="96" value="-5.18802" />
                              <Key frame="114" value="-5.18802" />
                              <Key frame="128" value="-5.27591" />
                              <Key frame="143" value="-5.18802" />
                              <Key frame="158" value="-5.18802" />
                              <Key frame="187" value="-5.18802" />
                              <Key frame="213" value="-5.18802" />
                              <Key frame="236" value="-5.18802" />
                              <Key frame="253" value="-5.27591" />
                              <Key frame="282" value="-5.18802" />
                              <Key frame="308" value="-5.18802" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="97.4695" />
                              <Key frame="44" value="106.962" />
                              <Key frame="73" value="98.5242" />
                              <Key frame="96" value="57.8304" />
                              <Key frame="114" value="85.6041" />
                              <Key frame="128" value="62.4886" />
                              <Key frame="143" value="78.1333" />
                              <Key frame="158" value="59.764" />
                              <Key frame="187" value="-88.9488" />
                              <Key frame="213" value="-88.5973" />
                              <Key frame="236" value="-87.982" />
                              <Key frame="253" value="-7.4732" />
                              <Key frame="282" value="87.6256" />
                              <Key frame="308" value="103.446" />
                              <Key frame="338" value="104.765" />
                              <Key frame="364" value="104.677" />
                              <Key frame="401" value="88.153" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="22.6737" />
                              <Key frame="44" value="16.7849" />
                              <Key frame="73" value="13.0935" />
                              <Key frame="96" value="-0.529749" />
                              <Key frame="114" value="0.524941" />
                              <Key frame="128" value="-0.441859" />
                              <Key frame="143" value="0.43705" />
                              <Key frame="158" value="-2.1997" />
                              <Key frame="187" value="20.0369" />
                              <Key frame="213" value="59.6761" />
                              <Key frame="236" value="4.48007" />
                              <Key frame="253" value="10.193" />
                              <Key frame="282" value="7.81997" />
                              <Key frame="308" value="11.863" />
                              <Key frame="338" value="11.2477" />
                              <Key frame="364" value="11.2477" />
                              <Key frame="401" value="7.81997" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-20.2175" />
                              <Key frame="44" value="-23.4695" />
                              <Key frame="73" value="4.83163" />
                              <Key frame="96" value="-93.3434" />
                              <Key frame="114" value="-93.8708" />
                              <Key frame="128" value="-92.3766" />
                              <Key frame="143" value="-92.6403" />
                              <Key frame="158" value="-97.5622" />
                              <Key frame="187" value="-27.4246" />
                              <Key frame="213" value="-27.4246" />
                              <Key frame="236" value="-33.3134" />
                              <Key frame="253" value="1.22808" />
                              <Key frame="282" value="1.14019" />
                              <Key frame="308" value="1.31597" />
                              <Key frame="338" value="1.22808" />
                              <Key frame="364" value="1.31597" />
                              <Key frame="401" value="4.39218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-67.85" />
                              <Key frame="44" value="-67.9379" />
                              <Key frame="73" value="5.80326" />
                              <Key frame="96" value="5.71537" />
                              <Key frame="114" value="5.80326" />
                              <Key frame="128" value="5.71537" />
                              <Key frame="143" value="5.80326" />
                              <Key frame="158" value="5.80326" />
                              <Key frame="187" value="5.89115" />
                              <Key frame="213" value="5.71537" />
                              <Key frame="236" value="5.80326" />
                              <Key frame="253" value="5.62747" />
                              <Key frame="282" value="5.80326" />
                              <Key frame="308" value="5.80326" />
                              <Key frame="338" value="-67.97" />
                              <Key frame="364" value="-67.97" />
                              <Key frame="401" value="5.80326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="2.46338" />
                              <Key frame="44" value="2.46338" />
                              <Key frame="73" value="4.22121" />
                              <Key frame="96" value="4.22121" />
                              <Key frame="114" value="4.22121" />
                              <Key frame="128" value="4.22121" />
                              <Key frame="143" value="4.22121" />
                              <Key frame="158" value="4.22121" />
                              <Key frame="187" value="4.22121" />
                              <Key frame="213" value="4.22121" />
                              <Key frame="236" value="4.22121" />
                              <Key frame="253" value="4.22121" />
                              <Key frame="282" value="4.22121" />
                              <Key frame="308" value="4.22121" />
                              <Key frame="338" value="2.99072" />
                              <Key frame="364" value="2.90283" />
                              <Key frame="401" value="4.22121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="19.8659" />
                              <Key frame="44" value="25.3152" />
                              <Key frame="73" value="25.3152" />
                              <Key frame="96" value="87.2789" />
                              <Key frame="114" value="87.3668" />
                              <Key frame="128" value="9.14314" />
                              <Key frame="143" value="85.9605" />
                              <Key frame="158" value="85.9605" />
                              <Key frame="187" value="17.7565" />
                              <Key frame="213" value="61.7024" />
                              <Key frame="236" value="2.1997" />
                              <Key frame="253" value="85.9605" />
                              <Key frame="282" value="78.3139" />
                              <Key frame="308" value="13.0104" />
                              <Key frame="338" value="13.1862" />
                              <Key frame="364" value="13.274" />
                              <Key frame="401" value="22.3269" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="87.1862" />
                              <Key frame="44" value="88.5046" />
                              <Key frame="73" value="72.5962" />
                              <Key frame="96" value="74.7935" />
                              <Key frame="114" value="74.8813" />
                              <Key frame="128" value="92.6355" />
                              <Key frame="143" value="90.3503" />
                              <Key frame="158" value="90.3503" />
                              <Key frame="187" value="43.2403" />
                              <Key frame="213" value="16.1697" />
                              <Key frame="236" value="18.0154" />
                              <Key frame="253" value="89.9987" />
                              <Key frame="282" value="84.901" />
                              <Key frame="308" value="90.5261" />
                              <Key frame="338" value="90.614" />
                              <Key frame="364" value="90.8776" />
                              <Key frame="401" value="67.5863" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.9432" />
                              <Key frame="44" value="0.0176001" />
                              <Key frame="73" value="0.0172" />
                              <Key frame="96" value="0.1056" />
                              <Key frame="114" value="0.1056" />
                              <Key frame="128" value="0.1056" />
                              <Key frame="143" value="0.1056" />
                              <Key frame="158" value="0.1056" />
                              <Key frame="187" value="0.1056" />
                              <Key frame="213" value="0.1056" />
                              <Key frame="236" value="0.1056" />
                              <Key frame="253" value="0.1056" />
                              <Key frame="282" value="0.1056" />
                              <Key frame="308" value="0.1056" />
                              <Key frame="338" value="0" />
                              <Key frame="364" value="0.9484" />
                              <Key frame="401" value="0.4912" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.3466" />
                              <Key frame="44" value="-33" />
                              <Key frame="73" value="7.55628" />
                              <Key frame="96" value="7.55628" />
                              <Key frame="114" value="7.55628" />
                              <Key frame="128" value="7.55628" />
                              <Key frame="143" value="7.46839" />
                              <Key frame="158" value="7.55628" />
                              <Key frame="187" value="7.55628" />
                              <Key frame="213" value="7.55628" />
                              <Key frame="236" value="7.55628" />
                              <Key frame="253" value="7.55628" />
                              <Key frame="282" value="7.55628" />
                              <Key frame="308" value="7.55628" />
                              <Key frame="338" value="-35.6864" />
                              <Key frame="364" value="-35.6864" />
                              <Key frame="401" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="25" value="-6.58948" />
                              <Key frame="44" value="-6.67737" />
                              <Key frame="73" value="-3.68905" />
                              <Key frame="96" value="-3.68905" />
                              <Key frame="114" value="-3.68905" />
                              <Key frame="128" value="-3.68905" />
                              <Key frame="143" value="-3.68905" />
                              <Key frame="158" value="-3.68905" />
                              <Key frame="187" value="-3.68905" />
                              <Key frame="213" value="-3.68905" />
                              <Key frame="236" value="-3.68905" />
                              <Key frame="253" value="-3.68905" />
                              <Key frame="282" value="-3.68905" />
                              <Key frame="308" value="-3.68905" />
                              <Key frame="338" value="-6.85315" />
                              <Key frame="364" value="-6.94104" />
                              <Key frame="401" value="-3.68905" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.2711" />
                              <Key frame="96" value="-5.2711" />
                              <Key frame="114" value="-5.29" />
                              <Key frame="128" value="-5.29" />
                              <Key frame="143" value="-5.29" />
                              <Key frame="158" value="-5.2711" />
                              <Key frame="187" value="-5.2711" />
                              <Key frame="213" value="-5.18321" />
                              <Key frame="236" value="-5.2711" />
                              <Key frame="253" value="-5.29" />
                              <Key frame="282" value="-5.2711" />
                              <Key frame="308" value="-5.2711" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="96.156" />
                              <Key frame="44" value="97.2986" />
                              <Key frame="73" value="89.3004" />
                              <Key frame="96" value="62.2297" />
                              <Key frame="114" value="62.3176" />
                              <Key frame="128" value="72.3373" />
                              <Key frame="143" value="63.8997" />
                              <Key frame="158" value="63.9876" />
                              <Key frame="187" value="-78.5728" />
                              <Key frame="213" value="-77.8697" />
                              <Key frame="236" value="-84.901" />
                              <Key frame="253" value="4.13332" />
                              <Key frame="282" value="86.9273" />
                              <Key frame="308" value="93.9586" />
                              <Key frame="338" value="93.6071" />
                              <Key frame="364" value="93.5192" />
                              <Key frame="401" value="87.982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-15.0319" />
                              <Key frame="44" value="-29.0067" />
                              <Key frame="73" value="-12.5709" />
                              <Key frame="96" value="10.0173" />
                              <Key frame="114" value="9.66569" />
                              <Key frame="128" value="3.77694" />
                              <Key frame="143" value="8.61098" />
                              <Key frame="158" value="8.61098" />
                              <Key frame="187" value="-13.5377" />
                              <Key frame="213" value="-62.9329" />
                              <Key frame="236" value="4.2164" />
                              <Key frame="253" value="-14.944" />
                              <Key frame="282" value="-6.24271" />
                              <Key frame="308" value="-9.40682" />
                              <Key frame="338" value="-9.31893" />
                              <Key frame="364" value="-9.40682" />
                              <Key frame="401" value="-5.97904" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="0.964409" />
                              <Key frame="44" value="8.69887" />
                              <Key frame="73" value="13.7087" />
                              <Key frame="96" value="90.7897" />
                              <Key frame="114" value="90.7897" />
                              <Key frame="128" value="93.4265" />
                              <Key frame="143" value="87.8893" />
                              <Key frame="158" value="87.8893" />
                              <Key frame="187" value="8.87466" />
                              <Key frame="213" value="8.87466" />
                              <Key frame="236" value="14.8513" />
                              <Key frame="253" value="26.1893" />
                              <Key frame="282" value="10.1051" />
                              <Key frame="308" value="-0.705531" />
                              <Key frame="338" value="2.89802" />
                              <Key frame="364" value="0.876518" />
                              <Key frame="401" value="4.2164" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="_暂停一秒" id="13" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="330" y="749">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_暂停兩秒" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="952" y="52">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_锻炼动作组" id="14" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="516" y="764">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="401">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe3" index="3">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="-8.96736" />
                              <Key frame="44" value="-7.82477" />
                              <Key frame="73" value="-7.82477" />
                              <Key frame="96" value="-7.82477" />
                              <Key frame="114" value="-7.82477" />
                              <Key frame="128" value="-7.82477" />
                              <Key frame="143" value="-7.82477" />
                              <Key frame="158" value="-7.82477" />
                              <Key frame="187" value="-7.82477" />
                              <Key frame="213" value="-7.82477" />
                              <Key frame="236" value="-7.82477" />
                              <Key frame="253" value="-7.82477" />
                              <Key frame="282" value="-7.82477" />
                              <Key frame="308" value="-7.82477" />
                              <Key frame="338" value="-7.82477" />
                              <Key frame="364" value="-7.82477" />
                              <Key frame="401" value="-7.82477" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.145" />
                              <Key frame="44" value="-0.353968" />
                              <Key frame="73" value="-0.266077" />
                              <Key frame="96" value="-0.353968" />
                              <Key frame="114" value="-0.266077" />
                              <Key frame="128" value="-0.266077" />
                              <Key frame="143" value="-0.353968" />
                              <Key frame="158" value="-0.353968" />
                              <Key frame="187" value="-0.266077" />
                              <Key frame="213" value="-0.353968" />
                              <Key frame="236" value="-0.353968" />
                              <Key frame="253" value="-0.353968" />
                              <Key frame="282" value="-0.353968" />
                              <Key frame="308" value="-0.353968" />
                              <Key frame="338" value="-0.353968" />
                              <Key frame="364" value="-0.353968" />
                              <Key frame="401" value="-0.353968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-68.15" />
                              <Key frame="44" value="-68.1185" />
                              <Key frame="73" value="5.44688" />
                              <Key frame="96" value="5.44688" />
                              <Key frame="114" value="5.53478" />
                              <Key frame="128" value="5.44688" />
                              <Key frame="143" value="5.53478" />
                              <Key frame="158" value="5.53478" />
                              <Key frame="187" value="5.53478" />
                              <Key frame="213" value="5.53478" />
                              <Key frame="236" value="5.53478" />
                              <Key frame="253" value="5.44688" />
                              <Key frame="282" value="5.53478" />
                              <Key frame="308" value="5.53478" />
                              <Key frame="338" value="-68.1185" />
                              <Key frame="364" value="-68.15" />
                              <Key frame="401" value="5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="-2.89802" />
                              <Key frame="44" value="-2.81013" />
                              <Key frame="73" value="-6.58948" />
                              <Key frame="96" value="-6.58948" />
                              <Key frame="114" value="-6.67737" />
                              <Key frame="128" value="-6.67737" />
                              <Key frame="143" value="-6.67737" />
                              <Key frame="158" value="-6.67737" />
                              <Key frame="187" value="-6.67737" />
                              <Key frame="213" value="-6.58948" />
                              <Key frame="236" value="-6.58948" />
                              <Key frame="253" value="-6.67737" />
                              <Key frame="282" value="-6.67737" />
                              <Key frame="308" value="-6.58948" />
                              <Key frame="338" value="-2.81013" />
                              <Key frame="364" value="-2.89802" />
                              <Key frame="401" value="-6.67737" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-22.7616" />
                              <Key frame="44" value="-22.8494" />
                              <Key frame="73" value="-22.0584" />
                              <Key frame="96" value="-87.6256" />
                              <Key frame="114" value="-22.7616" />
                              <Key frame="128" value="-87.6256" />
                              <Key frame="143" value="-13.6208" />
                              <Key frame="158" value="-79.8033" />
                              <Key frame="187" value="-21.3553" />
                              <Key frame="213" value="-53.26" />
                              <Key frame="236" value="-10.0173" />
                              <Key frame="253" value="-78.7486" />
                              <Key frame="282" value="-78.3091" />
                              <Key frame="308" value="-25.3104" />
                              <Key frame="338" value="-25.4862" />
                              <Key frame="364" value="-25.4862" />
                              <Key frame="401" value="-23.992" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.3471" />
                              <Key frame="44" value="-78.5776" />
                              <Key frame="73" value="-98.7048" />
                              <Key frame="96" value="-87.191" />
                              <Key frame="114" value="-83.8511" />
                              <Key frame="128" value="-83.4117" />
                              <Key frame="143" value="-81.7417" />
                              <Key frame="158" value="-84.2906" />
                              <Key frame="187" value="-7.12163" />
                              <Key frame="213" value="-7.38531" />
                              <Key frame="236" value="-4.13332" />
                              <Key frame="253" value="-92.7282" />
                              <Key frame="282" value="-92.0251" />
                              <Key frame="308" value="-95.9802" />
                              <Key frame="338" value="-95.9802" />
                              <Key frame="364" value="-95.9802" />
                              <Key frame="401" value="-69.349" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.9576" />
                              <Key frame="44" value="0.0352" />
                              <Key frame="73" value="0.016" />
                              <Key frame="96" value="0.0268" />
                              <Key frame="114" value="0.0268" />
                              <Key frame="128" value="0.0268" />
                              <Key frame="143" value="0.0268" />
                              <Key frame="158" value="0.0268" />
                              <Key frame="187" value="0.0268" />
                              <Key frame="213" value="0.0268" />
                              <Key frame="236" value="0.0268" />
                              <Key frame="253" value="0.0268" />
                              <Key frame="282" value="0.0316" />
                              <Key frame="308" value="0.0316" />
                              <Key frame="338" value="0.0316" />
                              <Key frame="364" value="0.9616" />
                              <Key frame="401" value="0.6208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.0781" />
                              <Key frame="44" value="-32.0781" />
                              <Key frame="73" value="7.73688" />
                              <Key frame="96" value="7.73688" />
                              <Key frame="114" value="7.73688" />
                              <Key frame="128" value="7.73688" />
                              <Key frame="143" value="7.73688" />
                              <Key frame="158" value="7.73688" />
                              <Key frame="187" value="7.73688" />
                              <Key frame="213" value="7.73688" />
                              <Key frame="236" value="7.73688" />
                              <Key frame="253" value="7.73688" />
                              <Key frame="282" value="7.73688" />
                              <Key frame="308" value="7.73688" />
                              <Key frame="338" value="-35.5059" />
                              <Key frame="364" value="-35.418" />
                              <Key frame="401" value="7.73688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="25" value="9.40682" />
                              <Key frame="44" value="9.40682" />
                              <Key frame="73" value="6.59429" />
                              <Key frame="96" value="6.59429" />
                              <Key frame="114" value="6.59429" />
                              <Key frame="128" value="6.59429" />
                              <Key frame="143" value="6.59429" />
                              <Key frame="158" value="6.59429" />
                              <Key frame="187" value="6.59429" />
                              <Key frame="213" value="6.59429" />
                              <Key frame="236" value="6.59429" />
                              <Key frame="253" value="6.59429" />
                              <Key frame="282" value="6.68218" />
                              <Key frame="308" value="6.68218" />
                              <Key frame="338" value="7.12163" />
                              <Key frame="364" value="7.12163" />
                              <Key frame="401" value="6.68218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.18802" />
                              <Key frame="96" value="-5.18802" />
                              <Key frame="114" value="-5.18802" />
                              <Key frame="128" value="-5.27591" />
                              <Key frame="143" value="-5.18802" />
                              <Key frame="158" value="-5.18802" />
                              <Key frame="187" value="-5.18802" />
                              <Key frame="213" value="-5.18802" />
                              <Key frame="236" value="-5.18802" />
                              <Key frame="253" value="-5.27591" />
                              <Key frame="282" value="-5.18802" />
                              <Key frame="308" value="-5.18802" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="97.4695" />
                              <Key frame="44" value="106.962" />
                              <Key frame="73" value="98.5242" />
                              <Key frame="96" value="57.8304" />
                              <Key frame="114" value="85.6041" />
                              <Key frame="128" value="62.4886" />
                              <Key frame="143" value="78.1333" />
                              <Key frame="158" value="59.764" />
                              <Key frame="187" value="-88.9488" />
                              <Key frame="213" value="-88.5973" />
                              <Key frame="236" value="-87.982" />
                              <Key frame="253" value="-7.4732" />
                              <Key frame="282" value="87.6256" />
                              <Key frame="308" value="103.446" />
                              <Key frame="338" value="104.765" />
                              <Key frame="364" value="104.677" />
                              <Key frame="401" value="88.153" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="22.6737" />
                              <Key frame="44" value="16.7849" />
                              <Key frame="73" value="13.0935" />
                              <Key frame="96" value="-0.529749" />
                              <Key frame="114" value="0.524941" />
                              <Key frame="128" value="-0.441859" />
                              <Key frame="143" value="0.43705" />
                              <Key frame="158" value="-2.1997" />
                              <Key frame="187" value="20.0369" />
                              <Key frame="213" value="59.6761" />
                              <Key frame="236" value="4.48007" />
                              <Key frame="253" value="10.193" />
                              <Key frame="282" value="7.81997" />
                              <Key frame="308" value="11.863" />
                              <Key frame="338" value="11.2477" />
                              <Key frame="364" value="11.2477" />
                              <Key frame="401" value="7.81997" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-20.2175" />
                              <Key frame="44" value="-23.4695" />
                              <Key frame="73" value="4.83163" />
                              <Key frame="96" value="-93.3434" />
                              <Key frame="114" value="-93.8708" />
                              <Key frame="128" value="-92.3766" />
                              <Key frame="143" value="-92.6403" />
                              <Key frame="158" value="-97.5622" />
                              <Key frame="187" value="-27.4246" />
                              <Key frame="213" value="-27.4246" />
                              <Key frame="236" value="-33.3134" />
                              <Key frame="253" value="1.22808" />
                              <Key frame="282" value="1.14019" />
                              <Key frame="308" value="1.31597" />
                              <Key frame="338" value="1.22808" />
                              <Key frame="364" value="1.31597" />
                              <Key frame="401" value="4.39218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-67.85" />
                              <Key frame="44" value="-67.9379" />
                              <Key frame="73" value="5.80326" />
                              <Key frame="96" value="5.71537" />
                              <Key frame="114" value="5.80326" />
                              <Key frame="128" value="5.71537" />
                              <Key frame="143" value="5.80326" />
                              <Key frame="158" value="5.80326" />
                              <Key frame="187" value="5.89115" />
                              <Key frame="213" value="5.71537" />
                              <Key frame="236" value="5.80326" />
                              <Key frame="253" value="5.62747" />
                              <Key frame="282" value="5.80326" />
                              <Key frame="308" value="5.80326" />
                              <Key frame="338" value="-67.97" />
                              <Key frame="364" value="-67.97" />
                              <Key frame="401" value="5.80326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="2.46338" />
                              <Key frame="44" value="2.46338" />
                              <Key frame="73" value="4.22121" />
                              <Key frame="96" value="4.22121" />
                              <Key frame="114" value="4.22121" />
                              <Key frame="128" value="4.22121" />
                              <Key frame="143" value="4.22121" />
                              <Key frame="158" value="4.22121" />
                              <Key frame="187" value="4.22121" />
                              <Key frame="213" value="4.22121" />
                              <Key frame="236" value="4.22121" />
                              <Key frame="253" value="4.22121" />
                              <Key frame="282" value="4.22121" />
                              <Key frame="308" value="4.22121" />
                              <Key frame="338" value="2.99072" />
                              <Key frame="364" value="2.90283" />
                              <Key frame="401" value="4.22121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="19.8659" />
                              <Key frame="44" value="25.3152" />
                              <Key frame="73" value="25.3152" />
                              <Key frame="96" value="87.2789" />
                              <Key frame="114" value="87.3668" />
                              <Key frame="128" value="9.14314" />
                              <Key frame="143" value="85.9605" />
                              <Key frame="158" value="85.9605" />
                              <Key frame="187" value="17.7565" />
                              <Key frame="213" value="61.7024" />
                              <Key frame="236" value="2.1997" />
                              <Key frame="253" value="85.9605" />
                              <Key frame="282" value="78.3139" />
                              <Key frame="308" value="13.0104" />
                              <Key frame="338" value="13.1862" />
                              <Key frame="364" value="13.274" />
                              <Key frame="401" value="22.3269" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="87.1862" />
                              <Key frame="44" value="88.5046" />
                              <Key frame="73" value="72.5962" />
                              <Key frame="96" value="74.7935" />
                              <Key frame="114" value="74.8813" />
                              <Key frame="128" value="92.6355" />
                              <Key frame="143" value="90.3503" />
                              <Key frame="158" value="90.3503" />
                              <Key frame="187" value="43.2403" />
                              <Key frame="213" value="16.1697" />
                              <Key frame="236" value="18.0154" />
                              <Key frame="253" value="89.9987" />
                              <Key frame="282" value="84.901" />
                              <Key frame="308" value="90.5261" />
                              <Key frame="338" value="90.614" />
                              <Key frame="364" value="90.8776" />
                              <Key frame="401" value="67.5863" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.9432" />
                              <Key frame="44" value="0.0176001" />
                              <Key frame="73" value="0.0172" />
                              <Key frame="96" value="0.1056" />
                              <Key frame="114" value="0.1056" />
                              <Key frame="128" value="0.1056" />
                              <Key frame="143" value="0.1056" />
                              <Key frame="158" value="0.1056" />
                              <Key frame="187" value="0.1056" />
                              <Key frame="213" value="0.1056" />
                              <Key frame="236" value="0.1056" />
                              <Key frame="253" value="0.1056" />
                              <Key frame="282" value="0.1056" />
                              <Key frame="308" value="0.1056" />
                              <Key frame="338" value="0" />
                              <Key frame="364" value="0.9484" />
                              <Key frame="401" value="0.4912" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.3466" />
                              <Key frame="44" value="-33" />
                              <Key frame="73" value="7.55628" />
                              <Key frame="96" value="7.55628" />
                              <Key frame="114" value="7.55628" />
                              <Key frame="128" value="7.55628" />
                              <Key frame="143" value="7.46839" />
                              <Key frame="158" value="7.55628" />
                              <Key frame="187" value="7.55628" />
                              <Key frame="213" value="7.55628" />
                              <Key frame="236" value="7.55628" />
                              <Key frame="253" value="7.55628" />
                              <Key frame="282" value="7.55628" />
                              <Key frame="308" value="7.55628" />
                              <Key frame="338" value="-35.6864" />
                              <Key frame="364" value="-35.6864" />
                              <Key frame="401" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="25" value="-6.58948" />
                              <Key frame="44" value="-6.67737" />
                              <Key frame="73" value="-3.68905" />
                              <Key frame="96" value="-3.68905" />
                              <Key frame="114" value="-3.68905" />
                              <Key frame="128" value="-3.68905" />
                              <Key frame="143" value="-3.68905" />
                              <Key frame="158" value="-3.68905" />
                              <Key frame="187" value="-3.68905" />
                              <Key frame="213" value="-3.68905" />
                              <Key frame="236" value="-3.68905" />
                              <Key frame="253" value="-3.68905" />
                              <Key frame="282" value="-3.68905" />
                              <Key frame="308" value="-3.68905" />
                              <Key frame="338" value="-6.85315" />
                              <Key frame="364" value="-6.94104" />
                              <Key frame="401" value="-3.68905" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.2711" />
                              <Key frame="96" value="-5.2711" />
                              <Key frame="114" value="-5.29" />
                              <Key frame="128" value="-5.29" />
                              <Key frame="143" value="-5.29" />
                              <Key frame="158" value="-5.2711" />
                              <Key frame="187" value="-5.2711" />
                              <Key frame="213" value="-5.18321" />
                              <Key frame="236" value="-5.2711" />
                              <Key frame="253" value="-5.29" />
                              <Key frame="282" value="-5.2711" />
                              <Key frame="308" value="-5.2711" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="96.156" />
                              <Key frame="44" value="97.2986" />
                              <Key frame="73" value="89.3004" />
                              <Key frame="96" value="62.2297" />
                              <Key frame="114" value="62.3176" />
                              <Key frame="128" value="72.3373" />
                              <Key frame="143" value="63.8997" />
                              <Key frame="158" value="63.9876" />
                              <Key frame="187" value="-78.5728" />
                              <Key frame="213" value="-77.8697" />
                              <Key frame="236" value="-84.901" />
                              <Key frame="253" value="4.13332" />
                              <Key frame="282" value="86.9273" />
                              <Key frame="308" value="93.9586" />
                              <Key frame="338" value="93.6071" />
                              <Key frame="364" value="93.5192" />
                              <Key frame="401" value="87.982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-15.0319" />
                              <Key frame="44" value="-29.0067" />
                              <Key frame="73" value="-12.5709" />
                              <Key frame="96" value="10.0173" />
                              <Key frame="114" value="9.66569" />
                              <Key frame="128" value="3.77694" />
                              <Key frame="143" value="8.61098" />
                              <Key frame="158" value="8.61098" />
                              <Key frame="187" value="-13.5377" />
                              <Key frame="213" value="-62.9329" />
                              <Key frame="236" value="4.2164" />
                              <Key frame="253" value="-14.944" />
                              <Key frame="282" value="-6.24271" />
                              <Key frame="308" value="-9.40682" />
                              <Key frame="338" value="-9.31893" />
                              <Key frame="364" value="-9.40682" />
                              <Key frame="401" value="-5.97904" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="0.964409" />
                              <Key frame="44" value="8.69887" />
                              <Key frame="73" value="13.7087" />
                              <Key frame="96" value="90.7897" />
                              <Key frame="114" value="90.7897" />
                              <Key frame="128" value="93.4265" />
                              <Key frame="143" value="87.8893" />
                              <Key frame="158" value="87.8893" />
                              <Key frame="187" value="8.87466" />
                              <Key frame="213" value="8.87466" />
                              <Key frame="236" value="14.8513" />
                              <Key frame="253" value="26.1893" />
                              <Key frame="282" value="10.1051" />
                              <Key frame="308" value="-0.705531" />
                              <Key frame="338" value="2.89802" />
                              <Key frame="364" value="0.876518" />
                              <Key frame="401" value="4.2164" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="_暂停一秒" id="16" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="281" y="137">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_播放音乐" id="18" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="579" y="22">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../dancingBGM.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="177" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="10" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                  <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                  <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                  <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                </Box>
                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                  <bitmap>media/images/box/folder.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                  <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Audio player" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_说串文字" id="26" localization="8" tooltip="Say the text received on its input." x="773" y="1046">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_人脸识别" id="19" localization="-1" tooltip="This box makes the robot track people with different modes." x="976" y="562">
                        <bitmap>media/images/box/interaction/target_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                        <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                        <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                          <Choice value="Head" />
                          <Choice value="WholeBody" />
                          <Choice value="Move" />
                        </Parameter>
                        <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                          <Choice value="None" />
                          <Choice value="Arms" />
                          <Choice value="LArm" />
                          <Choice value="RArm" />
                        </Parameter>
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                        <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                        <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                        <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                      </Box>
                      <Box name="_别害羞" id="20" localization="8" tooltip="Say some text with animations. The text can be localized." x="126" y="1037">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，试试看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_再示范一次" id="21" localization="8" tooltip="Say some text with animations. The text can be localized." x="288" y="1042">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="需要我再示范一次吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_是否再一遍" id="22" localization="8" tooltip="Say some text. The text can be localized." x="633" y="336">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="看清楚了么？需要我再做一遍么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_锻炼动作组" id="6" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="448" y="1042">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="401">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe3" index="3">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="-8.96736" />
                              <Key frame="44" value="-7.82477" />
                              <Key frame="73" value="-7.82477" />
                              <Key frame="96" value="-7.82477" />
                              <Key frame="114" value="-7.82477" />
                              <Key frame="128" value="-7.82477" />
                              <Key frame="143" value="-7.82477" />
                              <Key frame="158" value="-7.82477" />
                              <Key frame="187" value="-7.82477" />
                              <Key frame="213" value="-7.82477" />
                              <Key frame="236" value="-7.82477" />
                              <Key frame="253" value="-7.82477" />
                              <Key frame="282" value="-7.82477" />
                              <Key frame="308" value="-7.82477" />
                              <Key frame="338" value="-7.82477" />
                              <Key frame="364" value="-7.82477" />
                              <Key frame="401" value="-7.82477" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.145" />
                              <Key frame="44" value="-0.353968" />
                              <Key frame="73" value="-0.266077" />
                              <Key frame="96" value="-0.353968" />
                              <Key frame="114" value="-0.266077" />
                              <Key frame="128" value="-0.266077" />
                              <Key frame="143" value="-0.353968" />
                              <Key frame="158" value="-0.353968" />
                              <Key frame="187" value="-0.266077" />
                              <Key frame="213" value="-0.353968" />
                              <Key frame="236" value="-0.353968" />
                              <Key frame="253" value="-0.353968" />
                              <Key frame="282" value="-0.353968" />
                              <Key frame="308" value="-0.353968" />
                              <Key frame="338" value="-0.353968" />
                              <Key frame="364" value="-0.353968" />
                              <Key frame="401" value="-0.353968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-68.15" />
                              <Key frame="44" value="-68.1185" />
                              <Key frame="73" value="5.44688" />
                              <Key frame="96" value="5.44688" />
                              <Key frame="114" value="5.53478" />
                              <Key frame="128" value="5.44688" />
                              <Key frame="143" value="5.53478" />
                              <Key frame="158" value="5.53478" />
                              <Key frame="187" value="5.53478" />
                              <Key frame="213" value="5.53478" />
                              <Key frame="236" value="5.53478" />
                              <Key frame="253" value="5.44688" />
                              <Key frame="282" value="5.53478" />
                              <Key frame="308" value="5.53478" />
                              <Key frame="338" value="-68.1185" />
                              <Key frame="364" value="-68.15" />
                              <Key frame="401" value="5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="-2.89802" />
                              <Key frame="44" value="-2.81013" />
                              <Key frame="73" value="-6.58948" />
                              <Key frame="96" value="-6.58948" />
                              <Key frame="114" value="-6.67737" />
                              <Key frame="128" value="-6.67737" />
                              <Key frame="143" value="-6.67737" />
                              <Key frame="158" value="-6.67737" />
                              <Key frame="187" value="-6.67737" />
                              <Key frame="213" value="-6.58948" />
                              <Key frame="236" value="-6.58948" />
                              <Key frame="253" value="-6.67737" />
                              <Key frame="282" value="-6.67737" />
                              <Key frame="308" value="-6.58948" />
                              <Key frame="338" value="-2.81013" />
                              <Key frame="364" value="-2.89802" />
                              <Key frame="401" value="-6.67737" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-22.7616" />
                              <Key frame="44" value="-22.8494" />
                              <Key frame="73" value="-22.0584" />
                              <Key frame="96" value="-87.6256" />
                              <Key frame="114" value="-22.7616" />
                              <Key frame="128" value="-87.6256" />
                              <Key frame="143" value="-13.6208" />
                              <Key frame="158" value="-79.8033" />
                              <Key frame="187" value="-21.3553" />
                              <Key frame="213" value="-53.26" />
                              <Key frame="236" value="-10.0173" />
                              <Key frame="253" value="-78.7486" />
                              <Key frame="282" value="-78.3091" />
                              <Key frame="308" value="-25.3104" />
                              <Key frame="338" value="-25.4862" />
                              <Key frame="364" value="-25.4862" />
                              <Key frame="401" value="-23.992" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.3471" />
                              <Key frame="44" value="-78.5776" />
                              <Key frame="73" value="-98.7048" />
                              <Key frame="96" value="-87.191" />
                              <Key frame="114" value="-83.8511" />
                              <Key frame="128" value="-83.4117" />
                              <Key frame="143" value="-81.7417" />
                              <Key frame="158" value="-84.2906" />
                              <Key frame="187" value="-7.12163" />
                              <Key frame="213" value="-7.38531" />
                              <Key frame="236" value="-4.13332" />
                              <Key frame="253" value="-92.7282" />
                              <Key frame="282" value="-92.0251" />
                              <Key frame="308" value="-95.9802" />
                              <Key frame="338" value="-95.9802" />
                              <Key frame="364" value="-95.9802" />
                              <Key frame="401" value="-69.349" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.9576" />
                              <Key frame="44" value="0.0352" />
                              <Key frame="73" value="0.016" />
                              <Key frame="96" value="0.0268" />
                              <Key frame="114" value="0.0268" />
                              <Key frame="128" value="0.0268" />
                              <Key frame="143" value="0.0268" />
                              <Key frame="158" value="0.0268" />
                              <Key frame="187" value="0.0268" />
                              <Key frame="213" value="0.0268" />
                              <Key frame="236" value="0.0268" />
                              <Key frame="253" value="0.0268" />
                              <Key frame="282" value="0.0316" />
                              <Key frame="308" value="0.0316" />
                              <Key frame="338" value="0.0316" />
                              <Key frame="364" value="0.9616" />
                              <Key frame="401" value="0.6208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.0781" />
                              <Key frame="44" value="-32.0781" />
                              <Key frame="73" value="7.73688" />
                              <Key frame="96" value="7.73688" />
                              <Key frame="114" value="7.73688" />
                              <Key frame="128" value="7.73688" />
                              <Key frame="143" value="7.73688" />
                              <Key frame="158" value="7.73688" />
                              <Key frame="187" value="7.73688" />
                              <Key frame="213" value="7.73688" />
                              <Key frame="236" value="7.73688" />
                              <Key frame="253" value="7.73688" />
                              <Key frame="282" value="7.73688" />
                              <Key frame="308" value="7.73688" />
                              <Key frame="338" value="-35.5059" />
                              <Key frame="364" value="-35.418" />
                              <Key frame="401" value="7.73688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="25" value="9.40682" />
                              <Key frame="44" value="9.40682" />
                              <Key frame="73" value="6.59429" />
                              <Key frame="96" value="6.59429" />
                              <Key frame="114" value="6.59429" />
                              <Key frame="128" value="6.59429" />
                              <Key frame="143" value="6.59429" />
                              <Key frame="158" value="6.59429" />
                              <Key frame="187" value="6.59429" />
                              <Key frame="213" value="6.59429" />
                              <Key frame="236" value="6.59429" />
                              <Key frame="253" value="6.59429" />
                              <Key frame="282" value="6.68218" />
                              <Key frame="308" value="6.68218" />
                              <Key frame="338" value="7.12163" />
                              <Key frame="364" value="7.12163" />
                              <Key frame="401" value="6.68218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.18802" />
                              <Key frame="96" value="-5.18802" />
                              <Key frame="114" value="-5.18802" />
                              <Key frame="128" value="-5.27591" />
                              <Key frame="143" value="-5.18802" />
                              <Key frame="158" value="-5.18802" />
                              <Key frame="187" value="-5.18802" />
                              <Key frame="213" value="-5.18802" />
                              <Key frame="236" value="-5.18802" />
                              <Key frame="253" value="-5.27591" />
                              <Key frame="282" value="-5.18802" />
                              <Key frame="308" value="-5.18802" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="97.4695" />
                              <Key frame="44" value="106.962" />
                              <Key frame="73" value="98.5242" />
                              <Key frame="96" value="57.8304" />
                              <Key frame="114" value="85.6041" />
                              <Key frame="128" value="62.4886" />
                              <Key frame="143" value="78.1333" />
                              <Key frame="158" value="59.764" />
                              <Key frame="187" value="-88.9488" />
                              <Key frame="213" value="-88.5973" />
                              <Key frame="236" value="-87.982" />
                              <Key frame="253" value="-7.4732" />
                              <Key frame="282" value="87.6256" />
                              <Key frame="308" value="103.446" />
                              <Key frame="338" value="104.765" />
                              <Key frame="364" value="104.677" />
                              <Key frame="401" value="88.153" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="22.6737" />
                              <Key frame="44" value="16.7849" />
                              <Key frame="73" value="13.0935" />
                              <Key frame="96" value="-0.529749" />
                              <Key frame="114" value="0.524941" />
                              <Key frame="128" value="-0.441859" />
                              <Key frame="143" value="0.43705" />
                              <Key frame="158" value="-2.1997" />
                              <Key frame="187" value="20.0369" />
                              <Key frame="213" value="59.6761" />
                              <Key frame="236" value="4.48007" />
                              <Key frame="253" value="10.193" />
                              <Key frame="282" value="7.81997" />
                              <Key frame="308" value="11.863" />
                              <Key frame="338" value="11.2477" />
                              <Key frame="364" value="11.2477" />
                              <Key frame="401" value="7.81997" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-20.2175" />
                              <Key frame="44" value="-23.4695" />
                              <Key frame="73" value="4.83163" />
                              <Key frame="96" value="-93.3434" />
                              <Key frame="114" value="-93.8708" />
                              <Key frame="128" value="-92.3766" />
                              <Key frame="143" value="-92.6403" />
                              <Key frame="158" value="-97.5622" />
                              <Key frame="187" value="-27.4246" />
                              <Key frame="213" value="-27.4246" />
                              <Key frame="236" value="-33.3134" />
                              <Key frame="253" value="1.22808" />
                              <Key frame="282" value="1.14019" />
                              <Key frame="308" value="1.31597" />
                              <Key frame="338" value="1.22808" />
                              <Key frame="364" value="1.31597" />
                              <Key frame="401" value="4.39218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-67.85" />
                              <Key frame="44" value="-67.9379" />
                              <Key frame="73" value="5.80326" />
                              <Key frame="96" value="5.71537" />
                              <Key frame="114" value="5.80326" />
                              <Key frame="128" value="5.71537" />
                              <Key frame="143" value="5.80326" />
                              <Key frame="158" value="5.80326" />
                              <Key frame="187" value="5.89115" />
                              <Key frame="213" value="5.71537" />
                              <Key frame="236" value="5.80326" />
                              <Key frame="253" value="5.62747" />
                              <Key frame="282" value="5.80326" />
                              <Key frame="308" value="5.80326" />
                              <Key frame="338" value="-67.97" />
                              <Key frame="364" value="-67.97" />
                              <Key frame="401" value="5.80326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="2.46338" />
                              <Key frame="44" value="2.46338" />
                              <Key frame="73" value="4.22121" />
                              <Key frame="96" value="4.22121" />
                              <Key frame="114" value="4.22121" />
                              <Key frame="128" value="4.22121" />
                              <Key frame="143" value="4.22121" />
                              <Key frame="158" value="4.22121" />
                              <Key frame="187" value="4.22121" />
                              <Key frame="213" value="4.22121" />
                              <Key frame="236" value="4.22121" />
                              <Key frame="253" value="4.22121" />
                              <Key frame="282" value="4.22121" />
                              <Key frame="308" value="4.22121" />
                              <Key frame="338" value="2.99072" />
                              <Key frame="364" value="2.90283" />
                              <Key frame="401" value="4.22121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="19.8659" />
                              <Key frame="44" value="25.3152" />
                              <Key frame="73" value="25.3152" />
                              <Key frame="96" value="87.2789" />
                              <Key frame="114" value="87.3668" />
                              <Key frame="128" value="9.14314" />
                              <Key frame="143" value="85.9605" />
                              <Key frame="158" value="85.9605" />
                              <Key frame="187" value="17.7565" />
                              <Key frame="213" value="61.7024" />
                              <Key frame="236" value="2.1997" />
                              <Key frame="253" value="85.9605" />
                              <Key frame="282" value="78.3139" />
                              <Key frame="308" value="13.0104" />
                              <Key frame="338" value="13.1862" />
                              <Key frame="364" value="13.274" />
                              <Key frame="401" value="22.3269" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="87.1862" />
                              <Key frame="44" value="88.5046" />
                              <Key frame="73" value="72.5962" />
                              <Key frame="96" value="74.7935" />
                              <Key frame="114" value="74.8813" />
                              <Key frame="128" value="92.6355" />
                              <Key frame="143" value="90.3503" />
                              <Key frame="158" value="90.3503" />
                              <Key frame="187" value="43.2403" />
                              <Key frame="213" value="16.1697" />
                              <Key frame="236" value="18.0154" />
                              <Key frame="253" value="89.9987" />
                              <Key frame="282" value="84.901" />
                              <Key frame="308" value="90.5261" />
                              <Key frame="338" value="90.614" />
                              <Key frame="364" value="90.8776" />
                              <Key frame="401" value="67.5863" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.9432" />
                              <Key frame="44" value="0.0176001" />
                              <Key frame="73" value="0.0172" />
                              <Key frame="96" value="0.1056" />
                              <Key frame="114" value="0.1056" />
                              <Key frame="128" value="0.1056" />
                              <Key frame="143" value="0.1056" />
                              <Key frame="158" value="0.1056" />
                              <Key frame="187" value="0.1056" />
                              <Key frame="213" value="0.1056" />
                              <Key frame="236" value="0.1056" />
                              <Key frame="253" value="0.1056" />
                              <Key frame="282" value="0.1056" />
                              <Key frame="308" value="0.1056" />
                              <Key frame="338" value="0" />
                              <Key frame="364" value="0.9484" />
                              <Key frame="401" value="0.4912" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.3466" />
                              <Key frame="44" value="-33" />
                              <Key frame="73" value="7.55628" />
                              <Key frame="96" value="7.55628" />
                              <Key frame="114" value="7.55628" />
                              <Key frame="128" value="7.55628" />
                              <Key frame="143" value="7.46839" />
                              <Key frame="158" value="7.55628" />
                              <Key frame="187" value="7.55628" />
                              <Key frame="213" value="7.55628" />
                              <Key frame="236" value="7.55628" />
                              <Key frame="253" value="7.55628" />
                              <Key frame="282" value="7.55628" />
                              <Key frame="308" value="7.55628" />
                              <Key frame="338" value="-35.6864" />
                              <Key frame="364" value="-35.6864" />
                              <Key frame="401" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="25" value="-6.58948" />
                              <Key frame="44" value="-6.67737" />
                              <Key frame="73" value="-3.68905" />
                              <Key frame="96" value="-3.68905" />
                              <Key frame="114" value="-3.68905" />
                              <Key frame="128" value="-3.68905" />
                              <Key frame="143" value="-3.68905" />
                              <Key frame="158" value="-3.68905" />
                              <Key frame="187" value="-3.68905" />
                              <Key frame="213" value="-3.68905" />
                              <Key frame="236" value="-3.68905" />
                              <Key frame="253" value="-3.68905" />
                              <Key frame="282" value="-3.68905" />
                              <Key frame="308" value="-3.68905" />
                              <Key frame="338" value="-6.85315" />
                              <Key frame="364" value="-6.94104" />
                              <Key frame="401" value="-3.68905" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.2711" />
                              <Key frame="96" value="-5.2711" />
                              <Key frame="114" value="-5.29" />
                              <Key frame="128" value="-5.29" />
                              <Key frame="143" value="-5.29" />
                              <Key frame="158" value="-5.2711" />
                              <Key frame="187" value="-5.2711" />
                              <Key frame="213" value="-5.18321" />
                              <Key frame="236" value="-5.2711" />
                              <Key frame="253" value="-5.29" />
                              <Key frame="282" value="-5.2711" />
                              <Key frame="308" value="-5.2711" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="96.156" />
                              <Key frame="44" value="97.2986" />
                              <Key frame="73" value="89.3004" />
                              <Key frame="96" value="62.2297" />
                              <Key frame="114" value="62.3176" />
                              <Key frame="128" value="72.3373" />
                              <Key frame="143" value="63.8997" />
                              <Key frame="158" value="63.9876" />
                              <Key frame="187" value="-78.5728" />
                              <Key frame="213" value="-77.8697" />
                              <Key frame="236" value="-84.901" />
                              <Key frame="253" value="4.13332" />
                              <Key frame="282" value="86.9273" />
                              <Key frame="308" value="93.9586" />
                              <Key frame="338" value="93.6071" />
                              <Key frame="364" value="93.5192" />
                              <Key frame="401" value="87.982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-15.0319" />
                              <Key frame="44" value="-29.0067" />
                              <Key frame="73" value="-12.5709" />
                              <Key frame="96" value="10.0173" />
                              <Key frame="114" value="9.66569" />
                              <Key frame="128" value="3.77694" />
                              <Key frame="143" value="8.61098" />
                              <Key frame="158" value="8.61098" />
                              <Key frame="187" value="-13.5377" />
                              <Key frame="213" value="-62.9329" />
                              <Key frame="236" value="4.2164" />
                              <Key frame="253" value="-14.944" />
                              <Key frame="282" value="-6.24271" />
                              <Key frame="308" value="-9.40682" />
                              <Key frame="338" value="-9.31893" />
                              <Key frame="364" value="-9.40682" />
                              <Key frame="401" value="-5.97904" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="0.964409" />
                              <Key frame="44" value="8.69887" />
                              <Key frame="73" value="13.7087" />
                              <Key frame="96" value="90.7897" />
                              <Key frame="114" value="90.7897" />
                              <Key frame="128" value="93.4265" />
                              <Key frame="143" value="87.8893" />
                              <Key frame="158" value="87.8893" />
                              <Key frame="187" value="8.87466" />
                              <Key frame="213" value="8.87466" />
                              <Key frame="236" value="14.8513" />
                              <Key frame="253" value="26.1893" />
                              <Key frame="282" value="10.1051" />
                              <Key frame="308" value="-0.705531" />
                              <Key frame="338" value="2.89802" />
                              <Key frame="364" value="0.876518" />
                              <Key frame="401" value="4.2164" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="793" y="763">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_请再说一次" id="24" localization="8" tooltip="Say some text with animations. The text can be localized." x="620" y="1041">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_站起" id="2" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="491" y="203">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_人脸识别" id="1" localization="-1" tooltip="This box makes the robot track people with different modes." x="331" y="552">
                        <bitmap>media/images/box/interaction/target_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                        <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                        <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                          <Choice value="Head" />
                          <Choice value="WholeBody" />
                          <Choice value="Move" />
                        </Parameter>
                        <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                          <Choice value="None" />
                          <Choice value="Arms" />
                          <Choice value="LArm" />
                          <Choice value="RArm" />
                        </Parameter>
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                        <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                        <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.01" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                        <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                      </Box>
                      <Box name="_请做一遍" id="4" localization="8" tooltip="Say some text. The text can be localized." x="100" y="525">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="那接下来请你做一遍！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_启动" id="7" localization="8" tooltip="Say some text. The text can be localized." x="125" y="31">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="我们先来做一个热身动作，请看我的示范！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="13" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="14" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="2" outputowner="14" indexofoutput="4" />
                      <Link inputowner="12" indexofinput="2" outputowner="10" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="16" indexofoutput="4" />
                      <Link inputowner="16" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="23" indexofinput="2" outputowner="9" indexofoutput="4" />
                      <Link inputowner="19" indexofinput="2" outputowner="23" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="22" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="18" indexofinput="2" outputowner="7" indexofoutput="4" />
                      <Link inputowner="16" indexofinput="2" outputowner="7" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_左右手_正向" id="3" localization="8" tooltip="" x="583" y="572">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="118.921">
                      <Box name="_暂停兩秒" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="705" y="54">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="RAction" id="1" localization="8" tooltip="" x="181" y="27">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="118.921">
                                <Box name="_暂停一秒" id="16" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="136" y="219">
                                  <bitmap>media/images/box/wait.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                  <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                  <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                  <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                </Box>
                                <Box name="_左右手慢动作" id="1" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="494" y="67">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="432">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Twinkle" id="1" localization="8" tooltip="NAO&apos;s selected LEDs flash on and off during the time defined in parameters." x="255" y="104">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Parameter name="LEDs group" inherits_from_parent="0" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="5">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Time to flash on (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                            <Parameter name="Time to flash off (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="7" />
                                            <Parameter name="Animation duration (s)" inherits_from_parent="0" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="8" />
                                            <Timeline enable="0">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                  <Diagram>
                                                    <Box name="Set LEDs" id="3" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="176" y="119">
                                                      <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash on (s)"))
        self.onReady() # activate output of the box]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                                      <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                                      <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                                        <Choice value="AllLeds" />
                                                        <Choice value="BrainLeds" />
                                                        <Choice value="ChestLeds" />
                                                        <Choice value="EarLeds" />
                                                        <Choice value="FaceLeds" />
                                                        <Choice value="FeetLeds" />
                                                        <Choice value="LeftEarLeds" />
                                                        <Choice value="LeftFaceLeds" />
                                                        <Choice value="LeftFootLeds" />
                                                        <Choice value="RightEarLeds" />
                                                        <Choice value="RightFaceLeds" />
                                                        <Choice value="RightFootLeds" />
                                                      </Parameter>
                                                      <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                                      <Parameter name="Time to flash on (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                                    </Box>
                                                    <Box name="Set LEDs" id="1" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="180" y="262">
                                                      <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash off (s)"))
        self.onReady() # activate output of the box]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                                      <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                                      <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                                        <Choice value="AllLeds" />
                                                        <Choice value="BrainLeds" />
                                                        <Choice value="ChestLeds" />
                                                        <Choice value="EarLeds" />
                                                        <Choice value="FaceLeds" />
                                                        <Choice value="FeetLeds" />
                                                        <Choice value="LeftEarLeds" />
                                                        <Choice value="LeftFaceLeds" />
                                                        <Choice value="LeftFootLeds" />
                                                        <Choice value="RightEarLeds" />
                                                        <Choice value="RightFaceLeds" />
                                                        <Choice value="RightFootLeds" />
                                                      </Parameter>
                                                      <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                                      <Parameter name="Time to flash off (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                                    </Box>
                                                    <Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="172" y="16">
                                                      <bitmap>media/images/box/wait.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Animation duration (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                      <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                      <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                      <Parameter name="Animation duration (s)" inherits_from_parent="1" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="5" />
                                                    </Box>
                                                    <Box name="Set LEDs" id="4" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="308" y="12">
                                                      <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., 0.1)
        self.onReady() # activate output of the box]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                                      <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                                      <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                                        <Choice value="AllLeds" />
                                                        <Choice value="BrainLeds" />
                                                        <Choice value="ChestLeds" />
                                                        <Choice value="EarLeds" />
                                                        <Choice value="FaceLeds" />
                                                        <Choice value="FeetLeds" />
                                                        <Choice value="LeftEarLeds" />
                                                        <Choice value="LeftFaceLeds" />
                                                        <Choice value="LeftFootLeds" />
                                                        <Choice value="RightEarLeds" />
                                                        <Choice value="RightFaceLeds" />
                                                        <Choice value="RightFootLeds" />
                                                      </Parameter>
                                                      <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                                    </Box>
                                                    <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                    <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                    <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                            </Timeline>
                                          </Box>
                                          <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="25" value="-13.6256" />
                                        <Key frame="49" value="-0.353968" />
                                        <Key frame="69" value="3.68905" />
                                        <Key frame="87" value="3.68905" />
                                        <Key frame="104" value="3.68905" />
                                        <Key frame="127" value="3.68905" />
                                        <Key frame="148" value="3.68905" />
                                        <Key frame="163" value="8.78677" />
                                        <Key frame="178" value="8.78677" />
                                        <Key frame="191" value="-10.901" />
                                        <Key frame="209" value="-5.97904" />
                                        <Key frame="227" value="-16.3503" />
                                        <Key frame="260" value="0.349159" />
                                        <Key frame="292" value="7.90786" />
                                        <Key frame="319" value="12.7419" />
                                        <Key frame="341" value="12.7419" />
                                        <Key frame="360" value="4.2164" />
                                        <Key frame="378" value="16.8728" />
                                        <Key frame="400" value="-13.0104" />
                                        <Key frame="432" value="-13.6256" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="25" value="-0.00240423" />
                                        <Key frame="49" value="-17.9323" />
                                        <Key frame="69" value="17.9275" />
                                        <Key frame="87" value="-13.362" />
                                        <Key frame="104" value="18.1033" />
                                        <Key frame="127" value="18.1033" />
                                        <Key frame="148" value="-10.3736" />
                                        <Key frame="163" value="-20.2175" />
                                        <Key frame="178" value="-20.2175" />
                                        <Key frame="191" value="-13.4498" />
                                        <Key frame="209" value="12.1267" />
                                        <Key frame="227" value="30.6718" />
                                        <Key frame="260" value="17.6638" />
                                        <Key frame="292" value="1.40386" />
                                        <Key frame="319" value="-15.2956" />
                                        <Key frame="341" value="31.5507" />
                                        <Key frame="360" value="-6.85796" />
                                        <Key frame="378" value="28.7382" />
                                        <Key frame="400" value="-27.0731" />
                                        <Key frame="432" value="-0.00240423" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="25" value="5.53478" />
                                        <Key frame="49" value="5.53478" />
                                        <Key frame="69" value="5.44688" />
                                        <Key frame="87" value="5.44688" />
                                        <Key frame="104" value="5.53478" />
                                        <Key frame="127" value="5.53478" />
                                        <Key frame="148" value="5.44688" />
                                        <Key frame="260" value="5.53478" />
                                        <Key frame="292" value="5.62267" />
                                        <Key frame="319" value="5.53478" />
                                        <Key frame="341" value="5.53478" />
                                        <Key frame="360" value="5.53478" />
                                        <Key frame="378" value="-10.901" />
                                        <Key frame="400" value="-28.0399" />
                                        <Key frame="432" value="5.62267" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="25" value="-6.67737" />
                                        <Key frame="49" value="-6.67737" />
                                        <Key frame="69" value="-6.67737" />
                                        <Key frame="87" value="-6.67737" />
                                        <Key frame="104" value="-6.67737" />
                                        <Key frame="127" value="-6.67737" />
                                        <Key frame="148" value="-6.67737" />
                                        <Key frame="260" value="-6.67737" />
                                        <Key frame="292" value="-6.58948" />
                                        <Key frame="319" value="-6.67737" />
                                        <Key frame="341" value="-6.67737" />
                                        <Key frame="360" value="-14.4118" />
                                        <Key frame="378" value="3.34228" />
                                        <Key frame="400" value="-12.1267" />
                                        <Key frame="432" value="-6.58948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="-22.41" />
                                        <Key frame="49" value="-22.41" />
                                        <Key frame="69" value="-23.2889" />
                                        <Key frame="87" value="-23.2889" />
                                        <Key frame="104" value="-23.2889" />
                                        <Key frame="116" value="-23.2889" />
                                        <Key frame="127" value="-23.2889" />
                                        <Key frame="138" value="-58.094" />
                                        <Key frame="148" value="-53.1721" />
                                        <Key frame="163" value="-53.5237" />
                                        <Key frame="178" value="-53.5237" />
                                        <Key frame="191" value="-53.5237" />
                                        <Key frame="209" value="-44.8224" />
                                        <Key frame="227" value="-82.7037" />
                                        <Key frame="260" value="-82.7037" />
                                        <Key frame="292" value="-24.6073" />
                                        <Key frame="319" value="-24.9589" />
                                        <Key frame="332" value="-58.2698" />
                                        <Key frame="341" value="-80.1549" />
                                        <Key frame="360" value="-81.4732" />
                                        <Key frame="378" value="-81.4732" />
                                        <Key frame="400" value="-87.6256" />
                                        <Key frame="417" value="-23.7284" />
                                        <Key frame="432" value="-23.9041" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="-69.8763" />
                                        <Key frame="49" value="-69.8763" />
                                        <Key frame="69" value="-69.0853" />
                                        <Key frame="87" value="-69.0853" />
                                        <Key frame="104" value="-82.2691" />
                                        <Key frame="116" value="-82.2691" />
                                        <Key frame="127" value="-82.2691" />
                                        <Key frame="138" value="-71.0189" />
                                        <Key frame="148" value="-0.705531" />
                                        <Key frame="163" value="-0.353968" />
                                        <Key frame="178" value="-0.353968" />
                                        <Key frame="191" value="-0.61764" />
                                        <Key frame="209" value="-77.1713" />
                                        <Key frame="227" value="-56.341" />
                                        <Key frame="260" value="-56.341" />
                                        <Key frame="292" value="12.3024" />
                                        <Key frame="319" value="11.7751" />
                                        <Key frame="332" value="4.30429" />
                                        <Key frame="341" value="-0.00240423" />
                                        <Key frame="360" value="-0.969218" />
                                        <Key frame="378" value="-0.969218" />
                                        <Key frame="400" value="-13.6256" />
                                        <Key frame="417" value="-73.4799" />
                                        <Key frame="432" value="-67.9427" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="25" value="0.3056" />
                                        <Key frame="49" value="0.3056" />
                                        <Key frame="69" value="0.8488" />
                                        <Key frame="87" value="0.8484" />
                                        <Key frame="104" value="0.8484" />
                                        <Key frame="116" value="0.8484" />
                                        <Key frame="127" value="0.8488" />
                                        <Key frame="138" value="0.8484" />
                                        <Key frame="148" value="0.8488" />
                                        <Key frame="163" value="0.8488" />
                                        <Key frame="178" value="0.8488" />
                                        <Key frame="191" value="0.8488" />
                                        <Key frame="209" value="0.8484" />
                                        <Key frame="227" value="0.8484" />
                                        <Key frame="260" value="0.8488" />
                                        <Key frame="292" value="0.8484" />
                                        <Key frame="319" value="0.8468" />
                                        <Key frame="332" value="0.8468" />
                                        <Key frame="341" value="0.8468" />
                                        <Key frame="360" value="0.8484" />
                                        <Key frame="378" value="0.8484" />
                                        <Key frame="400" value="0.8472" />
                                        <Key frame="417" value="0.3056" />
                                        <Key frame="432" value="0.3056" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="25" value="7.82477" />
                                        <Key frame="49" value="7.73688" />
                                        <Key frame="69" value="7.64898" />
                                        <Key frame="87" value="7.82477" />
                                        <Key frame="104" value="7.73688" />
                                        <Key frame="127" value="7.73688" />
                                        <Key frame="148" value="7.73688" />
                                        <Key frame="260" value="7.73688" />
                                        <Key frame="292" value="7.73688" />
                                        <Key frame="319" value="7.82477" />
                                        <Key frame="341" value="7.82477" />
                                        <Key frame="360" value="9.31893" />
                                        <Key frame="378" value="2.46338" />
                                        <Key frame="400" value="-30.6718" />
                                        <Key frame="432" value="8.08845" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="25" value="6.59429" />
                                        <Key frame="49" value="6.59429" />
                                        <Key frame="69" value="6.59429" />
                                        <Key frame="87" value="6.59429" />
                                        <Key frame="104" value="6.59429" />
                                        <Key frame="127" value="6.59429" />
                                        <Key frame="148" value="6.59429" />
                                        <Key frame="260" value="6.59429" />
                                        <Key frame="292" value="6.59429" />
                                        <Key frame="319" value="6.59429" />
                                        <Key frame="341" value="6.59429" />
                                        <Key frame="360" value="17.9323" />
                                        <Key frame="378" value="-14.9392" />
                                        <Key frame="400" value="24.7" />
                                        <Key frame="432" value="6.5064" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="25" value="-9.92936" />
                                        <Key frame="49" value="-9.92936" />
                                        <Key frame="69" value="-9.92936" />
                                        <Key frame="87" value="-10.0173" />
                                        <Key frame="104" value="-10.0173" />
                                        <Key frame="127" value="-9.92936" />
                                        <Key frame="148" value="-9.92936" />
                                        <Key frame="260" value="-9.92936" />
                                        <Key frame="292" value="-9.92936" />
                                        <Key frame="319" value="-9.92936" />
                                        <Key frame="341" value="-9.92936" />
                                        <Key frame="360" value="-9.84147" />
                                        <Key frame="378" value="-13.7966" />
                                        <Key frame="400" value="-33.0449" />
                                        <Key frame="432" value="-9.92936" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="25" value="-5.18802" />
                                        <Key frame="49" value="-5.18802" />
                                        <Key frame="69" value="-5.27591" />
                                        <Key frame="87" value="-5.29" />
                                        <Key frame="104" value="-5.27591" />
                                        <Key frame="127" value="-5.27591" />
                                        <Key frame="148" value="-5.27591" />
                                        <Key frame="260" value="-5.18802" />
                                        <Key frame="292" value="-5.18802" />
                                        <Key frame="319" value="-5.10013" />
                                        <Key frame="341" value="-5.18802" />
                                        <Key frame="360" value="-5.27591" />
                                        <Key frame="378" value="24.2557" />
                                        <Key frame="400" value="76.5513" />
                                        <Key frame="432" value="-5.27591" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="85.5163" />
                                        <Key frame="49" value="85.5163" />
                                        <Key frame="69" value="22.7616" />
                                        <Key frame="87" value="22.7616" />
                                        <Key frame="104" value="24.7831" />
                                        <Key frame="116" value="24.7831" />
                                        <Key frame="127" value="24.871" />
                                        <Key frame="138" value="13.7087" />
                                        <Key frame="148" value="4.12851" />
                                        <Key frame="163" value="7.46839" />
                                        <Key frame="178" value="9.05044" />
                                        <Key frame="191" value="5.44688" />
                                        <Key frame="209" value="12.8298" />
                                        <Key frame="227" value="-39.5537" />
                                        <Key frame="260" value="-39.5537" />
                                        <Key frame="292" value="35.6816" />
                                        <Key frame="319" value="37.9668" />
                                        <Key frame="332" value="52.7326" />
                                        <Key frame="341" value="81.9127" />
                                        <Key frame="360" value="81.2974" />
                                        <Key frame="378" value="81.3853" />
                                        <Key frame="400" value="65.4769" />
                                        <Key frame="417" value="82.0885" />
                                        <Key frame="432" value="86.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="7.46839" />
                                        <Key frame="49" value="7.46839" />
                                        <Key frame="69" value="0.788627" />
                                        <Key frame="87" value="0.788627" />
                                        <Key frame="104" value="0.612832" />
                                        <Key frame="116" value="0.612832" />
                                        <Key frame="127" value="0.612832" />
                                        <Key frame="138" value="-8.44001" />
                                        <Key frame="148" value="-15.9987" />
                                        <Key frame="163" value="-14.153" />
                                        <Key frame="178" value="-14.2409" />
                                        <Key frame="191" value="-14.153" />
                                        <Key frame="209" value="-4.04543" />
                                        <Key frame="227" value="17.4002" />
                                        <Key frame="260" value="17.3123" />
                                        <Key frame="292" value="-18" />
                                        <Key frame="319" value="-15.2956" />
                                        <Key frame="332" value="21.5311" />
                                        <Key frame="341" value="42.4493" />
                                        <Key frame="360" value="44.7345" />
                                        <Key frame="378" value="44.2071" />
                                        <Key frame="400" value="38.9336" />
                                        <Key frame="417" value="19.3338" />
                                        <Key frame="432" value="7.46839" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="8.4352" />
                                        <Key frame="49" value="8.25942" />
                                        <Key frame="69" value="65.6527" />
                                        <Key frame="87" value="65.6527" />
                                        <Key frame="104" value="-101.342" />
                                        <Key frame="116" value="-101.342" />
                                        <Key frame="127" value="-101.254" />
                                        <Key frame="138" value="-44.5635" />
                                        <Key frame="148" value="-15.9108" />
                                        <Key frame="163" value="-17.7565" />
                                        <Key frame="178" value="-17.6686" />
                                        <Key frame="191" value="-17.6686" />
                                        <Key frame="209" value="-17.3171" />
                                        <Key frame="227" value="-48.5186" />
                                        <Key frame="260" value="-48.5186" />
                                        <Key frame="292" value="-26.4578" />
                                        <Key frame="319" value="-27.8641" />
                                        <Key frame="332" value="-41.9268" />
                                        <Key frame="341" value="-51.6827" />
                                        <Key frame="360" value="-52.7374" />
                                        <Key frame="378" value="-52.7374" />
                                        <Key frame="400" value="-22.1511" />
                                        <Key frame="417" value="5.2711" />
                                        <Key frame="432" value="5.09532" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="25" value="5.89115" />
                                        <Key frame="49" value="5.89115" />
                                        <Key frame="69" value="5.80326" />
                                        <Key frame="87" value="5.80326" />
                                        <Key frame="104" value="5.80326" />
                                        <Key frame="127" value="5.89115" />
                                        <Key frame="148" value="5.89115" />
                                        <Key frame="260" value="5.80326" />
                                        <Key frame="292" value="5.97904" />
                                        <Key frame="319" value="5.89115" />
                                        <Key frame="341" value="5.89115" />
                                        <Key frame="360" value="-5.44688" />
                                        <Key frame="378" value="-21.0037" />
                                        <Key frame="400" value="-37.4395" />
                                        <Key frame="432" value="6.06693" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="25" value="4.22121" />
                                        <Key frame="49" value="4.3091" />
                                        <Key frame="69" value="4.22121" />
                                        <Key frame="87" value="4.3091" />
                                        <Key frame="104" value="4.3091" />
                                        <Key frame="127" value="4.22121" />
                                        <Key frame="148" value="4.3091" />
                                        <Key frame="260" value="4.22121" />
                                        <Key frame="292" value="4.13332" />
                                        <Key frame="319" value="4.22121" />
                                        <Key frame="341" value="4.22121" />
                                        <Key frame="360" value="0.441859" />
                                        <Key frame="378" value="22.4148" />
                                        <Key frame="400" value="1.23289" />
                                        <Key frame="432" value="4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="22.3269" />
                                        <Key frame="49" value="23.03" />
                                        <Key frame="69" value="23.03" />
                                        <Key frame="87" value="23.9968" />
                                        <Key frame="104" value="23.9968" />
                                        <Key frame="116" value="70.14" />
                                        <Key frame="127" value="68.9974" />
                                        <Key frame="138" value="64.8665" />
                                        <Key frame="148" value="64.7786" />
                                        <Key frame="163" value="17.1413" />
                                        <Key frame="178" value="39.2021" />
                                        <Key frame="191" value="88.4215" />
                                        <Key frame="209" value="87.8941" />
                                        <Key frame="227" value="87.8062" />
                                        <Key frame="260" value="39.0263" />
                                        <Key frame="292" value="39.0263" />
                                        <Key frame="319" value="77.2592" />
                                        <Key frame="332" value="73.4799" />
                                        <Key frame="341" value="73.5678" />
                                        <Key frame="360" value="74.2709" />
                                        <Key frame="378" value="74.183" />
                                        <Key frame="400" value="72.7768" />
                                        <Key frame="417" value="23.909" />
                                        <Key frame="432" value="23.9968" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="67.4106" />
                                        <Key frame="49" value="66.1801" />
                                        <Key frame="69" value="66.1801" />
                                        <Key frame="87" value="105.028" />
                                        <Key frame="104" value="104.94" />
                                        <Key frame="116" value="72.4204" />
                                        <Key frame="127" value="8.08364" />
                                        <Key frame="138" value="-0.881327" />
                                        <Key frame="148" value="-0.881327" />
                                        <Key frame="163" value="-41.2236" />
                                        <Key frame="178" value="76.5513" />
                                        <Key frame="191" value="62.2249" />
                                        <Key frame="209" value="62.5765" />
                                        <Key frame="227" value="62.5765" />
                                        <Key frame="260" value="-5.27591" />
                                        <Key frame="292" value="-5.27591" />
                                        <Key frame="319" value="-16.4382" />
                                        <Key frame="332" value="-14.4166" />
                                        <Key frame="341" value="-13.7135" />
                                        <Key frame="360" value="-12.483" />
                                        <Key frame="378" value="-12.7467" />
                                        <Key frame="400" value="-11.0768" />
                                        <Key frame="417" value="67.4984" />
                                        <Key frame="432" value="66.6195" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="25" value="0.31" />
                                        <Key frame="49" value="0.9304" />
                                        <Key frame="69" value="0.9304" />
                                        <Key frame="87" value="0.9304" />
                                        <Key frame="104" value="0.9304" />
                                        <Key frame="116" value="0.9304" />
                                        <Key frame="127" value="0.9304" />
                                        <Key frame="138" value="0.9304" />
                                        <Key frame="148" value="0.9304" />
                                        <Key frame="163" value="0.9304" />
                                        <Key frame="178" value="0.9304" />
                                        <Key frame="191" value="0.9304" />
                                        <Key frame="209" value="0.9304" />
                                        <Key frame="227" value="0.9304" />
                                        <Key frame="260" value="0.9304" />
                                        <Key frame="292" value="0.9304" />
                                        <Key frame="319" value="0.9284" />
                                        <Key frame="332" value="0.9284" />
                                        <Key frame="341" value="0.9284" />
                                        <Key frame="360" value="0.9304" />
                                        <Key frame="378" value="0.9304" />
                                        <Key frame="400" value="0.9284" />
                                        <Key frame="417" value="0.3096" />
                                        <Key frame="432" value="0.3064" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="25" value="7.55628" />
                                        <Key frame="49" value="7.55628" />
                                        <Key frame="69" value="7.46839" />
                                        <Key frame="87" value="7.55628" />
                                        <Key frame="104" value="7.55628" />
                                        <Key frame="127" value="7.55628" />
                                        <Key frame="148" value="7.3805" />
                                        <Key frame="260" value="7.46839" />
                                        <Key frame="292" value="7.55628" />
                                        <Key frame="319" value="7.55628" />
                                        <Key frame="341" value="7.55628" />
                                        <Key frame="360" value="7.64417" />
                                        <Key frame="378" value="7.55628" />
                                        <Key frame="400" value="-4.39699" />
                                        <Key frame="432" value="7.46839" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="25" value="-3.68905" />
                                        <Key frame="49" value="-3.68905" />
                                        <Key frame="69" value="-3.68905" />
                                        <Key frame="87" value="-3.68905" />
                                        <Key frame="104" value="-3.68905" />
                                        <Key frame="127" value="-3.68905" />
                                        <Key frame="148" value="-3.68905" />
                                        <Key frame="260" value="-3.68905" />
                                        <Key frame="292" value="-3.68905" />
                                        <Key frame="319" value="-3.68905" />
                                        <Key frame="341" value="-3.68905" />
                                        <Key frame="360" value="2.63916" />
                                        <Key frame="378" value="-38.4942" />
                                        <Key frame="400" value="4.39699" />
                                        <Key frame="432" value="-3.77694" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="25" value="-9.92936" />
                                        <Key frame="49" value="-9.92936" />
                                        <Key frame="69" value="-9.92936" />
                                        <Key frame="87" value="-10.0173" />
                                        <Key frame="104" value="-10.0173" />
                                        <Key frame="127" value="-9.92936" />
                                        <Key frame="148" value="-9.92936" />
                                        <Key frame="260" value="-9.92936" />
                                        <Key frame="292" value="-9.92936" />
                                        <Key frame="319" value="-9.92936" />
                                        <Key frame="341" value="-9.92936" />
                                        <Key frame="360" value="-9.84147" />
                                        <Key frame="378" value="-13.7966" />
                                        <Key frame="400" value="-33.0449" />
                                        <Key frame="432" value="-9.92936" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="25" value="-5.2711" />
                                        <Key frame="49" value="-5.2711" />
                                        <Key frame="69" value="-5.29" />
                                        <Key frame="87" value="-5.29" />
                                        <Key frame="104" value="-5.29" />
                                        <Key frame="127" value="-5.29" />
                                        <Key frame="148" value="-5.2711" />
                                        <Key frame="260" value="-5.2711" />
                                        <Key frame="292" value="-5.2711" />
                                        <Key frame="319" value="-5.2711" />
                                        <Key frame="341" value="-5.2711" />
                                        <Key frame="360" value="7.56109" />
                                        <Key frame="378" value="26.1063" />
                                        <Key frame="400" value="66.8001" />
                                        <Key frame="432" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="85.6968" />
                                        <Key frame="49" value="26.6336" />
                                        <Key frame="69" value="26.7215" />
                                        <Key frame="87" value="26.5457" />
                                        <Key frame="104" value="26.5457" />
                                        <Key frame="116" value="25.6668" />
                                        <Key frame="127" value="19.8659" />
                                        <Key frame="138" value="29.7098" />
                                        <Key frame="148" value="31.9071" />
                                        <Key frame="163" value="37.6201" />
                                        <Key frame="178" value="28.2156" />
                                        <Key frame="191" value="-35.5937" />
                                        <Key frame="209" value="-32.8691" />
                                        <Key frame="227" value="-32.8691" />
                                        <Key frame="260" value="58.4504" />
                                        <Key frame="292" value="58.5383" />
                                        <Key frame="319" value="62.4055" />
                                        <Key frame="332" value="62.2297" />
                                        <Key frame="341" value="67.2396" />
                                        <Key frame="360" value="67.679" />
                                        <Key frame="378" value="67.679" />
                                        <Key frame="400" value="66.4486" />
                                        <Key frame="417" value="79.0171" />
                                        <Key frame="432" value="85.2574" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="-5.45169" />
                                        <Key frame="49" value="4.39218" />
                                        <Key frame="69" value="4.39218" />
                                        <Key frame="87" value="9.48991" />
                                        <Key frame="104" value="9.48991" />
                                        <Key frame="116" value="18" />
                                        <Key frame="127" value="18" />
                                        <Key frame="138" value="18" />
                                        <Key frame="148" value="18" />
                                        <Key frame="163" value="-9.23104" />
                                        <Key frame="178" value="-13.6256" />
                                        <Key frame="191" value="-14.944" />
                                        <Key frame="209" value="-14.5924" />
                                        <Key frame="227" value="-14.944" />
                                        <Key frame="260" value="17.5759" />
                                        <Key frame="292" value="17.4002" />
                                        <Key frame="319" value="-34.8954" />
                                        <Key frame="332" value="-34.9833" />
                                        <Key frame="341" value="-34.9833" />
                                        <Key frame="360" value="-36.5654" />
                                        <Key frame="378" value="-36.6533" />
                                        <Key frame="400" value="-36.1259" />
                                        <Key frame="417" value="-18.2839" />
                                        <Key frame="432" value="-5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="3.33748" />
                                        <Key frame="49" value="-66.3607" />
                                        <Key frame="69" value="-66.3607" />
                                        <Key frame="87" value="68.5531" />
                                        <Key frame="104" value="68.5531" />
                                        <Key frame="116" value="32.166" />
                                        <Key frame="127" value="4.48007" />
                                        <Key frame="138" value="1.49175" />
                                        <Key frame="148" value="1.57965" />
                                        <Key frame="163" value="36.0332" />
                                        <Key frame="178" value="-20.1296" />
                                        <Key frame="191" value="55.9846" />
                                        <Key frame="209" value="55.0178" />
                                        <Key frame="227" value="55.0178" />
                                        <Key frame="260" value="39.8125" />
                                        <Key frame="292" value="39.8125" />
                                        <Key frame="319" value="54.1389" />
                                        <Key frame="332" value="48.6017" />
                                        <Key frame="341" value="48.5138" />
                                        <Key frame="360" value="47.2834" />
                                        <Key frame="378" value="47.2834" />
                                        <Key frame="400" value="46.5802" />
                                        <Key frame="417" value="2.28279" />
                                        <Key frame="432" value="7.55628" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="_问再一遍" id="22" localization="8" tooltip="Say some text. The text can be localized." x="811" y="68">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="看清楚了么？需要我再做一遍么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_左右手慢动作" id="2" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="203" y="435">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="432">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Twinkle" id="1" localization="8" tooltip="NAO&apos;s selected LEDs flash on and off during the time defined in parameters." x="255" y="104">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Parameter name="LEDs group" inherits_from_parent="0" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="5">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Time to flash on (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                            <Parameter name="Time to flash off (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="7" />
                                            <Parameter name="Animation duration (s)" inherits_from_parent="0" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="8" />
                                            <Timeline enable="0">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                  <Diagram>
                                                    <Box name="Set LEDs" id="3" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="176" y="119">
                                                      <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash on (s)"))
        self.onReady() # activate output of the box]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                                      <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                                      <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                                        <Choice value="AllLeds" />
                                                        <Choice value="BrainLeds" />
                                                        <Choice value="ChestLeds" />
                                                        <Choice value="EarLeds" />
                                                        <Choice value="FaceLeds" />
                                                        <Choice value="FeetLeds" />
                                                        <Choice value="LeftEarLeds" />
                                                        <Choice value="LeftFaceLeds" />
                                                        <Choice value="LeftFootLeds" />
                                                        <Choice value="RightEarLeds" />
                                                        <Choice value="RightFaceLeds" />
                                                        <Choice value="RightFootLeds" />
                                                      </Parameter>
                                                      <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                                      <Parameter name="Time to flash on (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                                    </Box>
                                                    <Box name="Set LEDs" id="1" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="180" y="262">
                                                      <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash off (s)"))
        self.onReady() # activate output of the box]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                                      <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                                      <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                                        <Choice value="AllLeds" />
                                                        <Choice value="BrainLeds" />
                                                        <Choice value="ChestLeds" />
                                                        <Choice value="EarLeds" />
                                                        <Choice value="FaceLeds" />
                                                        <Choice value="FeetLeds" />
                                                        <Choice value="LeftEarLeds" />
                                                        <Choice value="LeftFaceLeds" />
                                                        <Choice value="LeftFootLeds" />
                                                        <Choice value="RightEarLeds" />
                                                        <Choice value="RightFaceLeds" />
                                                        <Choice value="RightFootLeds" />
                                                      </Parameter>
                                                      <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                                      <Parameter name="Time to flash off (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                                    </Box>
                                                    <Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="172" y="16">
                                                      <bitmap>media/images/box/wait.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Animation duration (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                                      <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                                      <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                                      <Parameter name="Animation duration (s)" inherits_from_parent="1" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="5" />
                                                    </Box>
                                                    <Box name="Set LEDs" id="4" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="308" y="12">
                                                      <bitmap>media/images/box/interaction/LED.png</bitmap>
                                                      <script language="4">
                                                        <content>
                                                          <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., 0.1)
        self.onReady() # activate output of the box]]>
                                                        </content>
                                                      </script>
                                                      <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                                      <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                                      <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                                      <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                                        <Choice value="AllLeds" />
                                                        <Choice value="BrainLeds" />
                                                        <Choice value="ChestLeds" />
                                                        <Choice value="EarLeds" />
                                                        <Choice value="FaceLeds" />
                                                        <Choice value="FeetLeds" />
                                                        <Choice value="LeftEarLeds" />
                                                        <Choice value="LeftFaceLeds" />
                                                        <Choice value="LeftFootLeds" />
                                                        <Choice value="RightEarLeds" />
                                                        <Choice value="RightFaceLeds" />
                                                        <Choice value="RightFootLeds" />
                                                      </Parameter>
                                                      <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                                    </Box>
                                                    <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                    <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                                    <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                                    <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                                    <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                                    <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                                  </Diagram>
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                            </Timeline>
                                          </Box>
                                          <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="25" value="-13.6256" />
                                        <Key frame="49" value="-0.353968" />
                                        <Key frame="69" value="3.68905" />
                                        <Key frame="87" value="3.68905" />
                                        <Key frame="104" value="3.68905" />
                                        <Key frame="127" value="3.68905" />
                                        <Key frame="148" value="3.68905" />
                                        <Key frame="163" value="8.78677" />
                                        <Key frame="178" value="8.78677" />
                                        <Key frame="191" value="-10.901" />
                                        <Key frame="209" value="-5.97904" />
                                        <Key frame="227" value="-16.3503" />
                                        <Key frame="260" value="0.349159" />
                                        <Key frame="292" value="7.90786" />
                                        <Key frame="319" value="12.7419" />
                                        <Key frame="341" value="12.7419" />
                                        <Key frame="360" value="4.2164" />
                                        <Key frame="378" value="16.8728" />
                                        <Key frame="400" value="-13.0104" />
                                        <Key frame="432" value="-13.6256" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="25" value="-0.00240423" />
                                        <Key frame="49" value="-17.9323" />
                                        <Key frame="69" value="17.9275" />
                                        <Key frame="87" value="-13.362" />
                                        <Key frame="104" value="18.1033" />
                                        <Key frame="127" value="18.1033" />
                                        <Key frame="148" value="-10.3736" />
                                        <Key frame="163" value="-20.2175" />
                                        <Key frame="178" value="-20.2175" />
                                        <Key frame="191" value="-13.4498" />
                                        <Key frame="209" value="12.1267" />
                                        <Key frame="227" value="30.6718" />
                                        <Key frame="260" value="17.6638" />
                                        <Key frame="292" value="1.40386" />
                                        <Key frame="319" value="-15.2956" />
                                        <Key frame="341" value="31.5507" />
                                        <Key frame="360" value="-6.85796" />
                                        <Key frame="378" value="28.7382" />
                                        <Key frame="400" value="-27.0731" />
                                        <Key frame="432" value="-0.00240423" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="25" value="5.53478" />
                                        <Key frame="49" value="5.53478" />
                                        <Key frame="69" value="5.44688" />
                                        <Key frame="87" value="5.44688" />
                                        <Key frame="104" value="5.53478" />
                                        <Key frame="127" value="5.53478" />
                                        <Key frame="148" value="5.44688" />
                                        <Key frame="260" value="5.53478" />
                                        <Key frame="292" value="5.62267" />
                                        <Key frame="319" value="5.53478" />
                                        <Key frame="341" value="5.53478" />
                                        <Key frame="360" value="5.53478" />
                                        <Key frame="378" value="-10.901" />
                                        <Key frame="400" value="-28.0399" />
                                        <Key frame="432" value="5.62267" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="25" value="-6.67737" />
                                        <Key frame="49" value="-6.67737" />
                                        <Key frame="69" value="-6.67737" />
                                        <Key frame="87" value="-6.67737" />
                                        <Key frame="104" value="-6.67737" />
                                        <Key frame="127" value="-6.67737" />
                                        <Key frame="148" value="-6.67737" />
                                        <Key frame="260" value="-6.67737" />
                                        <Key frame="292" value="-6.58948" />
                                        <Key frame="319" value="-6.67737" />
                                        <Key frame="341" value="-6.67737" />
                                        <Key frame="360" value="-14.4118" />
                                        <Key frame="378" value="3.34228" />
                                        <Key frame="400" value="-12.1267" />
                                        <Key frame="432" value="-6.58948" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="-22.41" />
                                        <Key frame="49" value="-22.41" />
                                        <Key frame="69" value="-23.2889" />
                                        <Key frame="87" value="-23.2889" />
                                        <Key frame="104" value="-23.2889" />
                                        <Key frame="116" value="-23.2889" />
                                        <Key frame="127" value="-23.2889" />
                                        <Key frame="138" value="-58.094" />
                                        <Key frame="148" value="-53.1721" />
                                        <Key frame="163" value="-53.5237" />
                                        <Key frame="178" value="-53.5237" />
                                        <Key frame="191" value="-53.5237" />
                                        <Key frame="209" value="-44.8224" />
                                        <Key frame="227" value="-82.7037" />
                                        <Key frame="260" value="-82.7037" />
                                        <Key frame="292" value="-24.6073" />
                                        <Key frame="319" value="-24.9589" />
                                        <Key frame="332" value="-58.2698" />
                                        <Key frame="341" value="-80.1549" />
                                        <Key frame="360" value="-81.4732" />
                                        <Key frame="378" value="-81.4732" />
                                        <Key frame="400" value="-87.6256" />
                                        <Key frame="417" value="-23.7284" />
                                        <Key frame="432" value="-23.9041" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="-69.8763" />
                                        <Key frame="49" value="-69.8763" />
                                        <Key frame="69" value="-69.0853" />
                                        <Key frame="87" value="-69.0853" />
                                        <Key frame="104" value="-82.2691" />
                                        <Key frame="116" value="-82.2691" />
                                        <Key frame="127" value="-82.2691" />
                                        <Key frame="138" value="-71.0189" />
                                        <Key frame="148" value="-0.705531" />
                                        <Key frame="163" value="-0.353968" />
                                        <Key frame="178" value="-0.353968" />
                                        <Key frame="191" value="-0.61764" />
                                        <Key frame="209" value="-77.1713" />
                                        <Key frame="227" value="-56.341" />
                                        <Key frame="260" value="-56.341" />
                                        <Key frame="292" value="12.3024" />
                                        <Key frame="319" value="11.7751" />
                                        <Key frame="332" value="4.30429" />
                                        <Key frame="341" value="-0.00240423" />
                                        <Key frame="360" value="-0.969218" />
                                        <Key frame="378" value="-0.969218" />
                                        <Key frame="400" value="-13.6256" />
                                        <Key frame="417" value="-73.4799" />
                                        <Key frame="432" value="-67.9427" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="25" value="0.3056" />
                                        <Key frame="49" value="0.3056" />
                                        <Key frame="69" value="0.8488" />
                                        <Key frame="87" value="0.8484" />
                                        <Key frame="104" value="0.8484" />
                                        <Key frame="116" value="0.8484" />
                                        <Key frame="127" value="0.8488" />
                                        <Key frame="138" value="0.8484" />
                                        <Key frame="148" value="0.8488" />
                                        <Key frame="163" value="0.8488" />
                                        <Key frame="178" value="0.8488" />
                                        <Key frame="191" value="0.8488" />
                                        <Key frame="209" value="0.8484" />
                                        <Key frame="227" value="0.8484" />
                                        <Key frame="260" value="0.8488" />
                                        <Key frame="292" value="0.8484" />
                                        <Key frame="319" value="0.8468" />
                                        <Key frame="332" value="0.8468" />
                                        <Key frame="341" value="0.8468" />
                                        <Key frame="360" value="0.8484" />
                                        <Key frame="378" value="0.8484" />
                                        <Key frame="400" value="0.8472" />
                                        <Key frame="417" value="0.3056" />
                                        <Key frame="432" value="0.3056" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="25" value="7.82477" />
                                        <Key frame="49" value="7.73688" />
                                        <Key frame="69" value="7.64898" />
                                        <Key frame="87" value="7.82477" />
                                        <Key frame="104" value="7.73688" />
                                        <Key frame="127" value="7.73688" />
                                        <Key frame="148" value="7.73688" />
                                        <Key frame="260" value="7.73688" />
                                        <Key frame="292" value="7.73688" />
                                        <Key frame="319" value="7.82477" />
                                        <Key frame="341" value="7.82477" />
                                        <Key frame="360" value="9.31893" />
                                        <Key frame="378" value="2.46338" />
                                        <Key frame="400" value="-30.6718" />
                                        <Key frame="432" value="8.08845" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="25" value="6.59429" />
                                        <Key frame="49" value="6.59429" />
                                        <Key frame="69" value="6.59429" />
                                        <Key frame="87" value="6.59429" />
                                        <Key frame="104" value="6.59429" />
                                        <Key frame="127" value="6.59429" />
                                        <Key frame="148" value="6.59429" />
                                        <Key frame="260" value="6.59429" />
                                        <Key frame="292" value="6.59429" />
                                        <Key frame="319" value="6.59429" />
                                        <Key frame="341" value="6.59429" />
                                        <Key frame="360" value="17.9323" />
                                        <Key frame="378" value="-14.9392" />
                                        <Key frame="400" value="24.7" />
                                        <Key frame="432" value="6.5064" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="25" value="-9.92936" />
                                        <Key frame="49" value="-9.92936" />
                                        <Key frame="69" value="-9.92936" />
                                        <Key frame="87" value="-10.0173" />
                                        <Key frame="104" value="-10.0173" />
                                        <Key frame="127" value="-9.92936" />
                                        <Key frame="148" value="-9.92936" />
                                        <Key frame="260" value="-9.92936" />
                                        <Key frame="292" value="-9.92936" />
                                        <Key frame="319" value="-9.92936" />
                                        <Key frame="341" value="-9.92936" />
                                        <Key frame="360" value="-9.84147" />
                                        <Key frame="378" value="-13.7966" />
                                        <Key frame="400" value="-33.0449" />
                                        <Key frame="432" value="-9.92936" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="25" value="-5.18802" />
                                        <Key frame="49" value="-5.18802" />
                                        <Key frame="69" value="-5.27591" />
                                        <Key frame="87" value="-5.29" />
                                        <Key frame="104" value="-5.27591" />
                                        <Key frame="127" value="-5.27591" />
                                        <Key frame="148" value="-5.27591" />
                                        <Key frame="260" value="-5.18802" />
                                        <Key frame="292" value="-5.18802" />
                                        <Key frame="319" value="-5.10013" />
                                        <Key frame="341" value="-5.18802" />
                                        <Key frame="360" value="-5.27591" />
                                        <Key frame="378" value="24.2557" />
                                        <Key frame="400" value="76.5513" />
                                        <Key frame="432" value="-5.27591" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="85.5163" />
                                        <Key frame="49" value="85.5163" />
                                        <Key frame="69" value="22.7616" />
                                        <Key frame="87" value="22.7616" />
                                        <Key frame="104" value="24.7831" />
                                        <Key frame="116" value="24.7831" />
                                        <Key frame="127" value="24.871" />
                                        <Key frame="138" value="13.7087" />
                                        <Key frame="148" value="4.12851" />
                                        <Key frame="163" value="7.46839" />
                                        <Key frame="178" value="9.05044" />
                                        <Key frame="191" value="5.44688" />
                                        <Key frame="209" value="12.8298" />
                                        <Key frame="227" value="-39.5537" />
                                        <Key frame="260" value="-39.5537" />
                                        <Key frame="292" value="35.6816" />
                                        <Key frame="319" value="37.9668" />
                                        <Key frame="332" value="52.7326" />
                                        <Key frame="341" value="81.9127" />
                                        <Key frame="360" value="81.2974" />
                                        <Key frame="378" value="81.3853" />
                                        <Key frame="400" value="65.4769" />
                                        <Key frame="417" value="82.0885" />
                                        <Key frame="432" value="86.2194" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="7.46839" />
                                        <Key frame="49" value="7.46839" />
                                        <Key frame="69" value="0.788627" />
                                        <Key frame="87" value="0.788627" />
                                        <Key frame="104" value="0.612832" />
                                        <Key frame="116" value="0.612832" />
                                        <Key frame="127" value="0.612832" />
                                        <Key frame="138" value="-8.44001" />
                                        <Key frame="148" value="-15.9987" />
                                        <Key frame="163" value="-14.153" />
                                        <Key frame="178" value="-14.2409" />
                                        <Key frame="191" value="-14.153" />
                                        <Key frame="209" value="-4.04543" />
                                        <Key frame="227" value="17.4002" />
                                        <Key frame="260" value="17.3123" />
                                        <Key frame="292" value="-18" />
                                        <Key frame="319" value="-15.2956" />
                                        <Key frame="332" value="21.5311" />
                                        <Key frame="341" value="42.4493" />
                                        <Key frame="360" value="44.7345" />
                                        <Key frame="378" value="44.2071" />
                                        <Key frame="400" value="38.9336" />
                                        <Key frame="417" value="19.3338" />
                                        <Key frame="432" value="7.46839" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="8.4352" />
                                        <Key frame="49" value="8.25942" />
                                        <Key frame="69" value="65.6527" />
                                        <Key frame="87" value="65.6527" />
                                        <Key frame="104" value="-101.342" />
                                        <Key frame="116" value="-101.342" />
                                        <Key frame="127" value="-101.254" />
                                        <Key frame="138" value="-44.5635" />
                                        <Key frame="148" value="-15.9108" />
                                        <Key frame="163" value="-17.7565" />
                                        <Key frame="178" value="-17.6686" />
                                        <Key frame="191" value="-17.6686" />
                                        <Key frame="209" value="-17.3171" />
                                        <Key frame="227" value="-48.5186" />
                                        <Key frame="260" value="-48.5186" />
                                        <Key frame="292" value="-26.4578" />
                                        <Key frame="319" value="-27.8641" />
                                        <Key frame="332" value="-41.9268" />
                                        <Key frame="341" value="-51.6827" />
                                        <Key frame="360" value="-52.7374" />
                                        <Key frame="378" value="-52.7374" />
                                        <Key frame="400" value="-22.1511" />
                                        <Key frame="417" value="5.2711" />
                                        <Key frame="432" value="5.09532" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="25" value="5.89115" />
                                        <Key frame="49" value="5.89115" />
                                        <Key frame="69" value="5.80326" />
                                        <Key frame="87" value="5.80326" />
                                        <Key frame="104" value="5.80326" />
                                        <Key frame="127" value="5.89115" />
                                        <Key frame="148" value="5.89115" />
                                        <Key frame="260" value="5.80326" />
                                        <Key frame="292" value="5.97904" />
                                        <Key frame="319" value="5.89115" />
                                        <Key frame="341" value="5.89115" />
                                        <Key frame="360" value="-5.44688" />
                                        <Key frame="378" value="-21.0037" />
                                        <Key frame="400" value="-37.4395" />
                                        <Key frame="432" value="6.06693" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="25" value="4.22121" />
                                        <Key frame="49" value="4.3091" />
                                        <Key frame="69" value="4.22121" />
                                        <Key frame="87" value="4.3091" />
                                        <Key frame="104" value="4.3091" />
                                        <Key frame="127" value="4.22121" />
                                        <Key frame="148" value="4.3091" />
                                        <Key frame="260" value="4.22121" />
                                        <Key frame="292" value="4.13332" />
                                        <Key frame="319" value="4.22121" />
                                        <Key frame="341" value="4.22121" />
                                        <Key frame="360" value="0.441859" />
                                        <Key frame="378" value="22.4148" />
                                        <Key frame="400" value="1.23289" />
                                        <Key frame="432" value="4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="25" value="22.3269" />
                                        <Key frame="49" value="23.03" />
                                        <Key frame="69" value="23.03" />
                                        <Key frame="87" value="23.9968" />
                                        <Key frame="104" value="23.9968" />
                                        <Key frame="116" value="70.14" />
                                        <Key frame="127" value="68.9974" />
                                        <Key frame="138" value="64.8665" />
                                        <Key frame="148" value="64.7786" />
                                        <Key frame="163" value="17.1413" />
                                        <Key frame="178" value="39.2021" />
                                        <Key frame="191" value="88.4215" />
                                        <Key frame="209" value="87.8941" />
                                        <Key frame="227" value="87.8062" />
                                        <Key frame="260" value="39.0263" />
                                        <Key frame="292" value="39.0263" />
                                        <Key frame="319" value="77.2592" />
                                        <Key frame="332" value="73.4799" />
                                        <Key frame="341" value="73.5678" />
                                        <Key frame="360" value="74.2709" />
                                        <Key frame="378" value="74.183" />
                                        <Key frame="400" value="72.7768" />
                                        <Key frame="417" value="23.909" />
                                        <Key frame="432" value="23.9968" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="25" value="67.4106" />
                                        <Key frame="49" value="66.1801" />
                                        <Key frame="69" value="66.1801" />
                                        <Key frame="87" value="105.028" />
                                        <Key frame="104" value="104.94" />
                                        <Key frame="116" value="72.4204" />
                                        <Key frame="127" value="8.08364" />
                                        <Key frame="138" value="-0.881327" />
                                        <Key frame="148" value="-0.881327" />
                                        <Key frame="163" value="-41.2236" />
                                        <Key frame="178" value="76.5513" />
                                        <Key frame="191" value="62.2249" />
                                        <Key frame="209" value="62.5765" />
                                        <Key frame="227" value="62.5765" />
                                        <Key frame="260" value="-5.27591" />
                                        <Key frame="292" value="-5.27591" />
                                        <Key frame="319" value="-16.4382" />
                                        <Key frame="332" value="-14.4166" />
                                        <Key frame="341" value="-13.7135" />
                                        <Key frame="360" value="-12.483" />
                                        <Key frame="378" value="-12.7467" />
                                        <Key frame="400" value="-11.0768" />
                                        <Key frame="417" value="67.4984" />
                                        <Key frame="432" value="66.6195" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="25" value="0.31" />
                                        <Key frame="49" value="0.9304" />
                                        <Key frame="69" value="0.9304" />
                                        <Key frame="87" value="0.9304" />
                                        <Key frame="104" value="0.9304" />
                                        <Key frame="116" value="0.9304" />
                                        <Key frame="127" value="0.9304" />
                                        <Key frame="138" value="0.9304" />
                                        <Key frame="148" value="0.9304" />
                                        <Key frame="163" value="0.9304" />
                                        <Key frame="178" value="0.9304" />
                                        <Key frame="191" value="0.9304" />
                                        <Key frame="209" value="0.9304" />
                                        <Key frame="227" value="0.9304" />
                                        <Key frame="260" value="0.9304" />
                                        <Key frame="292" value="0.9304" />
                                        <Key frame="319" value="0.9284" />
                                        <Key frame="332" value="0.9284" />
                                        <Key frame="341" value="0.9284" />
                                        <Key frame="360" value="0.9304" />
                                        <Key frame="378" value="0.9304" />
                                        <Key frame="400" value="0.9284" />
                                        <Key frame="417" value="0.3096" />
                                        <Key frame="432" value="0.3064" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="25" value="7.55628" />
                                        <Key frame="49" value="7.55628" />
                                        <Key frame="69" value="7.46839" />
                                        <Key frame="87" value="7.55628" />
                                        <Key frame="104" value="7.55628" />
                                        <Key frame="127" value="7.55628" />
                                        <Key frame="148" value="7.3805" />
                                        <Key frame="260" value="7.46839" />
                                        <Key frame="292" value="7.55628" />
                                        <Key frame="319" value="7.55628" />
                                        <Key frame="341" value="7.55628" />
                                        <Key frame="360" value="7.64417" />
                                        <Key frame="378" value="7.55628" />
                                        <Key frame="400" value="-4.39699" />
                                        <Key frame="432" value="7.46839" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="25" value="-3.68905" />
                                        <Key frame="49" value="-3.68905" />
                                        <Key frame="69" value="-3.68905" />
                                        <Key frame="87" value="-3.68905" />
                                        <Key frame="104" value="-3.68905" />
                                        <Key frame="127" value="-3.68905" />
                                        <Key frame="148" value="-3.68905" />
                                        <Key frame="260" value="-3.68905" />
                                        <Key frame="292" value="-3.68905" />
                                        <Key frame="319" value="-3.68905" />
                                        <Key frame="341" value="-3.68905" />
                                        <Key frame="360" value="2.63916" />
                                        <Key frame="378" value="-38.4942" />
                                        <Key frame="400" value="4.39699" />
                                        <Key frame="432" value="-3.77694" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="25" value="-9.92936" />
                                        <Key frame="49" value="-9.92936" />
                                        <Key frame="69" value="-9.92936" />
                                        <Key frame="87" value="-10.0173" />
                                        <Key frame="104" value="-10.0173" />
                                        <Key frame="127" value="-9.92936" />
                                        <Key frame="148" value="-9.92936" />
                                        <Key frame="260" value="-9.92936" />
                                        <Key frame="292" value="-9.92936" />
                                        <Key frame="319" value="-9.92936" />
                                        <Key frame="341" value="-9.92936" />
                                        <Key frame="360" value="-9.84147" />
                                        <Key frame="378" value="-13.7966" />
                                        <Key frame="400" value="-33.0449" />
                                        <Key frame="432" value="-9.92936" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="25" value="-5.2711" />
                                        <Key frame="49" value="-5.2711" />
                                        <Key frame="69" value="-5.29" />
                                        <Key frame="87" value="-5.29" />
                                        <Key frame="104" value="-5.29" />
                                        <Key frame="127" value="-5.29" />
                                        <Key frame="148" value="-5.2711" />
                                        <Key frame="260" value="-5.2711" />
                                        <Key frame="292" value="-5.2711" />
                                        <Key frame="319" value="-5.2711" />
                                        <Key frame="341" value="-5.2711" />
                                        <Key frame="360" value="7.56109" />
                                        <Key frame="378" value="26.1063" />
                                        <Key frame="400" value="66.8001" />
                                        <Key frame="432" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="25" value="85.6968" />
                                        <Key frame="49" value="26.6336" />
                                        <Key frame="69" value="26.7215" />
                                        <Key frame="87" value="26.5457" />
                                        <Key frame="104" value="26.5457" />
                                        <Key frame="116" value="25.6668" />
                                        <Key frame="127" value="19.8659" />
                                        <Key frame="138" value="29.7098" />
                                        <Key frame="148" value="31.9071" />
                                        <Key frame="163" value="37.6201" />
                                        <Key frame="178" value="28.2156" />
                                        <Key frame="191" value="-35.5937" />
                                        <Key frame="209" value="-32.8691" />
                                        <Key frame="227" value="-32.8691" />
                                        <Key frame="260" value="58.4504" />
                                        <Key frame="292" value="58.5383" />
                                        <Key frame="319" value="62.4055" />
                                        <Key frame="332" value="62.2297" />
                                        <Key frame="341" value="67.2396" />
                                        <Key frame="360" value="67.679" />
                                        <Key frame="378" value="67.679" />
                                        <Key frame="400" value="66.4486" />
                                        <Key frame="417" value="79.0171" />
                                        <Key frame="432" value="85.2574" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="25" value="-5.45169" />
                                        <Key frame="49" value="4.39218" />
                                        <Key frame="69" value="4.39218" />
                                        <Key frame="87" value="9.48991" />
                                        <Key frame="104" value="9.48991" />
                                        <Key frame="116" value="18" />
                                        <Key frame="127" value="18" />
                                        <Key frame="138" value="18" />
                                        <Key frame="148" value="18" />
                                        <Key frame="163" value="-9.23104" />
                                        <Key frame="178" value="-13.6256" />
                                        <Key frame="191" value="-14.944" />
                                        <Key frame="209" value="-14.5924" />
                                        <Key frame="227" value="-14.944" />
                                        <Key frame="260" value="17.5759" />
                                        <Key frame="292" value="17.4002" />
                                        <Key frame="319" value="-34.8954" />
                                        <Key frame="332" value="-34.9833" />
                                        <Key frame="341" value="-34.9833" />
                                        <Key frame="360" value="-36.5654" />
                                        <Key frame="378" value="-36.6533" />
                                        <Key frame="400" value="-36.1259" />
                                        <Key frame="417" value="-18.2839" />
                                        <Key frame="432" value="-5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="25" value="3.33748" />
                                        <Key frame="49" value="-66.3607" />
                                        <Key frame="69" value="-66.3607" />
                                        <Key frame="87" value="68.5531" />
                                        <Key frame="104" value="68.5531" />
                                        <Key frame="116" value="32.166" />
                                        <Key frame="127" value="4.48007" />
                                        <Key frame="138" value="1.49175" />
                                        <Key frame="148" value="1.57965" />
                                        <Key frame="163" value="36.0332" />
                                        <Key frame="178" value="-20.1296" />
                                        <Key frame="191" value="55.9846" />
                                        <Key frame="209" value="55.0178" />
                                        <Key frame="227" value="55.0178" />
                                        <Key frame="260" value="39.8125" />
                                        <Key frame="292" value="39.8125" />
                                        <Key frame="319" value="54.1389" />
                                        <Key frame="332" value="48.6017" />
                                        <Key frame="341" value="48.5138" />
                                        <Key frame="360" value="47.2834" />
                                        <Key frame="378" value="47.2834" />
                                        <Key frame="400" value="46.5802" />
                                        <Key frame="417" value="2.28279" />
                                        <Key frame="432" value="7.55628" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="_再做一遍" id="28" localization="8" tooltip="Say some text. The text can be localized." x="160" y="28">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，那我再做一次给你看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="316" y="24">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="3" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="658" y="92">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_人脸识别" id="5" localization="-1" tooltip="This box makes the robot track people with different modes." x="745" y="489">
                                  <bitmap>media/images/box/interaction/target_face.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                  <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                                  <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                                  <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                                    <Choice value="Head" />
                                    <Choice value="WholeBody" />
                                    <Choice value="Move" />
                                  </Parameter>
                                  <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                                    <Choice value="None" />
                                    <Choice value="Arms" />
                                    <Choice value="LArm" />
                                    <Choice value="RArm" />
                                  </Parameter>
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                                  <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                                  <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                                  <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                                </Box>
                                <Box name="_请再一遍" id="4" localization="8" tooltip="Say some text. The text can be localized." x="489" y="444">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="那接下来请你做一遍！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="23" indexofinput="2" outputowner="28" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="23" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="22" indexofinput="2" outputowner="3" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_别害羞" id="20" localization="8" tooltip="Say some text with animations. The text can be localized." x="214" y="905">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，试试看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_播放音乐" id="18" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="158" y="162">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../dancingBGM.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="80" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="15" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                  <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                  <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                  <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                </Box>
                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                  <bitmap>media/images/box/folder.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                  <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Audio player" type="Lock" timeout="0" />
                      </Box>
                      <Box name="2Second" id="4" localization="8" tooltip="Say some text with animations. The text can be localized." x="264" y="321">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="接下来是第二遍，我们一起做！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_暂停一秒" id="13" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="440" y="339">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="3Third" id="3" localization="8" tooltip="Say some text with animations. The text can be localized." x="244" y="483">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这个动作的最后一遍，你自己完成！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_人脸识别" id="19" localization="-1" tooltip="This box makes the robot track people with different modes." x="657" y="552">
                        <bitmap>media/images/box/interaction/target_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                        <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                        <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                          <Choice value="Head" />
                          <Choice value="WholeBody" />
                          <Choice value="Move" />
                        </Parameter>
                        <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                          <Choice value="None" />
                          <Choice value="Arms" />
                          <Choice value="LArm" />
                          <Choice value="RArm" />
                        </Parameter>
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                        <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                        <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                        <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                      </Box>
                      <Box name="_要求重新做" id="9" localization="8" tooltip="Say some text with animations. The text can be localized." x="350" y="901">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这样不可以，再重新做一次吧！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_左右手慢动作" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="285" y="783">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="432">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Twinkle" id="1" localization="8" tooltip="NAO&apos;s selected LEDs flash on and off during the time defined in parameters." x="255" y="104">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Parameter name="LEDs group" inherits_from_parent="0" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="5">
                                    <Choice value="AllLeds" />
                                    <Choice value="BrainLeds" />
                                    <Choice value="ChestLeds" />
                                    <Choice value="EarLeds" />
                                    <Choice value="FaceLeds" />
                                    <Choice value="FeetLeds" />
                                    <Choice value="LeftEarLeds" />
                                    <Choice value="LeftFaceLeds" />
                                    <Choice value="LeftFootLeds" />
                                    <Choice value="RightEarLeds" />
                                    <Choice value="RightFaceLeds" />
                                    <Choice value="RightFootLeds" />
                                  </Parameter>
                                  <Parameter name="Time to flash on (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                  <Parameter name="Time to flash off (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="7" />
                                  <Parameter name="Animation duration (s)" inherits_from_parent="0" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="8" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Set LEDs" id="3" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="176" y="119">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash on (s)"))
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                            <Parameter name="Time to flash on (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                          </Box>
                                          <Box name="Set LEDs" id="1" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="180" y="262">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash off (s)"))
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                            <Parameter name="Time to flash off (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                          </Box>
                                          <Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="172" y="16">
                                            <bitmap>media/images/box/wait.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Animation duration (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                            <Parameter name="Animation duration (s)" inherits_from_parent="1" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="5" />
                                          </Box>
                                          <Box name="Set LEDs" id="4" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="308" y="12">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., 0.1)
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="-13.6256" />
                              <Key frame="49" value="-0.353968" />
                              <Key frame="69" value="3.68905" />
                              <Key frame="87" value="3.68905" />
                              <Key frame="104" value="3.68905" />
                              <Key frame="127" value="3.68905" />
                              <Key frame="148" value="3.68905" />
                              <Key frame="163" value="8.78677" />
                              <Key frame="178" value="8.78677" />
                              <Key frame="191" value="-10.901" />
                              <Key frame="209" value="-5.97904" />
                              <Key frame="227" value="-16.3503" />
                              <Key frame="260" value="0.349159" />
                              <Key frame="292" value="7.90786" />
                              <Key frame="319" value="12.7419" />
                              <Key frame="341" value="12.7419" />
                              <Key frame="360" value="4.2164" />
                              <Key frame="378" value="16.8728" />
                              <Key frame="400" value="-13.0104" />
                              <Key frame="432" value="-13.6256" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-0.00240423" />
                              <Key frame="49" value="-17.9323" />
                              <Key frame="69" value="17.9275" />
                              <Key frame="87" value="-13.362" />
                              <Key frame="104" value="18.1033" />
                              <Key frame="127" value="18.1033" />
                              <Key frame="148" value="-10.3736" />
                              <Key frame="163" value="-20.2175" />
                              <Key frame="178" value="-20.2175" />
                              <Key frame="191" value="-13.4498" />
                              <Key frame="209" value="12.1267" />
                              <Key frame="227" value="30.6718" />
                              <Key frame="260" value="17.6638" />
                              <Key frame="292" value="1.40386" />
                              <Key frame="319" value="-15.2956" />
                              <Key frame="341" value="31.5507" />
                              <Key frame="360" value="-6.85796" />
                              <Key frame="378" value="28.7382" />
                              <Key frame="400" value="-27.0731" />
                              <Key frame="432" value="-0.00240423" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="5.53478" />
                              <Key frame="49" value="5.53478" />
                              <Key frame="69" value="5.44688" />
                              <Key frame="87" value="5.44688" />
                              <Key frame="104" value="5.53478" />
                              <Key frame="127" value="5.53478" />
                              <Key frame="148" value="5.44688" />
                              <Key frame="260" value="5.53478" />
                              <Key frame="292" value="5.62267" />
                              <Key frame="319" value="5.53478" />
                              <Key frame="341" value="5.53478" />
                              <Key frame="360" value="5.53478" />
                              <Key frame="378" value="-10.901" />
                              <Key frame="400" value="-28.0399" />
                              <Key frame="432" value="5.62267" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="-6.67737" />
                              <Key frame="49" value="-6.67737" />
                              <Key frame="69" value="-6.67737" />
                              <Key frame="87" value="-6.67737" />
                              <Key frame="104" value="-6.67737" />
                              <Key frame="127" value="-6.67737" />
                              <Key frame="148" value="-6.67737" />
                              <Key frame="260" value="-6.67737" />
                              <Key frame="292" value="-6.58948" />
                              <Key frame="319" value="-6.67737" />
                              <Key frame="341" value="-6.67737" />
                              <Key frame="360" value="-14.4118" />
                              <Key frame="378" value="3.34228" />
                              <Key frame="400" value="-12.1267" />
                              <Key frame="432" value="-6.58948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-22.41" />
                              <Key frame="49" value="-22.41" />
                              <Key frame="69" value="-23.2889" />
                              <Key frame="87" value="-23.2889" />
                              <Key frame="104" value="-23.2889" />
                              <Key frame="116" value="-23.2889" />
                              <Key frame="127" value="-23.2889" />
                              <Key frame="138" value="-58.094" />
                              <Key frame="148" value="-53.1721" />
                              <Key frame="163" value="-53.5237" />
                              <Key frame="178" value="-53.5237" />
                              <Key frame="191" value="-53.5237" />
                              <Key frame="209" value="-44.8224" />
                              <Key frame="227" value="-82.7037" />
                              <Key frame="260" value="-82.7037" />
                              <Key frame="292" value="-24.6073" />
                              <Key frame="319" value="-24.9589" />
                              <Key frame="332" value="-58.2698" />
                              <Key frame="341" value="-80.1549" />
                              <Key frame="360" value="-81.4732" />
                              <Key frame="378" value="-81.4732" />
                              <Key frame="400" value="-87.6256" />
                              <Key frame="417" value="-23.7284" />
                              <Key frame="432" value="-23.9041" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-69.8763" />
                              <Key frame="49" value="-69.8763" />
                              <Key frame="69" value="-69.0853" />
                              <Key frame="87" value="-69.0853" />
                              <Key frame="104" value="-82.2691" />
                              <Key frame="116" value="-82.2691" />
                              <Key frame="127" value="-82.2691" />
                              <Key frame="138" value="-71.0189" />
                              <Key frame="148" value="-0.705531" />
                              <Key frame="163" value="-0.353968" />
                              <Key frame="178" value="-0.353968" />
                              <Key frame="191" value="-0.61764" />
                              <Key frame="209" value="-77.1713" />
                              <Key frame="227" value="-56.341" />
                              <Key frame="260" value="-56.341" />
                              <Key frame="292" value="12.3024" />
                              <Key frame="319" value="11.7751" />
                              <Key frame="332" value="4.30429" />
                              <Key frame="341" value="-0.00240423" />
                              <Key frame="360" value="-0.969218" />
                              <Key frame="378" value="-0.969218" />
                              <Key frame="400" value="-13.6256" />
                              <Key frame="417" value="-73.4799" />
                              <Key frame="432" value="-67.9427" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.3056" />
                              <Key frame="49" value="0.3056" />
                              <Key frame="69" value="0.8488" />
                              <Key frame="87" value="0.8484" />
                              <Key frame="104" value="0.8484" />
                              <Key frame="116" value="0.8484" />
                              <Key frame="127" value="0.8488" />
                              <Key frame="138" value="0.8484" />
                              <Key frame="148" value="0.8488" />
                              <Key frame="163" value="0.8488" />
                              <Key frame="178" value="0.8488" />
                              <Key frame="191" value="0.8488" />
                              <Key frame="209" value="0.8484" />
                              <Key frame="227" value="0.8484" />
                              <Key frame="260" value="0.8488" />
                              <Key frame="292" value="0.8484" />
                              <Key frame="319" value="0.8468" />
                              <Key frame="332" value="0.8468" />
                              <Key frame="341" value="0.8468" />
                              <Key frame="360" value="0.8484" />
                              <Key frame="378" value="0.8484" />
                              <Key frame="400" value="0.8472" />
                              <Key frame="417" value="0.3056" />
                              <Key frame="432" value="0.3056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="25" value="7.82477" />
                              <Key frame="49" value="7.73688" />
                              <Key frame="69" value="7.64898" />
                              <Key frame="87" value="7.82477" />
                              <Key frame="104" value="7.73688" />
                              <Key frame="127" value="7.73688" />
                              <Key frame="148" value="7.73688" />
                              <Key frame="260" value="7.73688" />
                              <Key frame="292" value="7.73688" />
                              <Key frame="319" value="7.82477" />
                              <Key frame="341" value="7.82477" />
                              <Key frame="360" value="9.31893" />
                              <Key frame="378" value="2.46338" />
                              <Key frame="400" value="-30.6718" />
                              <Key frame="432" value="8.08845" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="25" value="6.59429" />
                              <Key frame="49" value="6.59429" />
                              <Key frame="69" value="6.59429" />
                              <Key frame="87" value="6.59429" />
                              <Key frame="104" value="6.59429" />
                              <Key frame="127" value="6.59429" />
                              <Key frame="148" value="6.59429" />
                              <Key frame="260" value="6.59429" />
                              <Key frame="292" value="6.59429" />
                              <Key frame="319" value="6.59429" />
                              <Key frame="341" value="6.59429" />
                              <Key frame="360" value="17.9323" />
                              <Key frame="378" value="-14.9392" />
                              <Key frame="400" value="24.7" />
                              <Key frame="432" value="6.5064" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-9.92936" />
                              <Key frame="49" value="-9.92936" />
                              <Key frame="69" value="-9.92936" />
                              <Key frame="87" value="-10.0173" />
                              <Key frame="104" value="-10.0173" />
                              <Key frame="127" value="-9.92936" />
                              <Key frame="148" value="-9.92936" />
                              <Key frame="260" value="-9.92936" />
                              <Key frame="292" value="-9.92936" />
                              <Key frame="319" value="-9.92936" />
                              <Key frame="341" value="-9.92936" />
                              <Key frame="360" value="-9.84147" />
                              <Key frame="378" value="-13.7966" />
                              <Key frame="400" value="-33.0449" />
                              <Key frame="432" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="25" value="-5.18802" />
                              <Key frame="49" value="-5.18802" />
                              <Key frame="69" value="-5.27591" />
                              <Key frame="87" value="-5.29" />
                              <Key frame="104" value="-5.27591" />
                              <Key frame="127" value="-5.27591" />
                              <Key frame="148" value="-5.27591" />
                              <Key frame="260" value="-5.18802" />
                              <Key frame="292" value="-5.18802" />
                              <Key frame="319" value="-5.10013" />
                              <Key frame="341" value="-5.18802" />
                              <Key frame="360" value="-5.27591" />
                              <Key frame="378" value="24.2557" />
                              <Key frame="400" value="76.5513" />
                              <Key frame="432" value="-5.27591" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.5163" />
                              <Key frame="49" value="85.5163" />
                              <Key frame="69" value="22.7616" />
                              <Key frame="87" value="22.7616" />
                              <Key frame="104" value="24.7831" />
                              <Key frame="116" value="24.7831" />
                              <Key frame="127" value="24.871" />
                              <Key frame="138" value="13.7087" />
                              <Key frame="148" value="4.12851" />
                              <Key frame="163" value="7.46839" />
                              <Key frame="178" value="9.05044" />
                              <Key frame="191" value="5.44688" />
                              <Key frame="209" value="12.8298" />
                              <Key frame="227" value="-39.5537" />
                              <Key frame="260" value="-39.5537" />
                              <Key frame="292" value="35.6816" />
                              <Key frame="319" value="37.9668" />
                              <Key frame="332" value="52.7326" />
                              <Key frame="341" value="81.9127" />
                              <Key frame="360" value="81.2974" />
                              <Key frame="378" value="81.3853" />
                              <Key frame="400" value="65.4769" />
                              <Key frame="417" value="82.0885" />
                              <Key frame="432" value="86.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="7.46839" />
                              <Key frame="49" value="7.46839" />
                              <Key frame="69" value="0.788627" />
                              <Key frame="87" value="0.788627" />
                              <Key frame="104" value="0.612832" />
                              <Key frame="116" value="0.612832" />
                              <Key frame="127" value="0.612832" />
                              <Key frame="138" value="-8.44001" />
                              <Key frame="148" value="-15.9987" />
                              <Key frame="163" value="-14.153" />
                              <Key frame="178" value="-14.2409" />
                              <Key frame="191" value="-14.153" />
                              <Key frame="209" value="-4.04543" />
                              <Key frame="227" value="17.4002" />
                              <Key frame="260" value="17.3123" />
                              <Key frame="292" value="-18" />
                              <Key frame="319" value="-15.2956" />
                              <Key frame="332" value="21.5311" />
                              <Key frame="341" value="42.4493" />
                              <Key frame="360" value="44.7345" />
                              <Key frame="378" value="44.2071" />
                              <Key frame="400" value="38.9336" />
                              <Key frame="417" value="19.3338" />
                              <Key frame="432" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="8.4352" />
                              <Key frame="49" value="8.25942" />
                              <Key frame="69" value="65.6527" />
                              <Key frame="87" value="65.6527" />
                              <Key frame="104" value="-101.342" />
                              <Key frame="116" value="-101.342" />
                              <Key frame="127" value="-101.254" />
                              <Key frame="138" value="-44.5635" />
                              <Key frame="148" value="-15.9108" />
                              <Key frame="163" value="-17.7565" />
                              <Key frame="178" value="-17.6686" />
                              <Key frame="191" value="-17.6686" />
                              <Key frame="209" value="-17.3171" />
                              <Key frame="227" value="-48.5186" />
                              <Key frame="260" value="-48.5186" />
                              <Key frame="292" value="-26.4578" />
                              <Key frame="319" value="-27.8641" />
                              <Key frame="332" value="-41.9268" />
                              <Key frame="341" value="-51.6827" />
                              <Key frame="360" value="-52.7374" />
                              <Key frame="378" value="-52.7374" />
                              <Key frame="400" value="-22.1511" />
                              <Key frame="417" value="5.2711" />
                              <Key frame="432" value="5.09532" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="5.89115" />
                              <Key frame="49" value="5.89115" />
                              <Key frame="69" value="5.80326" />
                              <Key frame="87" value="5.80326" />
                              <Key frame="104" value="5.80326" />
                              <Key frame="127" value="5.89115" />
                              <Key frame="148" value="5.89115" />
                              <Key frame="260" value="5.80326" />
                              <Key frame="292" value="5.97904" />
                              <Key frame="319" value="5.89115" />
                              <Key frame="341" value="5.89115" />
                              <Key frame="360" value="-5.44688" />
                              <Key frame="378" value="-21.0037" />
                              <Key frame="400" value="-37.4395" />
                              <Key frame="432" value="6.06693" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="4.22121" />
                              <Key frame="49" value="4.3091" />
                              <Key frame="69" value="4.22121" />
                              <Key frame="87" value="4.3091" />
                              <Key frame="104" value="4.3091" />
                              <Key frame="127" value="4.22121" />
                              <Key frame="148" value="4.3091" />
                              <Key frame="260" value="4.22121" />
                              <Key frame="292" value="4.13332" />
                              <Key frame="319" value="4.22121" />
                              <Key frame="341" value="4.22121" />
                              <Key frame="360" value="0.441859" />
                              <Key frame="378" value="22.4148" />
                              <Key frame="400" value="1.23289" />
                              <Key frame="432" value="4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="22.3269" />
                              <Key frame="49" value="23.03" />
                              <Key frame="69" value="23.03" />
                              <Key frame="87" value="23.9968" />
                              <Key frame="104" value="23.9968" />
                              <Key frame="116" value="70.14" />
                              <Key frame="127" value="68.9974" />
                              <Key frame="138" value="64.8665" />
                              <Key frame="148" value="64.7786" />
                              <Key frame="163" value="17.1413" />
                              <Key frame="178" value="39.2021" />
                              <Key frame="191" value="88.4215" />
                              <Key frame="209" value="87.8941" />
                              <Key frame="227" value="87.8062" />
                              <Key frame="260" value="39.0263" />
                              <Key frame="292" value="39.0263" />
                              <Key frame="319" value="77.2592" />
                              <Key frame="332" value="73.4799" />
                              <Key frame="341" value="73.5678" />
                              <Key frame="360" value="74.2709" />
                              <Key frame="378" value="74.183" />
                              <Key frame="400" value="72.7768" />
                              <Key frame="417" value="23.909" />
                              <Key frame="432" value="23.9968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="67.4106" />
                              <Key frame="49" value="66.1801" />
                              <Key frame="69" value="66.1801" />
                              <Key frame="87" value="105.028" />
                              <Key frame="104" value="104.94" />
                              <Key frame="116" value="72.4204" />
                              <Key frame="127" value="8.08364" />
                              <Key frame="138" value="-0.881327" />
                              <Key frame="148" value="-0.881327" />
                              <Key frame="163" value="-41.2236" />
                              <Key frame="178" value="76.5513" />
                              <Key frame="191" value="62.2249" />
                              <Key frame="209" value="62.5765" />
                              <Key frame="227" value="62.5765" />
                              <Key frame="260" value="-5.27591" />
                              <Key frame="292" value="-5.27591" />
                              <Key frame="319" value="-16.4382" />
                              <Key frame="332" value="-14.4166" />
                              <Key frame="341" value="-13.7135" />
                              <Key frame="360" value="-12.483" />
                              <Key frame="378" value="-12.7467" />
                              <Key frame="400" value="-11.0768" />
                              <Key frame="417" value="67.4984" />
                              <Key frame="432" value="66.6195" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.31" />
                              <Key frame="49" value="0.9304" />
                              <Key frame="69" value="0.9304" />
                              <Key frame="87" value="0.9304" />
                              <Key frame="104" value="0.9304" />
                              <Key frame="116" value="0.9304" />
                              <Key frame="127" value="0.9304" />
                              <Key frame="138" value="0.9304" />
                              <Key frame="148" value="0.9304" />
                              <Key frame="163" value="0.9304" />
                              <Key frame="178" value="0.9304" />
                              <Key frame="191" value="0.9304" />
                              <Key frame="209" value="0.9304" />
                              <Key frame="227" value="0.9304" />
                              <Key frame="260" value="0.9304" />
                              <Key frame="292" value="0.9304" />
                              <Key frame="319" value="0.9284" />
                              <Key frame="332" value="0.9284" />
                              <Key frame="341" value="0.9284" />
                              <Key frame="360" value="0.9304" />
                              <Key frame="378" value="0.9304" />
                              <Key frame="400" value="0.9284" />
                              <Key frame="417" value="0.3096" />
                              <Key frame="432" value="0.3064" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="25" value="7.55628" />
                              <Key frame="49" value="7.55628" />
                              <Key frame="69" value="7.46839" />
                              <Key frame="87" value="7.55628" />
                              <Key frame="104" value="7.55628" />
                              <Key frame="127" value="7.55628" />
                              <Key frame="148" value="7.3805" />
                              <Key frame="260" value="7.46839" />
                              <Key frame="292" value="7.55628" />
                              <Key frame="319" value="7.55628" />
                              <Key frame="341" value="7.55628" />
                              <Key frame="360" value="7.64417" />
                              <Key frame="378" value="7.55628" />
                              <Key frame="400" value="-4.39699" />
                              <Key frame="432" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="25" value="-3.68905" />
                              <Key frame="49" value="-3.68905" />
                              <Key frame="69" value="-3.68905" />
                              <Key frame="87" value="-3.68905" />
                              <Key frame="104" value="-3.68905" />
                              <Key frame="127" value="-3.68905" />
                              <Key frame="148" value="-3.68905" />
                              <Key frame="260" value="-3.68905" />
                              <Key frame="292" value="-3.68905" />
                              <Key frame="319" value="-3.68905" />
                              <Key frame="341" value="-3.68905" />
                              <Key frame="360" value="2.63916" />
                              <Key frame="378" value="-38.4942" />
                              <Key frame="400" value="4.39699" />
                              <Key frame="432" value="-3.77694" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-9.92936" />
                              <Key frame="49" value="-9.92936" />
                              <Key frame="69" value="-9.92936" />
                              <Key frame="87" value="-10.0173" />
                              <Key frame="104" value="-10.0173" />
                              <Key frame="127" value="-9.92936" />
                              <Key frame="148" value="-9.92936" />
                              <Key frame="260" value="-9.92936" />
                              <Key frame="292" value="-9.92936" />
                              <Key frame="319" value="-9.92936" />
                              <Key frame="341" value="-9.92936" />
                              <Key frame="360" value="-9.84147" />
                              <Key frame="378" value="-13.7966" />
                              <Key frame="400" value="-33.0449" />
                              <Key frame="432" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="25" value="-5.2711" />
                              <Key frame="49" value="-5.2711" />
                              <Key frame="69" value="-5.29" />
                              <Key frame="87" value="-5.29" />
                              <Key frame="104" value="-5.29" />
                              <Key frame="127" value="-5.29" />
                              <Key frame="148" value="-5.2711" />
                              <Key frame="260" value="-5.2711" />
                              <Key frame="292" value="-5.2711" />
                              <Key frame="319" value="-5.2711" />
                              <Key frame="341" value="-5.2711" />
                              <Key frame="360" value="7.56109" />
                              <Key frame="378" value="26.1063" />
                              <Key frame="400" value="66.8001" />
                              <Key frame="432" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.6968" />
                              <Key frame="49" value="26.6336" />
                              <Key frame="69" value="26.7215" />
                              <Key frame="87" value="26.5457" />
                              <Key frame="104" value="26.5457" />
                              <Key frame="116" value="25.6668" />
                              <Key frame="127" value="19.8659" />
                              <Key frame="138" value="29.7098" />
                              <Key frame="148" value="31.9071" />
                              <Key frame="163" value="37.6201" />
                              <Key frame="178" value="28.2156" />
                              <Key frame="191" value="-35.5937" />
                              <Key frame="209" value="-32.8691" />
                              <Key frame="227" value="-32.8691" />
                              <Key frame="260" value="58.4504" />
                              <Key frame="292" value="58.5383" />
                              <Key frame="319" value="62.4055" />
                              <Key frame="332" value="62.2297" />
                              <Key frame="341" value="67.2396" />
                              <Key frame="360" value="67.679" />
                              <Key frame="378" value="67.679" />
                              <Key frame="400" value="66.4486" />
                              <Key frame="417" value="79.0171" />
                              <Key frame="432" value="85.2574" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-5.45169" />
                              <Key frame="49" value="4.39218" />
                              <Key frame="69" value="4.39218" />
                              <Key frame="87" value="9.48991" />
                              <Key frame="104" value="9.48991" />
                              <Key frame="116" value="18" />
                              <Key frame="127" value="18" />
                              <Key frame="138" value="18" />
                              <Key frame="148" value="18" />
                              <Key frame="163" value="-9.23104" />
                              <Key frame="178" value="-13.6256" />
                              <Key frame="191" value="-14.944" />
                              <Key frame="209" value="-14.5924" />
                              <Key frame="227" value="-14.944" />
                              <Key frame="260" value="17.5759" />
                              <Key frame="292" value="17.4002" />
                              <Key frame="319" value="-34.8954" />
                              <Key frame="332" value="-34.9833" />
                              <Key frame="341" value="-34.9833" />
                              <Key frame="360" value="-36.5654" />
                              <Key frame="378" value="-36.6533" />
                              <Key frame="400" value="-36.1259" />
                              <Key frame="417" value="-18.2839" />
                              <Key frame="432" value="-5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="3.33748" />
                              <Key frame="49" value="-66.3607" />
                              <Key frame="69" value="-66.3607" />
                              <Key frame="87" value="68.5531" />
                              <Key frame="104" value="68.5531" />
                              <Key frame="116" value="32.166" />
                              <Key frame="127" value="4.48007" />
                              <Key frame="138" value="1.49175" />
                              <Key frame="148" value="1.57965" />
                              <Key frame="163" value="36.0332" />
                              <Key frame="178" value="-20.1296" />
                              <Key frame="191" value="55.9846" />
                              <Key frame="209" value="55.0178" />
                              <Key frame="227" value="55.0178" />
                              <Key frame="260" value="39.8125" />
                              <Key frame="292" value="39.8125" />
                              <Key frame="319" value="54.1389" />
                              <Key frame="332" value="48.6017" />
                              <Key frame="341" value="48.5138" />
                              <Key frame="360" value="47.2834" />
                              <Key frame="378" value="47.2834" />
                              <Key frame="400" value="46.5802" />
                              <Key frame="417" value="2.28279" />
                              <Key frame="432" value="7.55628" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="_左右手慢动作" id="2" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="628" y="355">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="432">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Twinkle" id="1" localization="8" tooltip="NAO&apos;s selected LEDs flash on and off during the time defined in parameters." x="255" y="104">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Parameter name="LEDs group" inherits_from_parent="0" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="5">
                                    <Choice value="AllLeds" />
                                    <Choice value="BrainLeds" />
                                    <Choice value="ChestLeds" />
                                    <Choice value="EarLeds" />
                                    <Choice value="FaceLeds" />
                                    <Choice value="FeetLeds" />
                                    <Choice value="LeftEarLeds" />
                                    <Choice value="LeftFaceLeds" />
                                    <Choice value="LeftFootLeds" />
                                    <Choice value="RightEarLeds" />
                                    <Choice value="RightFaceLeds" />
                                    <Choice value="RightFootLeds" />
                                  </Parameter>
                                  <Parameter name="Time to flash on (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                  <Parameter name="Time to flash off (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="7" />
                                  <Parameter name="Animation duration (s)" inherits_from_parent="0" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="8" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Set LEDs" id="3" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="176" y="119">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash on (s)"))
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                            <Parameter name="Time to flash on (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                          </Box>
                                          <Box name="Set LEDs" id="1" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="180" y="262">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash off (s)"))
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                            <Parameter name="Time to flash off (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                          </Box>
                                          <Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="172" y="16">
                                            <bitmap>media/images/box/wait.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Animation duration (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                            <Parameter name="Animation duration (s)" inherits_from_parent="1" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="5" />
                                          </Box>
                                          <Box name="Set LEDs" id="4" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="308" y="12">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., 0.1)
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="-13.6256" />
                              <Key frame="49" value="-0.353968" />
                              <Key frame="69" value="3.68905" />
                              <Key frame="87" value="3.68905" />
                              <Key frame="104" value="3.68905" />
                              <Key frame="127" value="3.68905" />
                              <Key frame="148" value="3.68905" />
                              <Key frame="163" value="8.78677" />
                              <Key frame="178" value="8.78677" />
                              <Key frame="191" value="-10.901" />
                              <Key frame="209" value="-5.97904" />
                              <Key frame="227" value="-16.3503" />
                              <Key frame="260" value="0.349159" />
                              <Key frame="292" value="7.90786" />
                              <Key frame="319" value="12.7419" />
                              <Key frame="341" value="12.7419" />
                              <Key frame="360" value="4.2164" />
                              <Key frame="378" value="16.8728" />
                              <Key frame="400" value="-13.0104" />
                              <Key frame="432" value="-13.6256" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-0.00240423" />
                              <Key frame="49" value="-17.9323" />
                              <Key frame="69" value="17.9275" />
                              <Key frame="87" value="-13.362" />
                              <Key frame="104" value="18.1033" />
                              <Key frame="127" value="18.1033" />
                              <Key frame="148" value="-10.3736" />
                              <Key frame="163" value="-20.2175" />
                              <Key frame="178" value="-20.2175" />
                              <Key frame="191" value="-13.4498" />
                              <Key frame="209" value="12.1267" />
                              <Key frame="227" value="30.6718" />
                              <Key frame="260" value="17.6638" />
                              <Key frame="292" value="1.40386" />
                              <Key frame="319" value="-15.2956" />
                              <Key frame="341" value="31.5507" />
                              <Key frame="360" value="-6.85796" />
                              <Key frame="378" value="28.7382" />
                              <Key frame="400" value="-27.0731" />
                              <Key frame="432" value="-0.00240423" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="5.53478" />
                              <Key frame="49" value="5.53478" />
                              <Key frame="69" value="5.44688" />
                              <Key frame="87" value="5.44688" />
                              <Key frame="104" value="5.53478" />
                              <Key frame="127" value="5.53478" />
                              <Key frame="148" value="5.44688" />
                              <Key frame="260" value="5.53478" />
                              <Key frame="292" value="5.62267" />
                              <Key frame="319" value="5.53478" />
                              <Key frame="341" value="5.53478" />
                              <Key frame="360" value="5.53478" />
                              <Key frame="378" value="-10.901" />
                              <Key frame="400" value="-28.0399" />
                              <Key frame="432" value="5.62267" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="-6.67737" />
                              <Key frame="49" value="-6.67737" />
                              <Key frame="69" value="-6.67737" />
                              <Key frame="87" value="-6.67737" />
                              <Key frame="104" value="-6.67737" />
                              <Key frame="127" value="-6.67737" />
                              <Key frame="148" value="-6.67737" />
                              <Key frame="260" value="-6.67737" />
                              <Key frame="292" value="-6.58948" />
                              <Key frame="319" value="-6.67737" />
                              <Key frame="341" value="-6.67737" />
                              <Key frame="360" value="-14.4118" />
                              <Key frame="378" value="3.34228" />
                              <Key frame="400" value="-12.1267" />
                              <Key frame="432" value="-6.58948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-22.41" />
                              <Key frame="49" value="-22.41" />
                              <Key frame="69" value="-23.2889" />
                              <Key frame="87" value="-23.2889" />
                              <Key frame="104" value="-23.2889" />
                              <Key frame="116" value="-23.2889" />
                              <Key frame="127" value="-23.2889" />
                              <Key frame="138" value="-58.094" />
                              <Key frame="148" value="-53.1721" />
                              <Key frame="163" value="-53.5237" />
                              <Key frame="178" value="-53.5237" />
                              <Key frame="191" value="-53.5237" />
                              <Key frame="209" value="-44.8224" />
                              <Key frame="227" value="-82.7037" />
                              <Key frame="260" value="-82.7037" />
                              <Key frame="292" value="-24.6073" />
                              <Key frame="319" value="-24.9589" />
                              <Key frame="332" value="-58.2698" />
                              <Key frame="341" value="-80.1549" />
                              <Key frame="360" value="-81.4732" />
                              <Key frame="378" value="-81.4732" />
                              <Key frame="400" value="-87.6256" />
                              <Key frame="417" value="-23.7284" />
                              <Key frame="432" value="-23.9041" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-69.8763" />
                              <Key frame="49" value="-69.8763" />
                              <Key frame="69" value="-69.0853" />
                              <Key frame="87" value="-69.0853" />
                              <Key frame="104" value="-82.2691" />
                              <Key frame="116" value="-82.2691" />
                              <Key frame="127" value="-82.2691" />
                              <Key frame="138" value="-71.0189" />
                              <Key frame="148" value="-0.705531" />
                              <Key frame="163" value="-0.353968" />
                              <Key frame="178" value="-0.353968" />
                              <Key frame="191" value="-0.61764" />
                              <Key frame="209" value="-77.1713" />
                              <Key frame="227" value="-56.341" />
                              <Key frame="260" value="-56.341" />
                              <Key frame="292" value="12.3024" />
                              <Key frame="319" value="11.7751" />
                              <Key frame="332" value="4.30429" />
                              <Key frame="341" value="-0.00240423" />
                              <Key frame="360" value="-0.969218" />
                              <Key frame="378" value="-0.969218" />
                              <Key frame="400" value="-13.6256" />
                              <Key frame="417" value="-73.4799" />
                              <Key frame="432" value="-67.9427" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.3056" />
                              <Key frame="49" value="0.3056" />
                              <Key frame="69" value="0.8488" />
                              <Key frame="87" value="0.8484" />
                              <Key frame="104" value="0.8484" />
                              <Key frame="116" value="0.8484" />
                              <Key frame="127" value="0.8488" />
                              <Key frame="138" value="0.8484" />
                              <Key frame="148" value="0.8488" />
                              <Key frame="163" value="0.8488" />
                              <Key frame="178" value="0.8488" />
                              <Key frame="191" value="0.8488" />
                              <Key frame="209" value="0.8484" />
                              <Key frame="227" value="0.8484" />
                              <Key frame="260" value="0.8488" />
                              <Key frame="292" value="0.8484" />
                              <Key frame="319" value="0.8468" />
                              <Key frame="332" value="0.8468" />
                              <Key frame="341" value="0.8468" />
                              <Key frame="360" value="0.8484" />
                              <Key frame="378" value="0.8484" />
                              <Key frame="400" value="0.8472" />
                              <Key frame="417" value="0.3056" />
                              <Key frame="432" value="0.3056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="25" value="7.82477" />
                              <Key frame="49" value="7.73688" />
                              <Key frame="69" value="7.64898" />
                              <Key frame="87" value="7.82477" />
                              <Key frame="104" value="7.73688" />
                              <Key frame="127" value="7.73688" />
                              <Key frame="148" value="7.73688" />
                              <Key frame="260" value="7.73688" />
                              <Key frame="292" value="7.73688" />
                              <Key frame="319" value="7.82477" />
                              <Key frame="341" value="7.82477" />
                              <Key frame="360" value="9.31893" />
                              <Key frame="378" value="2.46338" />
                              <Key frame="400" value="-30.6718" />
                              <Key frame="432" value="8.08845" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="25" value="6.59429" />
                              <Key frame="49" value="6.59429" />
                              <Key frame="69" value="6.59429" />
                              <Key frame="87" value="6.59429" />
                              <Key frame="104" value="6.59429" />
                              <Key frame="127" value="6.59429" />
                              <Key frame="148" value="6.59429" />
                              <Key frame="260" value="6.59429" />
                              <Key frame="292" value="6.59429" />
                              <Key frame="319" value="6.59429" />
                              <Key frame="341" value="6.59429" />
                              <Key frame="360" value="17.9323" />
                              <Key frame="378" value="-14.9392" />
                              <Key frame="400" value="24.7" />
                              <Key frame="432" value="6.5064" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-9.92936" />
                              <Key frame="49" value="-9.92936" />
                              <Key frame="69" value="-9.92936" />
                              <Key frame="87" value="-10.0173" />
                              <Key frame="104" value="-10.0173" />
                              <Key frame="127" value="-9.92936" />
                              <Key frame="148" value="-9.92936" />
                              <Key frame="260" value="-9.92936" />
                              <Key frame="292" value="-9.92936" />
                              <Key frame="319" value="-9.92936" />
                              <Key frame="341" value="-9.92936" />
                              <Key frame="360" value="-9.84147" />
                              <Key frame="378" value="-13.7966" />
                              <Key frame="400" value="-33.0449" />
                              <Key frame="432" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="25" value="-5.18802" />
                              <Key frame="49" value="-5.18802" />
                              <Key frame="69" value="-5.27591" />
                              <Key frame="87" value="-5.29" />
                              <Key frame="104" value="-5.27591" />
                              <Key frame="127" value="-5.27591" />
                              <Key frame="148" value="-5.27591" />
                              <Key frame="260" value="-5.18802" />
                              <Key frame="292" value="-5.18802" />
                              <Key frame="319" value="-5.10013" />
                              <Key frame="341" value="-5.18802" />
                              <Key frame="360" value="-5.27591" />
                              <Key frame="378" value="24.2557" />
                              <Key frame="400" value="76.5513" />
                              <Key frame="432" value="-5.27591" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.5163" />
                              <Key frame="49" value="85.5163" />
                              <Key frame="69" value="22.7616" />
                              <Key frame="87" value="22.7616" />
                              <Key frame="104" value="24.7831" />
                              <Key frame="116" value="24.7831" />
                              <Key frame="127" value="24.871" />
                              <Key frame="138" value="13.7087" />
                              <Key frame="148" value="4.12851" />
                              <Key frame="163" value="7.46839" />
                              <Key frame="178" value="9.05044" />
                              <Key frame="191" value="5.44688" />
                              <Key frame="209" value="12.8298" />
                              <Key frame="227" value="-39.5537" />
                              <Key frame="260" value="-39.5537" />
                              <Key frame="292" value="35.6816" />
                              <Key frame="319" value="37.9668" />
                              <Key frame="332" value="52.7326" />
                              <Key frame="341" value="81.9127" />
                              <Key frame="360" value="81.2974" />
                              <Key frame="378" value="81.3853" />
                              <Key frame="400" value="65.4769" />
                              <Key frame="417" value="82.0885" />
                              <Key frame="432" value="86.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="7.46839" />
                              <Key frame="49" value="7.46839" />
                              <Key frame="69" value="0.788627" />
                              <Key frame="87" value="0.788627" />
                              <Key frame="104" value="0.612832" />
                              <Key frame="116" value="0.612832" />
                              <Key frame="127" value="0.612832" />
                              <Key frame="138" value="-8.44001" />
                              <Key frame="148" value="-15.9987" />
                              <Key frame="163" value="-14.153" />
                              <Key frame="178" value="-14.2409" />
                              <Key frame="191" value="-14.153" />
                              <Key frame="209" value="-4.04543" />
                              <Key frame="227" value="17.4002" />
                              <Key frame="260" value="17.3123" />
                              <Key frame="292" value="-18" />
                              <Key frame="319" value="-15.2956" />
                              <Key frame="332" value="21.5311" />
                              <Key frame="341" value="42.4493" />
                              <Key frame="360" value="44.7345" />
                              <Key frame="378" value="44.2071" />
                              <Key frame="400" value="38.9336" />
                              <Key frame="417" value="19.3338" />
                              <Key frame="432" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="8.4352" />
                              <Key frame="49" value="8.25942" />
                              <Key frame="69" value="65.6527" />
                              <Key frame="87" value="65.6527" />
                              <Key frame="104" value="-101.342" />
                              <Key frame="116" value="-101.342" />
                              <Key frame="127" value="-101.254" />
                              <Key frame="138" value="-44.5635" />
                              <Key frame="148" value="-15.9108" />
                              <Key frame="163" value="-17.7565" />
                              <Key frame="178" value="-17.6686" />
                              <Key frame="191" value="-17.6686" />
                              <Key frame="209" value="-17.3171" />
                              <Key frame="227" value="-48.5186" />
                              <Key frame="260" value="-48.5186" />
                              <Key frame="292" value="-26.4578" />
                              <Key frame="319" value="-27.8641" />
                              <Key frame="332" value="-41.9268" />
                              <Key frame="341" value="-51.6827" />
                              <Key frame="360" value="-52.7374" />
                              <Key frame="378" value="-52.7374" />
                              <Key frame="400" value="-22.1511" />
                              <Key frame="417" value="5.2711" />
                              <Key frame="432" value="5.09532" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="5.89115" />
                              <Key frame="49" value="5.89115" />
                              <Key frame="69" value="5.80326" />
                              <Key frame="87" value="5.80326" />
                              <Key frame="104" value="5.80326" />
                              <Key frame="127" value="5.89115" />
                              <Key frame="148" value="5.89115" />
                              <Key frame="260" value="5.80326" />
                              <Key frame="292" value="5.97904" />
                              <Key frame="319" value="5.89115" />
                              <Key frame="341" value="5.89115" />
                              <Key frame="360" value="-5.44688" />
                              <Key frame="378" value="-21.0037" />
                              <Key frame="400" value="-37.4395" />
                              <Key frame="432" value="6.06693" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="4.22121" />
                              <Key frame="49" value="4.3091" />
                              <Key frame="69" value="4.22121" />
                              <Key frame="87" value="4.3091" />
                              <Key frame="104" value="4.3091" />
                              <Key frame="127" value="4.22121" />
                              <Key frame="148" value="4.3091" />
                              <Key frame="260" value="4.22121" />
                              <Key frame="292" value="4.13332" />
                              <Key frame="319" value="4.22121" />
                              <Key frame="341" value="4.22121" />
                              <Key frame="360" value="0.441859" />
                              <Key frame="378" value="22.4148" />
                              <Key frame="400" value="1.23289" />
                              <Key frame="432" value="4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="22.3269" />
                              <Key frame="49" value="23.03" />
                              <Key frame="69" value="23.03" />
                              <Key frame="87" value="23.9968" />
                              <Key frame="104" value="23.9968" />
                              <Key frame="116" value="70.14" />
                              <Key frame="127" value="68.9974" />
                              <Key frame="138" value="64.8665" />
                              <Key frame="148" value="64.7786" />
                              <Key frame="163" value="17.1413" />
                              <Key frame="178" value="39.2021" />
                              <Key frame="191" value="88.4215" />
                              <Key frame="209" value="87.8941" />
                              <Key frame="227" value="87.8062" />
                              <Key frame="260" value="39.0263" />
                              <Key frame="292" value="39.0263" />
                              <Key frame="319" value="77.2592" />
                              <Key frame="332" value="73.4799" />
                              <Key frame="341" value="73.5678" />
                              <Key frame="360" value="74.2709" />
                              <Key frame="378" value="74.183" />
                              <Key frame="400" value="72.7768" />
                              <Key frame="417" value="23.909" />
                              <Key frame="432" value="23.9968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="67.4106" />
                              <Key frame="49" value="66.1801" />
                              <Key frame="69" value="66.1801" />
                              <Key frame="87" value="105.028" />
                              <Key frame="104" value="104.94" />
                              <Key frame="116" value="72.4204" />
                              <Key frame="127" value="8.08364" />
                              <Key frame="138" value="-0.881327" />
                              <Key frame="148" value="-0.881327" />
                              <Key frame="163" value="-41.2236" />
                              <Key frame="178" value="76.5513" />
                              <Key frame="191" value="62.2249" />
                              <Key frame="209" value="62.5765" />
                              <Key frame="227" value="62.5765" />
                              <Key frame="260" value="-5.27591" />
                              <Key frame="292" value="-5.27591" />
                              <Key frame="319" value="-16.4382" />
                              <Key frame="332" value="-14.4166" />
                              <Key frame="341" value="-13.7135" />
                              <Key frame="360" value="-12.483" />
                              <Key frame="378" value="-12.7467" />
                              <Key frame="400" value="-11.0768" />
                              <Key frame="417" value="67.4984" />
                              <Key frame="432" value="66.6195" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.31" />
                              <Key frame="49" value="0.9304" />
                              <Key frame="69" value="0.9304" />
                              <Key frame="87" value="0.9304" />
                              <Key frame="104" value="0.9304" />
                              <Key frame="116" value="0.9304" />
                              <Key frame="127" value="0.9304" />
                              <Key frame="138" value="0.9304" />
                              <Key frame="148" value="0.9304" />
                              <Key frame="163" value="0.9304" />
                              <Key frame="178" value="0.9304" />
                              <Key frame="191" value="0.9304" />
                              <Key frame="209" value="0.9304" />
                              <Key frame="227" value="0.9304" />
                              <Key frame="260" value="0.9304" />
                              <Key frame="292" value="0.9304" />
                              <Key frame="319" value="0.9284" />
                              <Key frame="332" value="0.9284" />
                              <Key frame="341" value="0.9284" />
                              <Key frame="360" value="0.9304" />
                              <Key frame="378" value="0.9304" />
                              <Key frame="400" value="0.9284" />
                              <Key frame="417" value="0.3096" />
                              <Key frame="432" value="0.3064" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="25" value="7.55628" />
                              <Key frame="49" value="7.55628" />
                              <Key frame="69" value="7.46839" />
                              <Key frame="87" value="7.55628" />
                              <Key frame="104" value="7.55628" />
                              <Key frame="127" value="7.55628" />
                              <Key frame="148" value="7.3805" />
                              <Key frame="260" value="7.46839" />
                              <Key frame="292" value="7.55628" />
                              <Key frame="319" value="7.55628" />
                              <Key frame="341" value="7.55628" />
                              <Key frame="360" value="7.64417" />
                              <Key frame="378" value="7.55628" />
                              <Key frame="400" value="-4.39699" />
                              <Key frame="432" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="25" value="-3.68905" />
                              <Key frame="49" value="-3.68905" />
                              <Key frame="69" value="-3.68905" />
                              <Key frame="87" value="-3.68905" />
                              <Key frame="104" value="-3.68905" />
                              <Key frame="127" value="-3.68905" />
                              <Key frame="148" value="-3.68905" />
                              <Key frame="260" value="-3.68905" />
                              <Key frame="292" value="-3.68905" />
                              <Key frame="319" value="-3.68905" />
                              <Key frame="341" value="-3.68905" />
                              <Key frame="360" value="2.63916" />
                              <Key frame="378" value="-38.4942" />
                              <Key frame="400" value="4.39699" />
                              <Key frame="432" value="-3.77694" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-9.92936" />
                              <Key frame="49" value="-9.92936" />
                              <Key frame="69" value="-9.92936" />
                              <Key frame="87" value="-10.0173" />
                              <Key frame="104" value="-10.0173" />
                              <Key frame="127" value="-9.92936" />
                              <Key frame="148" value="-9.92936" />
                              <Key frame="260" value="-9.92936" />
                              <Key frame="292" value="-9.92936" />
                              <Key frame="319" value="-9.92936" />
                              <Key frame="341" value="-9.92936" />
                              <Key frame="360" value="-9.84147" />
                              <Key frame="378" value="-13.7966" />
                              <Key frame="400" value="-33.0449" />
                              <Key frame="432" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="25" value="-5.2711" />
                              <Key frame="49" value="-5.2711" />
                              <Key frame="69" value="-5.29" />
                              <Key frame="87" value="-5.29" />
                              <Key frame="104" value="-5.29" />
                              <Key frame="127" value="-5.29" />
                              <Key frame="148" value="-5.2711" />
                              <Key frame="260" value="-5.2711" />
                              <Key frame="292" value="-5.2711" />
                              <Key frame="319" value="-5.2711" />
                              <Key frame="341" value="-5.2711" />
                              <Key frame="360" value="7.56109" />
                              <Key frame="378" value="26.1063" />
                              <Key frame="400" value="66.8001" />
                              <Key frame="432" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.6968" />
                              <Key frame="49" value="26.6336" />
                              <Key frame="69" value="26.7215" />
                              <Key frame="87" value="26.5457" />
                              <Key frame="104" value="26.5457" />
                              <Key frame="116" value="25.6668" />
                              <Key frame="127" value="19.8659" />
                              <Key frame="138" value="29.7098" />
                              <Key frame="148" value="31.9071" />
                              <Key frame="163" value="37.6201" />
                              <Key frame="178" value="28.2156" />
                              <Key frame="191" value="-35.5937" />
                              <Key frame="209" value="-32.8691" />
                              <Key frame="227" value="-32.8691" />
                              <Key frame="260" value="58.4504" />
                              <Key frame="292" value="58.5383" />
                              <Key frame="319" value="62.4055" />
                              <Key frame="332" value="62.2297" />
                              <Key frame="341" value="67.2396" />
                              <Key frame="360" value="67.679" />
                              <Key frame="378" value="67.679" />
                              <Key frame="400" value="66.4486" />
                              <Key frame="417" value="79.0171" />
                              <Key frame="432" value="85.2574" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-5.45169" />
                              <Key frame="49" value="4.39218" />
                              <Key frame="69" value="4.39218" />
                              <Key frame="87" value="9.48991" />
                              <Key frame="104" value="9.48991" />
                              <Key frame="116" value="18" />
                              <Key frame="127" value="18" />
                              <Key frame="138" value="18" />
                              <Key frame="148" value="18" />
                              <Key frame="163" value="-9.23104" />
                              <Key frame="178" value="-13.6256" />
                              <Key frame="191" value="-14.944" />
                              <Key frame="209" value="-14.5924" />
                              <Key frame="227" value="-14.944" />
                              <Key frame="260" value="17.5759" />
                              <Key frame="292" value="17.4002" />
                              <Key frame="319" value="-34.8954" />
                              <Key frame="332" value="-34.9833" />
                              <Key frame="341" value="-34.9833" />
                              <Key frame="360" value="-36.5654" />
                              <Key frame="378" value="-36.6533" />
                              <Key frame="400" value="-36.1259" />
                              <Key frame="417" value="-18.2839" />
                              <Key frame="432" value="-5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="3.33748" />
                              <Key frame="49" value="-66.3607" />
                              <Key frame="69" value="-66.3607" />
                              <Key frame="87" value="68.5531" />
                              <Key frame="104" value="68.5531" />
                              <Key frame="116" value="32.166" />
                              <Key frame="127" value="4.48007" />
                              <Key frame="138" value="1.49175" />
                              <Key frame="148" value="1.57965" />
                              <Key frame="163" value="36.0332" />
                              <Key frame="178" value="-20.1296" />
                              <Key frame="191" value="55.9846" />
                              <Key frame="209" value="55.0178" />
                              <Key frame="227" value="55.0178" />
                              <Key frame="260" value="39.8125" />
                              <Key frame="292" value="39.8125" />
                              <Key frame="319" value="54.1389" />
                              <Key frame="332" value="48.6017" />
                              <Key frame="341" value="48.5138" />
                              <Key frame="360" value="47.2834" />
                              <Key frame="378" value="47.2834" />
                              <Key frame="400" value="46.5802" />
                              <Key frame="417" value="2.28279" />
                              <Key frame="432" value="7.55628" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="3Positive" id="6" localization="8" tooltip="Say the text received on its input." x="465" y="54">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="2Positive" id="8" localization="8" tooltip="Say the text received on its input." x="70" y="488">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="1Positive" id="26" localization="8" tooltip="Say the text received on its input." x="77" y="320">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_再说一次" id="5" localization="8" tooltip="Say some text with animations. The text can be localized." x="93" y="906">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_请调位置" id="7" localization="8" tooltip="Say some text with animations. The text can be localized." x="560" y="901">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="不好意思，麻烦你帮我调整一下位置可以吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_继续" id="10" localization="8" tooltip="Say some text with animations. The text can be localized." x="681" y="901">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="谢谢你！我们可以继续了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_说些什么" id="14" localization="8" tooltip="" x="792" y="903">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="sayText" id="26" localization="8" tooltip="Say the text received on its input." x="204" y="14">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Animated Say Text" id="28" localization="8" tooltip="Say the text received on its input and move during its speech.&#x0A;" x="72" y="16">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_认真一点" id="24" localization="8" tooltip="Say some text with animations. The text can be localized." x="154" y="783">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，再做一次看看！要认真一点喔！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="437" y="525">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="26" indexofoutput="4" />
                      <Link inputowner="12" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="23" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="19" indexofinput="2" outputowner="23" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_说些什么" id="7" localization="8" tooltip="" x="792" y="977">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="sayText" id="26" localization="8" tooltip="Say the text received on its input." x="204" y="14">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Animated Say Text" id="28" localization="8" tooltip="Say the text received on its input and move during its speech.&#x0A;" x="72" y="16">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_实验前互动" id="14" localization="8" tooltip="" x="44" y="160">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="R人脸识别" id="4" localization="8" tooltip="" x="498" y="27">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="sayHi" id="29" localization="8" tooltip="Say some text with animations. The text can be localized." x="629" y="85">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="你好，我是清华大学人机交互实验室的机器人！很高兴见到你！你可以叫我小闹，也可以直接叫我NAO。请问需要我介绍一下自己么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Select Camera" id="5" localization="8" tooltip="Change the currently used camera." x="120" y="24">
                                  <bitmap>media/images/box/interaction/look.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.kCameraSelectID = 18

    def onLoad(self):
        self.cameraModule = self.session().service( "ALVideoDevice" )

    def onUnload(self):
        pass

    def onInput_onUseTopCamera(self):
        self.cameraModule.setParam( self.kCameraSelectID, 0 )
        self.onReady()

    def onInput_onUseBottomCamera(self):
        self.cameraModule.setParam( self.kCameraSelectID, 1 )
        self.onReady()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onUseTopCamera" type="1" type_size="1" nature="1" inner="0" tooltip="Use the camera at the top of the head (forehead)." id="2" />
                                  <Input name="onUseBottomCamera" type="1" type_size="1" nature="1" inner="0" tooltip="Use the camera at the bottom of the head (mouth)." id="3" />
                                  <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="The camera change is done." id="4" />
                                  <Resource name="Camera setting" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Face Detection" id="6" localization="8" tooltip="Detect people&apos;s face and return the number of detected faces.&#x0A;&#x0A;Note: Detect even faces that are not registered in the faces database (that&#x0A;you can teach him with the Learn Face box)." x="339" y="38">
                                  <bitmap>media/images/box/interaction/face.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Input name="FaceDetected" type="0" type_size="1" nature="4" stm_value_name="FaceDetected" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="5" />
                                  <Output name="numberOfFaces" type="2" type_size="1" nature="2" inner="0" tooltip="Number of detected faces. This output is stimulated each time the number of&#x0A;detected faces change." id="6" />
                                  <Output name="onNoFace" type="1" type_size="1" nature="2" inner="0" tooltip="No face is detected." id="7" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Count Det. Faces" id="3" localization="8" tooltip="Process face detection extractor data (FaceDetected) to count the number&#x0A;of detected faces and notify when there is no face detected.&#x0A;&#x0A;An output (either one or the other) is stimulated each time the number of&#x0A;detected faces change." x="174" y="71">
                                            <bitmap>media/images/box/interaction/reco_face.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nFacesDetected = -1

    def onUnload(self):
        #puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(len(p) > 0):
            if(self.nFacesDetected != len(p[1]) -1): # an additional array has been placed at the end for time
                self.nFacesDetected = len(p[1]) -1  # filtered info and has to be substracted when counting faces
                if(self.nFacesDetected != 0):
                    self.onFaceDetected( self.nFacesDetected )
                else:
                    self.onNoFace()
        else:
            if(self.nFacesDetected != 0):
                self.nFacesDetected = 0
                self.onNoFace()

    def onInput_onStop(self):
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input. It must be the&#x0A;FaceDetected extractor data." id="2" />
                                            <Output name="onFaceDetected" type="2" type_size="1" nature="1" inner="0" tooltip="Number of detected faces." id="3" />
                                            <Output name="onNoFace" type="1" type_size="1" nature="1" inner="0" tooltip="No face is detected." id="4" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="6" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="0" indexofinput="7" outputowner="3" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Box name="Switch Case" id="7" localization="8" tooltip="Test input value and stimulate the output matching to this value. If there is no&#x0A;matching output, the default output (onDefault) is stimulated.&#x0A;&#x0A;You can edit a case by left double-clicking on the line. You can add a&#x0A;case by right clicking on a line and selecting &apos;Insert a row&apos;. You can delete&#x0A;a case by right clicking on a line and selecting &apos;Remove a row&apos;." plugin="dispatcher_plugin" x="103" y="203">
                                  <bitmap>media/images/box/interaction/choice.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[# /!\ Generated content. Do not edit!
class MyClass(GeneratedClass):
	def __init__(self):
		try: # disable autoBind
		  GeneratedClass.__init__(self, False)
		except TypeError: # if NAOqi < 1.14
		  GeneratedClass.__init__( self )

	def onInput_onStart(self, p):
		p = self.typeConversion(p)
		if(p == self.typeConversion(0)):
			self.output_1(p)
		else:
			self.onDefault()

	def typeConversion(self, p):
		try:
			p = float(p)
			pint = int(p)
			if( p == pint ):
				p = pint
		except:
			p = str(p)
		return p]]>
                                    </content>
                                  </script>
                                  <pluginContent>
                                    <keywords>
                                      <keyword>0</keyword>
                                      <keyword></keyword>
                                    </keywords>
                                  </pluginContent>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="0" type_size="1" nature="1" inner="0" tooltip="Value to test." id="2" />
                                  <Output name="onDefault" type="1" type_size="1" nature="2" inner="0" tooltip="If the input value does not match any value set on the box." id="3" />
                                  <Output name="output_1" type="0" type_size="1" nature="2" inner="0" tooltip="This IO has been automatically added by box. Read box tooltip for more information." id="4" />
                                </Box>
                                <Box name="Stop" id="1" localization="8" tooltip="" x="403" y="223">
                                  <bitmap>media/images/box/box-python-script.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        #self.onStopped() #activate the output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                </Box>
                                <Box name="yesSelf" id="3" localization="8" tooltip="Say some text with animations. The text can be localized." x="917" y="30">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="我是一个人工智能机器人，我可以，听懂你说话，看懂你的动作，能够自然地和你交流！我还会唱歌跳舞！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_3" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="no" id="4" localization="8" tooltip="Say some text with animations. The text can be localized." x="760" y="246">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这样呀！那我就长话短说吧！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="s大声一点" id="15" localization="8" tooltip="Say some text with animations. The text can be localized." x="1113" y="183">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Stand Up" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="776" y="9">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="6" indexofinput="2" outputowner="5" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="6" indexofinput="3" outputowner="1" indexofoutput="4" />
                                <Link inputowner="29" indexofinput="2" outputowner="7" indexofoutput="3" />
                                <Link inputowner="1" indexofinput="2" outputowner="7" indexofoutput="3" />
                                <Link inputowner="6" indexofinput="3" outputowner="6" indexofoutput="6" />
                                <Link inputowner="3" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="4" outputowner="3" indexofoutput="4" />
                                <Link inputowner="7" indexofinput="2" outputowner="6" indexofoutput="5" />
                                <Link inputowner="23" indexofinput="2" outputowner="29" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="Z自我介绍" id="5" localization="8" tooltip="" x="835" y="36">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="141.421">
                                <Box name="yesAsk" id="1" localization="8" tooltip="Say some text with animations. The text can be localized." x="280" y="25">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="太好了！谢谢你！请问你会跳舞吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="noAsk" id="9" localization="8" tooltip="Say some text with animations. The text can be localized." x="279" y="168">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="哎呀，那我只好自己站起来了！请问你会跳舞吗？ " default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="animations/Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="danceLevel?" id="10" localization="8" tooltip="Say some text with animations. The text can be localized." x="524" y="24">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="如果请你为自己的舞蹈水平打分，1代表完全不会跳舞，7代表水平很高，请问你为自己打几分？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="taskDes" id="11" localization="8" tooltip="Say some text with animations. The text can be localized." x="696" y="27">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，今天我们的任务就是学习一些简单的舞蹈动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="animations/Stand/Gestures/Hey_6" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="selfIntro" id="28" localization="8" tooltip="Say some text. The text can be localized." x="96" y="65">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="但是，我的平衡能力还不够好，偶尔可能会摔倒！如果我摔倒了，你可以扶我起来么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Stand Up" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="123" y="233">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="11" indexofoutput="4" />
                                <Link inputowner="28" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="23" indexofinput="2" outputowner="28" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="5" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="0" indexofoutput="2" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_叉腰_正向" id="5" localization="8" tooltip="" x="805" y="573">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="_暂停兩秒" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="881" y="46">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="RAction" id="1" localization="8" tooltip="" x="285" y="25">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="118.921">
                                <Box name="_暂停一秒" id="16" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="292" y="274">
                                  <bitmap>media/images/box/wait.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                  <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                  <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                  <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                </Box>
                                <Box name="_问再一遍" id="22" localization="8" tooltip="Say some text. The text can be localized." x="791" y="188">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="看清楚了么？需要我再做一遍么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_再做一遍" id="28" localization="8" tooltip="Say some text. The text can be localized." x="201" y="17">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，那我再做一次给你看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="357" y="13">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="616" y="302">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_人脸识别" id="2" localization="-1" tooltip="This box makes the robot track people with different modes." x="828" y="566">
                                  <bitmap>media/images/box/interaction/target_face.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                  <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                                  <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                                  <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                                    <Choice value="Head" />
                                    <Choice value="WholeBody" />
                                    <Choice value="Move" />
                                  </Parameter>
                                  <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                                    <Choice value="None" />
                                    <Choice value="Arms" />
                                    <Choice value="LArm" />
                                    <Choice value="RArm" />
                                  </Parameter>
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                                  <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                                  <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                                  <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                                </Box>
                                <Box name="_请再一遍" id="4" localization="8" tooltip="Say some text. The text can be localized." x="560" y="481">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，那请你做一遍试试看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_叉腰" id="3" localization="8" tooltip="" x="458" y="186">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="WideHorizontalRightArm_LeanLeft_HeadShake_01" id="20" localization="8" tooltip="ID : #01D 0015&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Nope&#x0A;- Never&#x0A;- Negative&#x0A;- Forbiden&#x0A;- Oppose&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : RightArmOnHip&#x0A;End stance : LeanLeft" x="711" y="35">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="69">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                  <Key frame="14" value="-4.74855" />
                                                  <Key frame="57" value="5.97423" />
                                                  <Key frame="65" value="-4.22121" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                  <Key frame="14" value="12.3903" />
                                                  <Key frame="18" value="-13.1" />
                                                  <Key frame="22" value="20.1" />
                                                  <Key frame="27" value="-13.1" />
                                                  <Key frame="34" value="20.1" />
                                                  <Key frame="41" value="-13.1" />
                                                  <Key frame="50" value="20.1" />
                                                  <Key frame="57" value="8.4352" />
                                                  <Key frame="65" value="11.072" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                                  <Key frame="16" value="0.261268" />
                                                  <Key frame="45" value="-7.29742" />
                                                  <Key frame="56" value="-6.59429" />
                                                  <Key frame="67" value="-0.178186" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                                  <Key frame="16" value="-2.54646" />
                                                  <Key frame="45" value="-19.158" />
                                                  <Key frame="67" value="0.0902951" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                  <Key frame="18" value="-82.7037" />
                                                  <Key frame="33" value="-82.7037" />
                                                  <Key frame="49" value="-87.2741" />
                                                  <Key frame="58" value="-77.1946" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-2.83595" ordinateParam="-3.80419" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="3.46616" ordinateParam="4.64955" />
                                                  </Key>
                                                  <Key frame="69" value="-35.2422" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                  <Key frame="18" value="-30.5008" />
                                                  <Key frame="33" value="-30.5008" />
                                                  <Key frame="49" value="-30.9403" />
                                                  <Key frame="58" value="-83.5874" />
                                                  <Key frame="69" value="-78.6655" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                  <Key frame="18" value="0.0224" />
                                                  <Key frame="33" value="0.0224" />
                                                  <Key frame="49" value="0.034" />
                                                  <Key frame="58" value="0.1008" />
                                                  <Key frame="69" value="0.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                                  <Key frame="16" value="10.9889" />
                                                  <Key frame="45" value="-0.261268" />
                                                  <Key frame="56" value="-3.33748" />
                                                  <Key frame="67" value="19.3386" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                                  <Key frame="16" value="1.32078" />
                                                  <Key frame="45" value="25.491" />
                                                  <Key frame="67" value="-1.0523" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                                  <Key frame="16" value="-13.8845" />
                                                  <Key frame="45" value="-14.9392" />
                                                  <Key frame="56" value="-16.9607" />
                                                  <Key frame="67" value="-15.115" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                                  <Key frame="16" value="0.700723" />
                                                  <Key frame="45" value="17.9275" />
                                                  <Key frame="56" value="18.4549" />
                                                  <Key frame="67" value="-5.29" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                  <Key frame="18" value="118.651" />
                                                  <Key frame="33" value="118.651" />
                                                  <Key frame="49" value="119.179" />
                                                  <Key frame="58" value="100.546" />
                                                  <Key frame="69" value="98.7879" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                  <Key frame="18" value="43.6798" />
                                                  <Key frame="33" value="43.6798" />
                                                  <Key frame="49" value="47.1076" />
                                                  <Key frame="69" value="7.29261" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                  <Key frame="18" value="50.6232" />
                                                  <Key frame="33" value="50.6232" />
                                                  <Key frame="49" value="64.9496" />
                                                  <Key frame="58" value="-38.4111" />
                                                  <Key frame="69" value="-6.06693" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                                  <Key frame="16" value="-0.964409" />
                                                  <Key frame="45" value="-2.37068" />
                                                  <Key frame="56" value="-6.50159" />
                                                  <Key frame="67" value="-1.57965" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                                  <Key frame="16" value="7.4732" />
                                                  <Key frame="45" value="-7.73207" />
                                                  <Key frame="67" value="10.6373" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                  <Key frame="16" value="77.4" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-6.03465" ordinateParam="8.78744" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="5.65748" ordinateParam="-8.23822" />
                                                  </Key>
                                                  <Key frame="31" value="18.3" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-5.70131" ordinateParam="14.2542" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="6.0814" ordinateParam="-15.2045" />
                                                  </Key>
                                                  <Key frame="47" value="2.55127" />
                                                  <Key frame="56" value="55.1984" />
                                                  <Key frame="67" value="33.7528" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                  <Key frame="16" value="39.1" />
                                                  <Key frame="47" value="37.791" />
                                                  <Key frame="56" value="63.5433" />
                                                  <Key frame="67" value="69.7836" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                  <Key frame="16" value="0.86" />
                                                  <Key frame="31" value="0.862" />
                                                  <Key frame="47" value="0.8492" />
                                                  <Key frame="56" value="0.0968" />
                                                  <Key frame="67" value="0.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                                  <Key frame="16" value="8.4352" />
                                                  <Key frame="45" value="9.22623" />
                                                  <Key frame="56" value="-2.63916" />
                                                  <Key frame="67" value="10.1051" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                                  <Key frame="16" value="-6.94104" />
                                                  <Key frame="45" value="15.735" />
                                                  <Key frame="67" value="-10.2809" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                                  <Key frame="16" value="-13.8845" />
                                                  <Key frame="45" value="-14.9392" />
                                                  <Key frame="56" value="-16.9607" />
                                                  <Key frame="67" value="-15.115" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                                  <Key frame="16" value="4.13332" />
                                                  <Key frame="45" value="4.3091" />
                                                  <Key frame="56" value="18.1081" />
                                                  <Key frame="67" value="4.13332" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                  <Key frame="16" value="37" />
                                                  <Key frame="31" value="30.1" />
                                                  <Key frame="67" value="91.1461" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                  <Key frame="16" value="14.7" />
                                                  <Key frame="47" value="-22.4148" />
                                                  <Key frame="56" value="-12.2194" />
                                                  <Key frame="67" value="-8.17634" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                  <Key frame="16" value="-26.4" />
                                                  <Key frame="31" value="-25.4031" />
                                                  <Key frame="47" value="7.02893" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-5.03277" ordinateParam="-15.5454" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="2.83093" ordinateParam="8.7443" />
                                                  </Key>
                                                  <Key frame="56" value="32.6933" />
                                                  <Key frame="67" value="14.3239" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                            <Resource name="Standing" type="Lock" timeout="1" />
                                            <Resource name="All motors" type="Lock" timeout="1" />
                                          </Box>
                                          <Box name="OpenArmInFrontWithBump_01" id="13" localization="8" tooltip="ID : #01B 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- You&#x0A;- Yourslef&#x0A;- Yours&#x0A;- Everybody&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="310" y="29">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                              <ActuatorList model="">
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                  <Key frame="12" value="1.2" />
                                                  <Key frame="21" value="-8.9" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                  <Key frame="21" value="0" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                                  <Key frame="14" value="-5.01224" />
                                                  <Key frame="25" value="4.8735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                                  <Key frame="14" value="-7.02893" />
                                                  <Key frame="25" value="-6.95974" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                  <Key frame="14" value="-57.303" />
                                                  <Key frame="23" value="-23.7372" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                  <Key frame="14" value="-73.8315" />
                                                  <Key frame="23" value="-94.6534" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                  <Key frame="14" value="0.3168" />
                                                  <Key frame="23" value="0.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                                  <Key frame="14" value="-3.42537" />
                                                  <Key frame="25" value="7.07525" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                                  <Key frame="14" value="5.3638" />
                                                  <Key frame="25" value="5.66523" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                                  <Key frame="14" value="-12.654" />
                                                  <Key frame="25" value="-9.74028" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                                  <Key frame="14" value="14.6755" />
                                                  <Key frame="25" value="-4.64829" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                  <Key frame="14" value="52.6447" />
                                                  <Key frame="23" value="45.9525" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                  <Key frame="14" value="8.17153" />
                                                  <Key frame="23" value="14.4939" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                  <Key frame="14" value="-53.7042" />
                                                  <Key frame="23" value="-70.0963" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                                  <Key frame="14" value="-2.98591" />
                                                  <Key frame="25" value="4.8735" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                                  <Key frame="14" value="6.3306" />
                                                  <Key frame="25" value="6.95974" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                  <Key frame="12" value="62.4055" />
                                                  <Key frame="21" value="23.8086" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                  <Key frame="12" value="83.5826" />
                                                  <Key frame="21" value="94.6534" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                  <Key frame="12" value="0.024" />
                                                  <Key frame="21" value="0.72" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                                  <Key frame="14" value="-4.66066" />
                                                  <Key frame="25" value="7.07525" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                                  <Key frame="14" value="-5.97423" />
                                                  <Key frame="25" value="-5.66523" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                                  <Key frame="14" value="-12.654" />
                                                  <Key frame="25" value="-9.74028" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                                  <Key frame="14" value="14.8561" />
                                                  <Key frame="25" value="-4.64829" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                  <Key frame="12" value="32.6981" />
                                                  <Key frame="21" value="27.9395" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                  <Key frame="12" value="-4.13332" />
                                                  <Key frame="21" value="-14.4939" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                  <Key frame="12" value="45.4376" />
                                                  <Key frame="21" value="70.1928" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                            <Resource name="Standing" type="Lock" timeout="1" />
                                            <Resource name="All motors" type="Lock" timeout="1" />
                                          </Box>
                                          <Box name="PointAtSelfRightArm_01" id="11" localization="8" tooltip="ID : #01B 0007&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- Myself&#x0A;- I&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Flex&#x0A;End stance : Center" x="480" y="37">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                              <BehaviorLayer name="behavior_layer1">
                                                <BehaviorKeyframe name="keyframe1" index="1">
                                                  <Diagram />
                                                </BehaviorKeyframe>
                                              </BehaviorLayer>
                                              <ActuatorList model="">
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                  <Key frame="13" value="12.1267" />
                                                  <Key frame="23" value="-6.85796" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                                  <Key frame="12" value="-9.58261" />
                                                  <Key frame="22" value="-5.27591" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                                  <Key frame="12" value="-4.56796" />
                                                  <Key frame="22" value="-4.2164" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                  <Key frame="15" value="-53.3" />
                                                  <Key frame="25" value="-27.6835" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                  <Key frame="15" value="-70.4" />
                                                  <Key frame="25" value="-73.392" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                  <Key frame="15" value="0.19" />
                                                  <Key frame="25" value="0.6624" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                                  <Key frame="12" value="-3.95273" />
                                                  <Key frame="22" value="2.72705" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                                  <Key frame="12" value="6.68218" />
                                                  <Key frame="22" value="4.83644" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                                  <Key frame="12" value="-11.6872" />
                                                  <Key frame="22" value="-9.66569" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                                  <Key frame="12" value="24.6073" />
                                                  <Key frame="22" value="12.4782" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                  <Key frame="15" value="76.5" />
                                                  <Key frame="25" value="86.5709" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                  <Key frame="15" value="12.8" />
                                                  <Key frame="25" value="11.1598" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                  <Key frame="15" value="-45.7061" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-4.7632" ordinateParam="-15.8836" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="3.17547" ordinateParam="10.5891" />
                                                  </Key>
                                                  <Key frame="25" value="-21.7117" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-3.30702" ordinateParam="-5.02698" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                                  </Key>
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                                  <Key frame="12" value="-5.79845" />
                                                  <Key frame="22" value="2.02391" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                                  <Key frame="12" value="3.43018" />
                                                  <Key frame="22" value="-0.0854867" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                  <Key frame="13" value="49.3" />
                                                  <Key frame="23" value="88.5" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                  <Key frame="13" value="61.346" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-3.21391" ordinateParam="20.6006" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="2.47225" ordinateParam="-15.8466" />
                                                  </Key>
                                                  <Key frame="23" value="21.5311" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                  <Key frame="13" value="1" />
                                                  <Key frame="23" value="0.45" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                                  <Key frame="12" value="1.93121" />
                                                  <Key frame="22" value="10.9841" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                                  <Key frame="12" value="-0.173378" />
                                                  <Key frame="22" value="2.37549" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                                  <Key frame="12" value="-11.6872" />
                                                  <Key frame="22" value="-9.66569" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                                  <Key frame="12" value="15.1198" />
                                                  <Key frame="22" value="-2.28279" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                  <Key frame="13" value="55.9894" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-3.96019" ordinateParam="7.95114" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="3.0463" ordinateParam="-6.11625" />
                                                  </Key>
                                                  <Key frame="23" value="40.8721" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                  <Key frame="13" value="-2.11181" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-4.33333" ordinateParam="-6.39629" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="4.92023" />
                                                  </Key>
                                                  <Key frame="23" value="9.31412" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                  <Key frame="13" value="60.2913" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-4.24005" ordinateParam="7.72419" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="3.26158" ordinateParam="-5.94168" />
                                                  </Key>
                                                  <Key frame="23" value="48.338" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                            <Resource name="Standing" type="Lock" timeout="1" />
                                            <Resource name="All motors" type="Lock" timeout="1" />
                                          </Box>
                                          <Box name="BothHandsBumpWithBump_01" id="18" localization="8" tooltip="ID : #01B 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- You&#x0A;- Yourself&#x0A;- Yours&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="128" y="26">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="29">
                                              <ActuatorList model="">
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                  <Key frame="10" value="-14.153" />
                                                  <Key frame="16" value="6.5" />
                                                  <Key frame="25" value="-14.153" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                  <Key frame="10" value="-10.1978" />
                                                  <Key frame="25" value="-10.1978" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                  <Key frame="11" value="-68.5" />
                                                  <Key frame="19" value="-53" />
                                                  <Key frame="29" value="-56.8635" smooth="1" symmetrical="1">
                                                    <Tangent side="left" interpType="bezier" abscissaParam="-3.287" ordinateParam="3.82525" />
                                                    <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                                  </Key>
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                  <Key frame="29" value="-52.3859" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                  <Key frame="11" value="0.19" />
                                                  <Key frame="19" value="0.55" />
                                                  <Key frame="29" value="0.1956" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                  <Key frame="29" value="71.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                  <Key frame="19" value="5.3" />
                                                  <Key frame="29" value="-4.7" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                  <Key frame="19" value="-51.8" />
                                                  <Key frame="29" value="0.788627" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                  <Key frame="11" value="68.5" />
                                                  <Key frame="19" value="53" />
                                                  <Key frame="29" value="59.5051" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                  <Key frame="29" value="44.5587" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                  <Key frame="11" value="0.19" />
                                                  <Key frame="19" value="0.55" />
                                                  <Key frame="29" value="0.2052" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                  <Key frame="29" value="71.4" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                  <Key frame="19" value="-5.3" />
                                                  <Key frame="29" value="4.7" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                  <Key frame="19" value="51.8" />
                                                  <Key frame="29" value="17.6638" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                            <Resource name="Standing" type="Lock" timeout="1" />
                                            <Resource name="All motors" type="Lock" timeout="1" />
                                          </Box>
                                          <Link inputowner="13" indexofinput="2" outputowner="18" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="4" />
                                          <Link inputowner="20" indexofinput="2" outputowner="11" indexofoutput="4" />
                                          <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="20" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="23" indexofinput="2" outputowner="28" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="23" indexofoutput="4" />
                                <Link inputowner="22" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="3" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="1Positive" id="26" localization="8" tooltip="Say the text received on its input." x="90" y="364">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_别害羞" id="20" localization="8" tooltip="Say some text with animations. The text can be localized." x="91" y="1048">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，试试看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_播放音乐" id="18" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="155" y="123">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../dancingBGM.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="4" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="15" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                  <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                  <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                  <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                </Box>
                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                  <bitmap>media/images/box/folder.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                  <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Audio player" type="Lock" timeout="0" />
                      </Box>
                      <Box name="2Second" id="4" localization="8" tooltip="Say some text with animations. The text can be localized." x="304" y="381">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="已经做完一遍了，第二遍，我们一起做！跟上我的动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_暂停一秒" id="13" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="499" y="424">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="3Third" id="3" localization="8" tooltip="Say some text with animations. The text can be localized." x="299" y="596">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="已经完成两遍了，你再最后做一遍吧！我会认真观察你的动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_人脸识别" id="19" localization="-1" tooltip="This box makes the robot track people with different modes." x="772" y="648">
                        <bitmap>media/images/box/interaction/target_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                        <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                        <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                          <Choice value="Head" />
                          <Choice value="WholeBody" />
                          <Choice value="Move" />
                        </Parameter>
                        <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                          <Choice value="None" />
                          <Choice value="Arms" />
                          <Choice value="LArm" />
                          <Choice value="RArm" />
                        </Parameter>
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                        <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                        <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                        <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                      </Box>
                      <Box name="2Positive" id="8" localization="8" tooltip="Say the text received on its input." x="88" y="571">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="3Positive" id="6" localization="8" tooltip="Say the text received on its input." x="637" y="95">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_要求重新做" id="9" localization="8" tooltip="Say some text with animations. The text can be localized." x="233" y="1056">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这样不可以，请重新做一次吧！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_说串文字" id="11" localization="8" tooltip="Say the text received on its input." x="524" y="1056">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_再说一次" id="5" localization="8" tooltip="Say some text with animations. The text can be localized." x="368" y="1061">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_请调位置" id="10" localization="8" tooltip="Say some text with animations. The text can be localized." x="698" y="1053">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="不好意思，NAO看不到你了！你可以帮我调整一下位置吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_继续" id="14" localization="8" tooltip="Say some text with animations. The text can be localized." x="844" y="1047">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="谢谢你！我们可以继续了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_说些什么" id="15" localization="8" tooltip="" x="984" y="1041">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="sayText" id="26" localization="8" tooltip="Say the text received on its input." x="204" y="14">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Animated Say Text" id="28" localization="8" tooltip="Say the text received on its input and move during its speech.&#x0A;" x="72" y="16">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_认真一点" id="24" localization="8" tooltip="Say some text with animations. The text can be localized." x="71" y="874">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，再做一次看看！要认真一点喔！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="552" y="645">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_叉腰" id="7" localization="8" tooltip="" x="236" y="880">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="WideHorizontalRightArm_LeanLeft_HeadShake_01" id="20" localization="8" tooltip="ID : #01D 0015&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Nope&#x0A;- Never&#x0A;- Negative&#x0A;- Forbiden&#x0A;- Oppose&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : RightArmOnHip&#x0A;End stance : LeanLeft" x="711" y="35">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="69">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="14" value="-4.74855" />
                                        <Key frame="57" value="5.97423" />
                                        <Key frame="65" value="-4.22121" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="14" value="12.3903" />
                                        <Key frame="18" value="-13.1" />
                                        <Key frame="22" value="20.1" />
                                        <Key frame="27" value="-13.1" />
                                        <Key frame="34" value="20.1" />
                                        <Key frame="41" value="-13.1" />
                                        <Key frame="50" value="20.1" />
                                        <Key frame="57" value="8.4352" />
                                        <Key frame="65" value="11.072" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="16" value="0.261268" />
                                        <Key frame="45" value="-7.29742" />
                                        <Key frame="56" value="-6.59429" />
                                        <Key frame="67" value="-0.178186" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="16" value="-2.54646" />
                                        <Key frame="45" value="-19.158" />
                                        <Key frame="67" value="0.0902951" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="18" value="-82.7037" />
                                        <Key frame="33" value="-82.7037" />
                                        <Key frame="49" value="-87.2741" />
                                        <Key frame="58" value="-77.1946" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-2.83595" ordinateParam="-3.80419" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.46616" ordinateParam="4.64955" />
                                        </Key>
                                        <Key frame="69" value="-35.2422" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="18" value="-30.5008" />
                                        <Key frame="33" value="-30.5008" />
                                        <Key frame="49" value="-30.9403" />
                                        <Key frame="58" value="-83.5874" />
                                        <Key frame="69" value="-78.6655" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="18" value="0.0224" />
                                        <Key frame="33" value="0.0224" />
                                        <Key frame="49" value="0.034" />
                                        <Key frame="58" value="0.1008" />
                                        <Key frame="69" value="0.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="16" value="10.9889" />
                                        <Key frame="45" value="-0.261268" />
                                        <Key frame="56" value="-3.33748" />
                                        <Key frame="67" value="19.3386" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="16" value="1.32078" />
                                        <Key frame="45" value="25.491" />
                                        <Key frame="67" value="-1.0523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="16" value="-13.8845" />
                                        <Key frame="45" value="-14.9392" />
                                        <Key frame="56" value="-16.9607" />
                                        <Key frame="67" value="-15.115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="16" value="0.700723" />
                                        <Key frame="45" value="17.9275" />
                                        <Key frame="56" value="18.4549" />
                                        <Key frame="67" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="18" value="118.651" />
                                        <Key frame="33" value="118.651" />
                                        <Key frame="49" value="119.179" />
                                        <Key frame="58" value="100.546" />
                                        <Key frame="69" value="98.7879" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="18" value="43.6798" />
                                        <Key frame="33" value="43.6798" />
                                        <Key frame="49" value="47.1076" />
                                        <Key frame="69" value="7.29261" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="18" value="50.6232" />
                                        <Key frame="33" value="50.6232" />
                                        <Key frame="49" value="64.9496" />
                                        <Key frame="58" value="-38.4111" />
                                        <Key frame="69" value="-6.06693" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="16" value="-0.964409" />
                                        <Key frame="45" value="-2.37068" />
                                        <Key frame="56" value="-6.50159" />
                                        <Key frame="67" value="-1.57965" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="16" value="7.4732" />
                                        <Key frame="45" value="-7.73207" />
                                        <Key frame="67" value="10.6373" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="16" value="77.4" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-6.03465" ordinateParam="8.78744" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="5.65748" ordinateParam="-8.23822" />
                                        </Key>
                                        <Key frame="31" value="18.3" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-5.70131" ordinateParam="14.2542" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="6.0814" ordinateParam="-15.2045" />
                                        </Key>
                                        <Key frame="47" value="2.55127" />
                                        <Key frame="56" value="55.1984" />
                                        <Key frame="67" value="33.7528" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="16" value="39.1" />
                                        <Key frame="47" value="37.791" />
                                        <Key frame="56" value="63.5433" />
                                        <Key frame="67" value="69.7836" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="16" value="0.86" />
                                        <Key frame="31" value="0.862" />
                                        <Key frame="47" value="0.8492" />
                                        <Key frame="56" value="0.0968" />
                                        <Key frame="67" value="0.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="16" value="8.4352" />
                                        <Key frame="45" value="9.22623" />
                                        <Key frame="56" value="-2.63916" />
                                        <Key frame="67" value="10.1051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="16" value="-6.94104" />
                                        <Key frame="45" value="15.735" />
                                        <Key frame="67" value="-10.2809" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="16" value="-13.8845" />
                                        <Key frame="45" value="-14.9392" />
                                        <Key frame="56" value="-16.9607" />
                                        <Key frame="67" value="-15.115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="16" value="4.13332" />
                                        <Key frame="45" value="4.3091" />
                                        <Key frame="56" value="18.1081" />
                                        <Key frame="67" value="4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="16" value="37" />
                                        <Key frame="31" value="30.1" />
                                        <Key frame="67" value="91.1461" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="16" value="14.7" />
                                        <Key frame="47" value="-22.4148" />
                                        <Key frame="56" value="-12.2194" />
                                        <Key frame="67" value="-8.17634" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="16" value="-26.4" />
                                        <Key frame="31" value="-25.4031" />
                                        <Key frame="47" value="7.02893" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-5.03277" ordinateParam="-15.5454" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="2.83093" ordinateParam="8.7443" />
                                        </Key>
                                        <Key frame="56" value="32.6933" />
                                        <Key frame="67" value="14.3239" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="OpenArmInFrontWithBump_01" id="13" localization="8" tooltip="ID : #01B 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- You&#x0A;- Yourslef&#x0A;- Yours&#x0A;- Everybody&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="310" y="29">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="12" value="1.2" />
                                        <Key frame="21" value="-8.9" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="21" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-5.01224" />
                                        <Key frame="25" value="4.8735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="-7.02893" />
                                        <Key frame="25" value="-6.95974" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="14" value="-57.303" />
                                        <Key frame="23" value="-23.7372" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="14" value="-73.8315" />
                                        <Key frame="23" value="-94.6534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="14" value="0.3168" />
                                        <Key frame="23" value="0.72" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-3.42537" />
                                        <Key frame="25" value="7.07525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="5.3638" />
                                        <Key frame="25" value="5.66523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.654" />
                                        <Key frame="25" value="-9.74028" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="14.6755" />
                                        <Key frame="25" value="-4.64829" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="14" value="52.6447" />
                                        <Key frame="23" value="45.9525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="14" value="8.17153" />
                                        <Key frame="23" value="14.4939" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="14" value="-53.7042" />
                                        <Key frame="23" value="-70.0963" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-2.98591" />
                                        <Key frame="25" value="4.8735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="6.3306" />
                                        <Key frame="25" value="6.95974" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="12" value="62.4055" />
                                        <Key frame="21" value="23.8086" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="12" value="83.5826" />
                                        <Key frame="21" value="94.6534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="12" value="0.024" />
                                        <Key frame="21" value="0.72" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-4.66066" />
                                        <Key frame="25" value="7.07525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="-5.97423" />
                                        <Key frame="25" value="-5.66523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.654" />
                                        <Key frame="25" value="-9.74028" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="14.8561" />
                                        <Key frame="25" value="-4.64829" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="12" value="32.6981" />
                                        <Key frame="21" value="27.9395" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="12" value="-4.13332" />
                                        <Key frame="21" value="-14.4939" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="12" value="45.4376" />
                                        <Key frame="21" value="70.1928" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="PointAtSelfRightArm_01" id="11" localization="8" tooltip="ID : #01B 0007&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- Myself&#x0A;- I&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Flex&#x0A;End stance : Center" x="480" y="37">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="13" value="12.1267" />
                                        <Key frame="23" value="-6.85796" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="12" value="-9.58261" />
                                        <Key frame="22" value="-5.27591" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="12" value="-4.56796" />
                                        <Key frame="22" value="-4.2164" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="15" value="-53.3" />
                                        <Key frame="25" value="-27.6835" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="15" value="-70.4" />
                                        <Key frame="25" value="-73.392" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="15" value="0.19" />
                                        <Key frame="25" value="0.6624" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="12" value="-3.95273" />
                                        <Key frame="22" value="2.72705" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="12" value="6.68218" />
                                        <Key frame="22" value="4.83644" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="12" value="-11.6872" />
                                        <Key frame="22" value="-9.66569" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="12" value="24.6073" />
                                        <Key frame="22" value="12.4782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="15" value="76.5" />
                                        <Key frame="25" value="86.5709" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="15" value="12.8" />
                                        <Key frame="25" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="15" value="-45.7061" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.7632" ordinateParam="-15.8836" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.17547" ordinateParam="10.5891" />
                                        </Key>
                                        <Key frame="25" value="-21.7117" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.30702" ordinateParam="-5.02698" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                        </Key>
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="12" value="-5.79845" />
                                        <Key frame="22" value="2.02391" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="12" value="3.43018" />
                                        <Key frame="22" value="-0.0854867" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="49.3" />
                                        <Key frame="23" value="88.5" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="61.346" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.21391" ordinateParam="20.6006" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="2.47225" ordinateParam="-15.8466" />
                                        </Key>
                                        <Key frame="23" value="21.5311" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="13" value="1" />
                                        <Key frame="23" value="0.45" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="12" value="1.93121" />
                                        <Key frame="22" value="10.9841" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="12" value="-0.173378" />
                                        <Key frame="22" value="2.37549" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="12" value="-11.6872" />
                                        <Key frame="22" value="-9.66569" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="12" value="15.1198" />
                                        <Key frame="22" value="-2.28279" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="55.9894" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.96019" ordinateParam="7.95114" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.0463" ordinateParam="-6.11625" />
                                        </Key>
                                        <Key frame="23" value="40.8721" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-2.11181" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.33333" ordinateParam="-6.39629" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="4.92023" />
                                        </Key>
                                        <Key frame="23" value="9.31412" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="60.2913" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.24005" ordinateParam="7.72419" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.26158" ordinateParam="-5.94168" />
                                        </Key>
                                        <Key frame="23" value="48.338" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="BothHandsBumpWithBump_01" id="18" localization="8" tooltip="ID : #01B 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- You&#x0A;- Yourself&#x0A;- Yours&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="128" y="26">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="29">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="10" value="-14.153" />
                                        <Key frame="16" value="6.5" />
                                        <Key frame="25" value="-14.153" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="10" value="-10.1978" />
                                        <Key frame="25" value="-10.1978" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="11" value="-68.5" />
                                        <Key frame="19" value="-53" />
                                        <Key frame="29" value="-56.8635" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.287" ordinateParam="3.82525" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                        </Key>
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="29" value="-52.3859" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="11" value="0.19" />
                                        <Key frame="19" value="0.55" />
                                        <Key frame="29" value="0.1956" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="29" value="71.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="19" value="5.3" />
                                        <Key frame="29" value="-4.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="19" value="-51.8" />
                                        <Key frame="29" value="0.788627" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="11" value="68.5" />
                                        <Key frame="19" value="53" />
                                        <Key frame="29" value="59.5051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="29" value="44.5587" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="11" value="0.19" />
                                        <Key frame="19" value="0.55" />
                                        <Key frame="29" value="0.2052" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="29" value="71.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="19" value="-5.3" />
                                        <Key frame="29" value="4.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="19" value="51.8" />
                                        <Key frame="29" value="17.6638" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="13" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="20" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="20" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_叉腰" id="2" localization="8" tooltip="" x="738" y="450">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="WideHorizontalRightArm_LeanLeft_HeadShake_01" id="20" localization="8" tooltip="ID : #01D 0015&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Nope&#x0A;- Never&#x0A;- Negative&#x0A;- Forbiden&#x0A;- Oppose&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : RightArmOnHip&#x0A;End stance : LeanLeft" x="711" y="35">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="69">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="14" value="-4.74855" />
                                        <Key frame="57" value="5.97423" />
                                        <Key frame="65" value="-4.22121" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="14" value="12.3903" />
                                        <Key frame="18" value="-13.1" />
                                        <Key frame="22" value="20.1" />
                                        <Key frame="27" value="-13.1" />
                                        <Key frame="34" value="20.1" />
                                        <Key frame="41" value="-13.1" />
                                        <Key frame="50" value="20.1" />
                                        <Key frame="57" value="8.4352" />
                                        <Key frame="65" value="11.072" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="16" value="0.261268" />
                                        <Key frame="45" value="-7.29742" />
                                        <Key frame="56" value="-6.59429" />
                                        <Key frame="67" value="-0.178186" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="16" value="-2.54646" />
                                        <Key frame="45" value="-19.158" />
                                        <Key frame="67" value="0.0902951" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="18" value="-82.7037" />
                                        <Key frame="33" value="-82.7037" />
                                        <Key frame="49" value="-87.2741" />
                                        <Key frame="58" value="-77.1946" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-2.83595" ordinateParam="-3.80419" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.46616" ordinateParam="4.64955" />
                                        </Key>
                                        <Key frame="69" value="-35.2422" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="18" value="-30.5008" />
                                        <Key frame="33" value="-30.5008" />
                                        <Key frame="49" value="-30.9403" />
                                        <Key frame="58" value="-83.5874" />
                                        <Key frame="69" value="-78.6655" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="18" value="0.0224" />
                                        <Key frame="33" value="0.0224" />
                                        <Key frame="49" value="0.034" />
                                        <Key frame="58" value="0.1008" />
                                        <Key frame="69" value="0.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="16" value="10.9889" />
                                        <Key frame="45" value="-0.261268" />
                                        <Key frame="56" value="-3.33748" />
                                        <Key frame="67" value="19.3386" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="16" value="1.32078" />
                                        <Key frame="45" value="25.491" />
                                        <Key frame="67" value="-1.0523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="16" value="-13.8845" />
                                        <Key frame="45" value="-14.9392" />
                                        <Key frame="56" value="-16.9607" />
                                        <Key frame="67" value="-15.115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="16" value="0.700723" />
                                        <Key frame="45" value="17.9275" />
                                        <Key frame="56" value="18.4549" />
                                        <Key frame="67" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="18" value="118.651" />
                                        <Key frame="33" value="118.651" />
                                        <Key frame="49" value="119.179" />
                                        <Key frame="58" value="100.546" />
                                        <Key frame="69" value="98.7879" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="18" value="43.6798" />
                                        <Key frame="33" value="43.6798" />
                                        <Key frame="49" value="47.1076" />
                                        <Key frame="69" value="7.29261" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="18" value="50.6232" />
                                        <Key frame="33" value="50.6232" />
                                        <Key frame="49" value="64.9496" />
                                        <Key frame="58" value="-38.4111" />
                                        <Key frame="69" value="-6.06693" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="16" value="-0.964409" />
                                        <Key frame="45" value="-2.37068" />
                                        <Key frame="56" value="-6.50159" />
                                        <Key frame="67" value="-1.57965" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="16" value="7.4732" />
                                        <Key frame="45" value="-7.73207" />
                                        <Key frame="67" value="10.6373" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="16" value="77.4" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-6.03465" ordinateParam="8.78744" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="5.65748" ordinateParam="-8.23822" />
                                        </Key>
                                        <Key frame="31" value="18.3" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-5.70131" ordinateParam="14.2542" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="6.0814" ordinateParam="-15.2045" />
                                        </Key>
                                        <Key frame="47" value="2.55127" />
                                        <Key frame="56" value="55.1984" />
                                        <Key frame="67" value="33.7528" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="16" value="39.1" />
                                        <Key frame="47" value="37.791" />
                                        <Key frame="56" value="63.5433" />
                                        <Key frame="67" value="69.7836" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="16" value="0.86" />
                                        <Key frame="31" value="0.862" />
                                        <Key frame="47" value="0.8492" />
                                        <Key frame="56" value="0.0968" />
                                        <Key frame="67" value="0.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="16" value="8.4352" />
                                        <Key frame="45" value="9.22623" />
                                        <Key frame="56" value="-2.63916" />
                                        <Key frame="67" value="10.1051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="16" value="-6.94104" />
                                        <Key frame="45" value="15.735" />
                                        <Key frame="67" value="-10.2809" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="16" value="-13.8845" />
                                        <Key frame="45" value="-14.9392" />
                                        <Key frame="56" value="-16.9607" />
                                        <Key frame="67" value="-15.115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="16" value="4.13332" />
                                        <Key frame="45" value="4.3091" />
                                        <Key frame="56" value="18.1081" />
                                        <Key frame="67" value="4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="16" value="37" />
                                        <Key frame="31" value="30.1" />
                                        <Key frame="67" value="91.1461" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="16" value="14.7" />
                                        <Key frame="47" value="-22.4148" />
                                        <Key frame="56" value="-12.2194" />
                                        <Key frame="67" value="-8.17634" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="16" value="-26.4" />
                                        <Key frame="31" value="-25.4031" />
                                        <Key frame="47" value="7.02893" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-5.03277" ordinateParam="-15.5454" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="2.83093" ordinateParam="8.7443" />
                                        </Key>
                                        <Key frame="56" value="32.6933" />
                                        <Key frame="67" value="14.3239" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="OpenArmInFrontWithBump_01" id="13" localization="8" tooltip="ID : #01B 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- You&#x0A;- Yourslef&#x0A;- Yours&#x0A;- Everybody&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="310" y="29">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="12" value="1.2" />
                                        <Key frame="21" value="-8.9" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="21" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-5.01224" />
                                        <Key frame="25" value="4.8735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="-7.02893" />
                                        <Key frame="25" value="-6.95974" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="14" value="-57.303" />
                                        <Key frame="23" value="-23.7372" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="14" value="-73.8315" />
                                        <Key frame="23" value="-94.6534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="14" value="0.3168" />
                                        <Key frame="23" value="0.72" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-3.42537" />
                                        <Key frame="25" value="7.07525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="5.3638" />
                                        <Key frame="25" value="5.66523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.654" />
                                        <Key frame="25" value="-9.74028" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="14.6755" />
                                        <Key frame="25" value="-4.64829" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="14" value="52.6447" />
                                        <Key frame="23" value="45.9525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="14" value="8.17153" />
                                        <Key frame="23" value="14.4939" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="14" value="-53.7042" />
                                        <Key frame="23" value="-70.0963" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-2.98591" />
                                        <Key frame="25" value="4.8735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="6.3306" />
                                        <Key frame="25" value="6.95974" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="12" value="62.4055" />
                                        <Key frame="21" value="23.8086" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="12" value="83.5826" />
                                        <Key frame="21" value="94.6534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="12" value="0.024" />
                                        <Key frame="21" value="0.72" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-4.66066" />
                                        <Key frame="25" value="7.07525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="-5.97423" />
                                        <Key frame="25" value="-5.66523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.654" />
                                        <Key frame="25" value="-9.74028" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="14.8561" />
                                        <Key frame="25" value="-4.64829" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="12" value="32.6981" />
                                        <Key frame="21" value="27.9395" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="12" value="-4.13332" />
                                        <Key frame="21" value="-14.4939" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="12" value="45.4376" />
                                        <Key frame="21" value="70.1928" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="PointAtSelfRightArm_01" id="11" localization="8" tooltip="ID : #01B 0007&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- Myself&#x0A;- I&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Flex&#x0A;End stance : Center" x="480" y="37">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="13" value="12.1267" />
                                        <Key frame="23" value="-6.85796" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="12" value="-9.58261" />
                                        <Key frame="22" value="-5.27591" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="12" value="-4.56796" />
                                        <Key frame="22" value="-4.2164" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="15" value="-53.3" />
                                        <Key frame="25" value="-27.6835" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="15" value="-70.4" />
                                        <Key frame="25" value="-73.392" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="15" value="0.19" />
                                        <Key frame="25" value="0.6624" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="12" value="-3.95273" />
                                        <Key frame="22" value="2.72705" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="12" value="6.68218" />
                                        <Key frame="22" value="4.83644" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="12" value="-11.6872" />
                                        <Key frame="22" value="-9.66569" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="12" value="24.6073" />
                                        <Key frame="22" value="12.4782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="15" value="76.5" />
                                        <Key frame="25" value="86.5709" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="15" value="12.8" />
                                        <Key frame="25" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="15" value="-45.7061" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.7632" ordinateParam="-15.8836" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.17547" ordinateParam="10.5891" />
                                        </Key>
                                        <Key frame="25" value="-21.7117" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.30702" ordinateParam="-5.02698" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                        </Key>
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="12" value="-5.79845" />
                                        <Key frame="22" value="2.02391" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="12" value="3.43018" />
                                        <Key frame="22" value="-0.0854867" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="49.3" />
                                        <Key frame="23" value="88.5" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="61.346" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.21391" ordinateParam="20.6006" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="2.47225" ordinateParam="-15.8466" />
                                        </Key>
                                        <Key frame="23" value="21.5311" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="13" value="1" />
                                        <Key frame="23" value="0.45" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="12" value="1.93121" />
                                        <Key frame="22" value="10.9841" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="12" value="-0.173378" />
                                        <Key frame="22" value="2.37549" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="12" value="-11.6872" />
                                        <Key frame="22" value="-9.66569" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="12" value="15.1198" />
                                        <Key frame="22" value="-2.28279" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="55.9894" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.96019" ordinateParam="7.95114" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.0463" ordinateParam="-6.11625" />
                                        </Key>
                                        <Key frame="23" value="40.8721" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-2.11181" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.33333" ordinateParam="-6.39629" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="4.92023" />
                                        </Key>
                                        <Key frame="23" value="9.31412" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="60.2913" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.24005" ordinateParam="7.72419" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.26158" ordinateParam="-5.94168" />
                                        </Key>
                                        <Key frame="23" value="48.338" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="BothHandsBumpWithBump_01" id="18" localization="8" tooltip="ID : #01B 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- You&#x0A;- Yourself&#x0A;- Yours&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="128" y="26">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="29">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="10" value="-14.153" />
                                        <Key frame="16" value="6.5" />
                                        <Key frame="25" value="-14.153" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="10" value="-10.1978" />
                                        <Key frame="25" value="-10.1978" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="11" value="-68.5" />
                                        <Key frame="19" value="-53" />
                                        <Key frame="29" value="-56.8635" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.287" ordinateParam="3.82525" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                        </Key>
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="29" value="-52.3859" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="11" value="0.19" />
                                        <Key frame="19" value="0.55" />
                                        <Key frame="29" value="0.1956" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="29" value="71.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="19" value="5.3" />
                                        <Key frame="29" value="-4.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="19" value="-51.8" />
                                        <Key frame="29" value="0.788627" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="11" value="68.5" />
                                        <Key frame="19" value="53" />
                                        <Key frame="29" value="59.5051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="29" value="44.5587" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="11" value="0.19" />
                                        <Key frame="19" value="0.55" />
                                        <Key frame="29" value="0.2052" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="29" value="71.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="19" value="-5.3" />
                                        <Key frame="29" value="4.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="19" value="51.8" />
                                        <Key frame="29" value="17.6638" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="13" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="20" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="20" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="26" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="12" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="23" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="19" indexofinput="2" outputowner="23" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="&#x08;&#x08;_甩手臂_负面" id="8" localization="8" tooltip="" x="337" y="575">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="_暂停兩秒" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="894" y="95">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="RAction" id="1" localization="8" tooltip="" x="277" y="45">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="118.921">
                                <Box name="_暂停一秒" id="16" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="272" y="271">
                                  <bitmap>media/images/box/wait.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                  <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                  <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                  <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                </Box>
                                <Box name="_问再一遍" id="22" localization="8" tooltip="Say some text. The text can be localized." x="803" y="379">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="看清楚了么？需要我再做一遍么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_再做一遍" id="28" localization="8" tooltip="Say some text. The text can be localized." x="172" y="21">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，那我再做一次给你看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="345" y="16">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="2" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="602" y="246">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_人脸识别" id="5" localization="-1" tooltip="This box makes the robot track people with different modes." x="768" y="672">
                                  <bitmap>media/images/box/interaction/target_face.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                  <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                                  <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                                  <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                                    <Choice value="Head" />
                                    <Choice value="WholeBody" />
                                    <Choice value="Move" />
                                  </Parameter>
                                  <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                                    <Choice value="None" />
                                    <Choice value="Arms" />
                                    <Choice value="LArm" />
                                    <Choice value="RArm" />
                                  </Parameter>
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                                  <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                                  <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                                  <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                                </Box>
                                <Box name="_请再一遍" id="4" localization="8" tooltip="Say some text. The text can be localized." x="457" y="587">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="那请你做一遍看看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_甩手臂" id="1" localization="8" tooltip="" x="444" y="370">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="D甩左手" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="385" y="54">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="15" start_frame="1" end_frame="-1" size="65">
                                              <ActuatorList model="nao">
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                                  <Key frame="19" value="0.437054" />
                                                  <Key frame="53" value="0.437054" />
                                                  <Key frame="65" value="0.437054" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                                  <Key frame="19" value="-0.705538" />
                                                  <Key frame="53" value="0.349163" />
                                                  <Key frame="65" value="0.349163" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="19" value="87.7135" />
                                                  <Key frame="41" value="10.2809" />
                                                  <Key frame="53" value="97.8211" />
                                                  <Key frame="65" value="97.8211" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="2.28278" />
                                                  <Key frame="41" value="0" />
                                                  <Key frame="53" value="77.6939" />
                                                  <Key frame="65" value="76.9908" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                                  <Key frame="19" value="-98.4411" />
                                                  <Key frame="41" value="-74.2709" />
                                                  <Key frame="53" value="-12.3951" />
                                                  <Key frame="65" value="-12.3951" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="-84.6373" />
                                                  <Key frame="41" value="-89.2077" />
                                                  <Key frame="53" value="-0.612838" />
                                                  <Key frame="65" value="-0.612838" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                                  <Key frame="19" value="-15.9108" />
                                                  <Key frame="53" value="-16.6139" />
                                                  <Key frame="65" value="-16.6139" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                                  <Key frame="19" value="0.997114" />
                                                  <Key frame="53" value="0.995296" />
                                                  <Key frame="65" value="0.995296" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                                  <Key frame="19" value="0.266079" />
                                                  <Key frame="41" value="118.744" />
                                                  <Key frame="53" value="89.8278" />
                                                  <Key frame="65" value="89.8278" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="-6.77007" />
                                                  <Key frame="41" value="-8.87947" />
                                                  <Key frame="53" value="-10.4615" />
                                                  <Key frame="65" value="-10.4615" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                                  <Key frame="19" value="87.0983" />
                                                  <Key frame="41" value="82.7916" />
                                                  <Key frame="53" value="95.0086" />
                                                  <Key frame="65" value="94.9207" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="83.8511" />
                                                  <Key frame="41" value="89.5641" />
                                                  <Key frame="53" value="88.3336" />
                                                  <Key frame="65" value="88.3336" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                                  <Key frame="19" value="23.3768" />
                                                  <Key frame="53" value="23.5526" />
                                                  <Key frame="65" value="23.5526" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                                  <Key frame="19" value="1" />
                                                  <Key frame="53" value="1" />
                                                  <Key frame="65" value="1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                                  <Key frame="19" value="-41.839" />
                                                  <Key frame="30" value="-42.3663" />
                                                  <Key frame="53" value="-27.9521" />
                                                  <Key frame="65" value="-27.9521" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="3.32888" />
                                                  <Key frame="30" value="4.2078" />
                                                  <Key frame="53" value="-8.36072" />
                                                  <Key frame="65" value="-8.36072" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                                  <Key frame="19" value="10.2706" />
                                                  <Key frame="30" value="9.30383" />
                                                  <Key frame="53" value="-13.8117" />
                                                  <Key frame="65" value="-13.8117" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                                  <Key frame="19" value="10.6166" />
                                                  <Key frame="30" value="9.73765" />
                                                  <Key frame="53" value="9.56187" />
                                                  <Key frame="65" value="9.56187" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                                  <Key frame="19" value="10.9765" />
                                                  <Key frame="30" value="11.7676" />
                                                  <Key frame="53" value="10.5371" />
                                                  <Key frame="65" value="10.5371" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="3.78051" />
                                                  <Key frame="30" value="3.51684" />
                                                  <Key frame="53" value="-0.614074" />
                                                  <Key frame="65" value="-0.614074" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="-8.52433" />
                                                  <Key frame="30" value="-8.788" />
                                                  <Key frame="53" value="-14.7646" />
                                                  <Key frame="65" value="-14.7646" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                                  <Key frame="19" value="28.0342" />
                                                  <Key frame="30" value="28.1221" />
                                                  <Key frame="53" value="-15.9996" />
                                                  <Key frame="65" value="-15.9996" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                                  <Key frame="19" value="27.3106" />
                                                  <Key frame="30" value="26.0801" />
                                                  <Key frame="53" value="1.11886" />
                                                  <Key frame="65" value="1.11886" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                                  <Key frame="19" value="-23.5565" />
                                                  <Key frame="30" value="-23.0292" />
                                                  <Key frame="53" value="20.2135" />
                                                  <Key frame="65" value="20.2135" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                                  <Key frame="19" value="1.848" />
                                                  <Key frame="30" value="1.93589" />
                                                  <Key frame="53" value="14.2407" />
                                                  <Key frame="65" value="14.2407" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                          </Box>
                                          <Box name="S抬手臂" id="11" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="262" y="53">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="StandZero" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Box name="S站" id="12" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="131" y="43">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Box name="GoToStance_Exclamation_Center" id="24" localization="8" tooltip="ID : #01F 9991&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Transition&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="513" y="53">
                                            <bitmap>media/images/box/movement/move.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                            <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="26">
                                              <ActuatorList model="">
                                                <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                                  <Key frame="11" value="0" />
                                                  <Key frame="24" value="-8.61579" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                                  <Key frame="24" value="-2.90283" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                                  <Key frame="11" value="-5.2" />
                                                  <Key frame="24" value="3.3" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                                  <Key frame="24" value="-7.11683" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                                  <Key frame="12" value="-54.5" />
                                                  <Key frame="23" value="-84.8" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                                  <Key frame="12" value="-103.9" />
                                                  <Key frame="23" value="-92.7" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                                  <Key frame="12" value="0.83" />
                                                  <Key frame="23" value="0.01" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                                  <Key frame="11" value="-12.4782" />
                                                  <Key frame="24" value="8.26423" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                                  <Key frame="24" value="5.3638" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                                  <Key frame="11" value="-11.072" />
                                                  <Key frame="24" value="-9.48991" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                                  <Key frame="11" value="23.992" />
                                                  <Key frame="24" value="-4.92435" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                                  <Key frame="12" value="62.8" />
                                                  <Key frame="23" value="97.1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                                  <Key frame="12" value="15.3" />
                                                  <Key frame="23" value="-2.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                                  <Key frame="12" value="-71.3" />
                                                  <Key frame="23" value="-79.1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                                  <Key frame="11" value="-5.2" />
                                                  <Key frame="24" value="3.3" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                                  <Key frame="24" value="6.77007" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                                  <Key frame="10" value="54.5" />
                                                  <Key frame="26" value="84.8" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                                  <Key frame="10" value="103.9" />
                                                  <Key frame="26" value="92.7" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                                  <Key frame="10" value="0.83" />
                                                  <Key frame="26" value="0.01" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                                  <Key frame="11" value="-15.3835" />
                                                  <Key frame="24" value="7.46839" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                                  <Key frame="24" value="-5.2711" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                                  <Key frame="11" value="-11.072" />
                                                  <Key frame="24" value="-9.48991" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                                  <Key frame="11" value="24.8758" />
                                                  <Key frame="24" value="-5.00743" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                                  <Key frame="10" value="64.5" />
                                                  <Key frame="26" value="97.1" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                                  <Key frame="10" value="-15.3" />
                                                  <Key frame="26" value="2.2" />
                                                </ActuatorCurve>
                                                <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                                  <Key frame="10" value="71.3" />
                                                  <Key frame="26" value="79.1" />
                                                </ActuatorCurve>
                                              </ActuatorList>
                                            </Timeline>
                                            <Resource name="Standing" type="Lock" timeout="1" />
                                            <Resource name="All motors" type="Lock" timeout="1" />
                                          </Box>
                                          <Link inputowner="13" indexofinput="2" outputowner="11" indexofoutput="4" />
                                          <Link inputowner="24" indexofinput="2" outputowner="13" indexofoutput="4" />
                                          <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="4" />
                                          <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="24" indexofoutput="4" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="23" indexofinput="2" outputowner="28" indexofoutput="4" />
                                <Link inputowner="22" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="16" indexofinput="2" outputowner="23" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="1Negative" id="26" localization="8" tooltip="Say the text received on its input." x="99" y="314">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_别害羞" id="20" localization="8" tooltip="Say some text with animations. The text can be localized." x="105" y="891">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，试试看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_播放音乐" id="18" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="104" y="129">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../dancingBGM.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="140" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="15" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                  <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                  <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                  <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                </Box>
                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                  <bitmap>media/images/box/folder.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                  <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Audio player" type="Lock" timeout="0" />
                      </Box>
                      <Box name="2Second" id="4" localization="8" tooltip="Say some text with animations. The text can be localized." x="318" y="342">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="还是我们一起做一遍吧！请看好我的动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_暂停一秒" id="13" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="525" y="368">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="3Third" id="3" localization="8" tooltip="Say some text with animations. The text can be localized." x="327" y="556">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="再做一次试试看！最后一遍了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_人脸识别" id="19" localization="-1" tooltip="This box makes the robot track people with different modes." x="791" y="636">
                        <bitmap>media/images/box/interaction/target_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                        <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                        <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                          <Choice value="Head" />
                          <Choice value="WholeBody" />
                          <Choice value="Move" />
                        </Parameter>
                        <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                          <Choice value="None" />
                          <Choice value="Arms" />
                          <Choice value="LArm" />
                          <Choice value="RArm" />
                        </Parameter>
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                        <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                        <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                        <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                      </Box>
                      <Box name="2Negative" id="8" localization="8" tooltip="Say the text received on its input." x="113" y="522">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="3Negative" id="6" localization="8" tooltip="Say the text received on its input." x="637" y="138">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_要求重新做" id="9" localization="8" tooltip="Say some text with animations. The text can be localized." x="265" y="892">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这样不可以，再认真做一次！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_再说一次" id="5" localization="8" tooltip="Say some text with animations. The text can be localized." x="428" y="893">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_请调位置" id="10" localization="8" tooltip="Say some text with animations. The text can be localized." x="657" y="1013">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="不好意思，NAO看不到你了！你可以帮我调整一下位置吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_继续" id="11" localization="8" tooltip="Say some text with animations. The text can be localized." x="793" y="1010">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="谢谢你！我们可以继续了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_说些什么" id="14" localization="8" tooltip="" x="921" y="1015">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="sayText" id="26" localization="8" tooltip="Say the text received on its input." x="204" y="14">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Animated Say Text" id="28" localization="8" tooltip="Say the text received on its input and move during its speech.&#x0A;" x="72" y="16">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_认真一点" id="24" localization="8" tooltip="Say some text with animations. The text can be localized." x="164" y="1049">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，再做一次看看！要认真一点喔！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="560" y="592">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_甩手臂" id="16" localization="8" tooltip="" x="331" y="1049">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="D甩左手" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="385" y="54">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="15" start_frame="1" end_frame="-1" size="65">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="19" value="0.437054" />
                                        <Key frame="53" value="0.437054" />
                                        <Key frame="65" value="0.437054" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="19" value="-0.705538" />
                                        <Key frame="53" value="0.349163" />
                                        <Key frame="65" value="0.349163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="87.7135" />
                                        <Key frame="41" value="10.2809" />
                                        <Key frame="53" value="97.8211" />
                                        <Key frame="65" value="97.8211" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="2.28278" />
                                        <Key frame="41" value="0" />
                                        <Key frame="53" value="77.6939" />
                                        <Key frame="65" value="76.9908" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-98.4411" />
                                        <Key frame="41" value="-74.2709" />
                                        <Key frame="53" value="-12.3951" />
                                        <Key frame="65" value="-12.3951" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-84.6373" />
                                        <Key frame="41" value="-89.2077" />
                                        <Key frame="53" value="-0.612838" />
                                        <Key frame="65" value="-0.612838" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-15.9108" />
                                        <Key frame="53" value="-16.6139" />
                                        <Key frame="65" value="-16.6139" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="19" value="0.997114" />
                                        <Key frame="53" value="0.995296" />
                                        <Key frame="65" value="0.995296" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="0.266079" />
                                        <Key frame="41" value="118.744" />
                                        <Key frame="53" value="89.8278" />
                                        <Key frame="65" value="89.8278" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-6.77007" />
                                        <Key frame="41" value="-8.87947" />
                                        <Key frame="53" value="-10.4615" />
                                        <Key frame="65" value="-10.4615" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="87.0983" />
                                        <Key frame="41" value="82.7916" />
                                        <Key frame="53" value="95.0086" />
                                        <Key frame="65" value="94.9207" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="83.8511" />
                                        <Key frame="41" value="89.5641" />
                                        <Key frame="53" value="88.3336" />
                                        <Key frame="65" value="88.3336" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="19" value="23.3768" />
                                        <Key frame="53" value="23.5526" />
                                        <Key frame="65" value="23.5526" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="19" value="1" />
                                        <Key frame="53" value="1" />
                                        <Key frame="65" value="1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="19" value="-41.839" />
                                        <Key frame="30" value="-42.3663" />
                                        <Key frame="53" value="-27.9521" />
                                        <Key frame="65" value="-27.9521" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="19" value="3.32888" />
                                        <Key frame="30" value="4.2078" />
                                        <Key frame="53" value="-8.36072" />
                                        <Key frame="65" value="-8.36072" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.2706" />
                                        <Key frame="30" value="9.30383" />
                                        <Key frame="53" value="-13.8117" />
                                        <Key frame="65" value="-13.8117" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.6166" />
                                        <Key frame="30" value="9.73765" />
                                        <Key frame="53" value="9.56187" />
                                        <Key frame="65" value="9.56187" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.9765" />
                                        <Key frame="30" value="11.7676" />
                                        <Key frame="53" value="10.5371" />
                                        <Key frame="65" value="10.5371" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="19" value="3.78051" />
                                        <Key frame="30" value="3.51684" />
                                        <Key frame="53" value="-0.614074" />
                                        <Key frame="65" value="-0.614074" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-8.52433" />
                                        <Key frame="30" value="-8.788" />
                                        <Key frame="53" value="-14.7646" />
                                        <Key frame="65" value="-14.7646" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="19" value="28.0342" />
                                        <Key frame="30" value="28.1221" />
                                        <Key frame="53" value="-15.9996" />
                                        <Key frame="65" value="-15.9996" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="19" value="27.3106" />
                                        <Key frame="30" value="26.0801" />
                                        <Key frame="53" value="1.11886" />
                                        <Key frame="65" value="1.11886" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="19" value="-23.5565" />
                                        <Key frame="30" value="-23.0292" />
                                        <Key frame="53" value="20.2135" />
                                        <Key frame="65" value="20.2135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="19" value="1.848" />
                                        <Key frame="30" value="1.93589" />
                                        <Key frame="53" value="14.2407" />
                                        <Key frame="65" value="14.2407" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="S抬手臂" id="11" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="262" y="53">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="StandZero" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Box name="S站" id="12" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="131" y="43">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Box name="GoToStance_Exclamation_Center" id="24" localization="8" tooltip="ID : #01F 9991&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Transition&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="513" y="53">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="26">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="11" value="0" />
                                        <Key frame="24" value="-8.61579" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="24" value="-2.90283" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="11" value="-5.2" />
                                        <Key frame="24" value="3.3" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="24" value="-7.11683" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="12" value="-54.5" />
                                        <Key frame="23" value="-84.8" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="12" value="-103.9" />
                                        <Key frame="23" value="-92.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="12" value="0.83" />
                                        <Key frame="23" value="0.01" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="11" value="-12.4782" />
                                        <Key frame="24" value="8.26423" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="24" value="5.3638" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="11" value="-11.072" />
                                        <Key frame="24" value="-9.48991" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="11" value="23.992" />
                                        <Key frame="24" value="-4.92435" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="12" value="62.8" />
                                        <Key frame="23" value="97.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="12" value="15.3" />
                                        <Key frame="23" value="-2.2" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="12" value="-71.3" />
                                        <Key frame="23" value="-79.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="11" value="-5.2" />
                                        <Key frame="24" value="3.3" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="24" value="6.77007" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="10" value="54.5" />
                                        <Key frame="26" value="84.8" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="10" value="103.9" />
                                        <Key frame="26" value="92.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="10" value="0.83" />
                                        <Key frame="26" value="0.01" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="11" value="-15.3835" />
                                        <Key frame="24" value="7.46839" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="24" value="-5.2711" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="11" value="-11.072" />
                                        <Key frame="24" value="-9.48991" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="11" value="24.8758" />
                                        <Key frame="24" value="-5.00743" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="10" value="64.5" />
                                        <Key frame="26" value="97.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="10" value="-15.3" />
                                        <Key frame="26" value="2.2" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="10" value="71.3" />
                                        <Key frame="26" value="79.1" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="13" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="24" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="24" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_甩手臂" id="2" localization="8" tooltip="" x="736" y="409">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="D甩左手" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="385" y="54">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="15" start_frame="1" end_frame="-1" size="65">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="19" value="0.437054" />
                                        <Key frame="53" value="0.437054" />
                                        <Key frame="65" value="0.437054" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="19" value="-0.705538" />
                                        <Key frame="53" value="0.349163" />
                                        <Key frame="65" value="0.349163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="87.7135" />
                                        <Key frame="41" value="10.2809" />
                                        <Key frame="53" value="97.8211" />
                                        <Key frame="65" value="97.8211" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="2.28278" />
                                        <Key frame="41" value="0" />
                                        <Key frame="53" value="77.6939" />
                                        <Key frame="65" value="76.9908" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-98.4411" />
                                        <Key frame="41" value="-74.2709" />
                                        <Key frame="53" value="-12.3951" />
                                        <Key frame="65" value="-12.3951" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-84.6373" />
                                        <Key frame="41" value="-89.2077" />
                                        <Key frame="53" value="-0.612838" />
                                        <Key frame="65" value="-0.612838" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-15.9108" />
                                        <Key frame="53" value="-16.6139" />
                                        <Key frame="65" value="-16.6139" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="19" value="0.997114" />
                                        <Key frame="53" value="0.995296" />
                                        <Key frame="65" value="0.995296" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="0.266079" />
                                        <Key frame="41" value="118.744" />
                                        <Key frame="53" value="89.8278" />
                                        <Key frame="65" value="89.8278" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-6.77007" />
                                        <Key frame="41" value="-8.87947" />
                                        <Key frame="53" value="-10.4615" />
                                        <Key frame="65" value="-10.4615" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="87.0983" />
                                        <Key frame="41" value="82.7916" />
                                        <Key frame="53" value="95.0086" />
                                        <Key frame="65" value="94.9207" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="83.8511" />
                                        <Key frame="41" value="89.5641" />
                                        <Key frame="53" value="88.3336" />
                                        <Key frame="65" value="88.3336" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="19" value="23.3768" />
                                        <Key frame="53" value="23.5526" />
                                        <Key frame="65" value="23.5526" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="19" value="1" />
                                        <Key frame="53" value="1" />
                                        <Key frame="65" value="1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="19" value="-41.839" />
                                        <Key frame="30" value="-42.3663" />
                                        <Key frame="53" value="-27.9521" />
                                        <Key frame="65" value="-27.9521" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="19" value="3.32888" />
                                        <Key frame="30" value="4.2078" />
                                        <Key frame="53" value="-8.36072" />
                                        <Key frame="65" value="-8.36072" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.2706" />
                                        <Key frame="30" value="9.30383" />
                                        <Key frame="53" value="-13.8117" />
                                        <Key frame="65" value="-13.8117" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.6166" />
                                        <Key frame="30" value="9.73765" />
                                        <Key frame="53" value="9.56187" />
                                        <Key frame="65" value="9.56187" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.9765" />
                                        <Key frame="30" value="11.7676" />
                                        <Key frame="53" value="10.5371" />
                                        <Key frame="65" value="10.5371" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="19" value="3.78051" />
                                        <Key frame="30" value="3.51684" />
                                        <Key frame="53" value="-0.614074" />
                                        <Key frame="65" value="-0.614074" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-8.52433" />
                                        <Key frame="30" value="-8.788" />
                                        <Key frame="53" value="-14.7646" />
                                        <Key frame="65" value="-14.7646" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="19" value="28.0342" />
                                        <Key frame="30" value="28.1221" />
                                        <Key frame="53" value="-15.9996" />
                                        <Key frame="65" value="-15.9996" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="19" value="27.3106" />
                                        <Key frame="30" value="26.0801" />
                                        <Key frame="53" value="1.11886" />
                                        <Key frame="65" value="1.11886" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="19" value="-23.5565" />
                                        <Key frame="30" value="-23.0292" />
                                        <Key frame="53" value="20.2135" />
                                        <Key frame="65" value="20.2135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="19" value="1.848" />
                                        <Key frame="30" value="1.93589" />
                                        <Key frame="53" value="14.2407" />
                                        <Key frame="65" value="14.2407" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="S抬手臂" id="11" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="262" y="53">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="StandZero" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Box name="S站" id="12" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="131" y="43">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Box name="GoToStance_Exclamation_Center" id="24" localization="8" tooltip="ID : #01F 9991&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Transition&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="513" y="53">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="26">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="11" value="0" />
                                        <Key frame="24" value="-8.61579" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="24" value="-2.90283" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="11" value="-5.2" />
                                        <Key frame="24" value="3.3" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="24" value="-7.11683" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="12" value="-54.5" />
                                        <Key frame="23" value="-84.8" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="12" value="-103.9" />
                                        <Key frame="23" value="-92.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="12" value="0.83" />
                                        <Key frame="23" value="0.01" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="11" value="-12.4782" />
                                        <Key frame="24" value="8.26423" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="24" value="5.3638" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="11" value="-11.072" />
                                        <Key frame="24" value="-9.48991" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="11" value="23.992" />
                                        <Key frame="24" value="-4.92435" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="12" value="62.8" />
                                        <Key frame="23" value="97.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="12" value="15.3" />
                                        <Key frame="23" value="-2.2" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="12" value="-71.3" />
                                        <Key frame="23" value="-79.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="11" value="-5.2" />
                                        <Key frame="24" value="3.3" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="24" value="6.77007" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="10" value="54.5" />
                                        <Key frame="26" value="84.8" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="10" value="103.9" />
                                        <Key frame="26" value="92.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="10" value="0.83" />
                                        <Key frame="26" value="0.01" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="11" value="-15.3835" />
                                        <Key frame="24" value="7.46839" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="24" value="-5.2711" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="11" value="-11.072" />
                                        <Key frame="24" value="-9.48991" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="11" value="24.8758" />
                                        <Key frame="24" value="-5.00743" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="10" value="64.5" />
                                        <Key frame="26" value="97.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="10" value="-15.3" />
                                        <Key frame="26" value="2.2" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="10" value="71.3" />
                                        <Key frame="26" value="79.1" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="13" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="24" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="24" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="26" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="12" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="23" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="19" indexofinput="2" outputowner="23" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_迪斯可_负面" id="4" localization="8" tooltip="" x="124" y="579">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="_暂停兩秒" id="12" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="856" y="72">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="2" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="RAction" id="1" localization="8" tooltip="" x="277" y="45">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram scale="118.921">
                                <Box name="_暂停一秒" id="16" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="323" y="250">
                                  <bitmap>media/images/box/wait.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                  <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                                  <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                                  <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                                </Box>
                                <Box name="_迪斯可手四次" id="23" localization="8" tooltip="ID : #04B 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Disco" x="494" y="142">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Animation starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Animation stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when animation is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="398">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="42" value="-42.7" />
                                        <Key frame="62" value="16.6" />
                                        <Key frame="85" value="-42.7" />
                                        <Key frame="105" value="16.6" />
                                        <Key frame="127" value="-42.7" />
                                        <Key frame="147" value="16.6" />
                                        <Key frame="170" value="-42.7" />
                                        <Key frame="190" value="16.6" />
                                        <Key frame="217" value="42.7" />
                                        <Key frame="237" value="-16.6" />
                                        <Key frame="260" value="42.7" />
                                        <Key frame="280" value="-16.6" />
                                        <Key frame="301" value="42.7" />
                                        <Key frame="321" value="-16.6" />
                                        <Key frame="343" value="42.7" />
                                        <Key frame="363" value="-16.6" />
                                        <Key frame="396" value="0.524941" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="42" value="-27.3" />
                                        <Key frame="62" value="19.4" />
                                        <Key frame="85" value="-27.3" />
                                        <Key frame="105" value="19.4" />
                                        <Key frame="127" value="-27.3" />
                                        <Key frame="147" value="19.4" />
                                        <Key frame="170" value="-27.3" />
                                        <Key frame="190" value="19.4" />
                                        <Key frame="217" value="-27.3" />
                                        <Key frame="237" value="19.4" />
                                        <Key frame="260" value="-27.3" />
                                        <Key frame="280" value="19.4" />
                                        <Key frame="301" value="-27.3" />
                                        <Key frame="321" value="19.4" />
                                        <Key frame="343" value="-27.3" />
                                        <Key frame="363" value="19.4" />
                                        <Key frame="396" value="-9.84628" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="21" value="36.6484" />
                                        <Key frame="42" value="100.106" />
                                        <Key frame="62" value="106.347" />
                                        <Key frame="85" value="100.106" />
                                        <Key frame="105" value="106.347" />
                                        <Key frame="127" value="100.106" />
                                        <Key frame="147" value="106.347" />
                                        <Key frame="170" value="100.106" />
                                        <Key frame="190" value="106.347" />
                                        <Key frame="204" value="69.6" />
                                        <Key frame="219" value="-68.2895" />
                                        <Key frame="239" value="57.0441" />
                                        <Key frame="262" value="-68.2895" />
                                        <Key frame="282" value="57.0441" />
                                        <Key frame="303" value="-68.2895" />
                                        <Key frame="323" value="57.0441" />
                                        <Key frame="345" value="-68.2895" />
                                        <Key frame="365" value="57.0441" />
                                        <Key frame="385" value="61" />
                                        <Key frame="398" value="84.2858" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="21" value="19.5096" />
                                        <Key frame="42" value="13.8845" />
                                        <Key frame="62" value="11.2477" />
                                        <Key frame="85" value="13.8845" />
                                        <Key frame="105" value="11.2477" />
                                        <Key frame="127" value="13.8845" />
                                        <Key frame="147" value="11.2477" />
                                        <Key frame="170" value="13.8845" />
                                        <Key frame="190" value="11.2477" />
                                        <Key frame="204" value="9.5" />
                                        <Key frame="219" value="18.8112" />
                                        <Key frame="229" value="34.1" />
                                        <Key frame="239" value="-18" />
                                        <Key frame="251" value="34.1" />
                                        <Key frame="262" value="18.8112" />
                                        <Key frame="272" value="34.1" />
                                        <Key frame="282" value="-18" />
                                        <Key frame="294" value="34.1" />
                                        <Key frame="303" value="18.8112" />
                                        <Key frame="313" value="34.1" />
                                        <Key frame="323" value="-18" />
                                        <Key frame="335" value="34.1" />
                                        <Key frame="345" value="18.8112" />
                                        <Key frame="355" value="34.1" />
                                        <Key frame="365" value="-18" />
                                        <Key frame="377" value="34.1" />
                                        <Key frame="398" value="8.78677" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="21" value="-37.5322" />
                                        <Key frame="32" value="-101.1" />
                                        <Key frame="42" value="-21.7996" />
                                        <Key frame="62" value="-35.4228" />
                                        <Key frame="85" value="-21.7996" />
                                        <Key frame="105" value="-35.4228" />
                                        <Key frame="127" value="-21.7996" />
                                        <Key frame="147" value="-35.4228" />
                                        <Key frame="170" value="-21.7996" />
                                        <Key frame="190" value="-35.4228" />
                                        <Key frame="204" value="-94.9" />
                                        <Key frame="219" value="48.7823" />
                                        <Key frame="229" value="4.3" />
                                        <Key frame="239" value="0.090296" />
                                        <Key frame="251" value="26.4" />
                                        <Key frame="262" value="48.7823" />
                                        <Key frame="272" value="4.3" />
                                        <Key frame="282" value="0.090296" />
                                        <Key frame="294" value="26.4" />
                                        <Key frame="303" value="48.7823" />
                                        <Key frame="313" value="4.3" />
                                        <Key frame="323" value="0.090296" />
                                        <Key frame="335" value="26.4" />
                                        <Key frame="345" value="48.7823" />
                                        <Key frame="355" value="4.3" />
                                        <Key frame="365" value="0.090296" />
                                        <Key frame="377" value="-39.1" />
                                        <Key frame="398" value="-69.349" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="21" value="-78.6607" />
                                        <Key frame="32" value="-64.7" />
                                        <Key frame="42" value="-21.1795" />
                                        <Key frame="62" value="-11.5993" />
                                        <Key frame="85" value="-21.1795" />
                                        <Key frame="105" value="-11.5993" />
                                        <Key frame="127" value="-21.1795" />
                                        <Key frame="147" value="-11.5993" />
                                        <Key frame="170" value="-21.1795" />
                                        <Key frame="190" value="-11.5993" />
                                        <Key frame="204" value="-88.5" />
                                        <Key frame="219" value="-7.91266" />
                                        <Key frame="229" value="-75" />
                                        <Key frame="239" value="-14.7682" />
                                        <Key frame="251" value="-83.6" />
                                        <Key frame="262" value="-7.91266" />
                                        <Key frame="272" value="-75" />
                                        <Key frame="282" value="-14.7682" />
                                        <Key frame="294" value="-83.6" />
                                        <Key frame="303" value="-7.91266" />
                                        <Key frame="313" value="-75" />
                                        <Key frame="323" value="-14.7682" />
                                        <Key frame="335" value="-83.6" />
                                        <Key frame="345" value="-7.91266" />
                                        <Key frame="355" value="-75" />
                                        <Key frame="365" value="-14.7682" />
                                        <Key frame="377" value="-83.6" />
                                        <Key frame="398" value="-24.3436" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="21" value="6.85315" />
                                        <Key frame="32" value="-83.1" />
                                        <Key frame="42" value="-22.6785" />
                                        <Key frame="62" value="-24.0847" />
                                        <Key frame="85" value="-22.6785" />
                                        <Key frame="105" value="-24.0847" />
                                        <Key frame="127" value="-22.6785" />
                                        <Key frame="147" value="-24.0847" />
                                        <Key frame="170" value="-22.6785" />
                                        <Key frame="190" value="-24.0847" />
                                        <Key frame="219" value="-6.15002" />
                                        <Key frame="239" value="-22.9373" />
                                        <Key frame="262" value="-6.15002" />
                                        <Key frame="282" value="-22.9373" />
                                        <Key frame="303" value="-6.15002" />
                                        <Key frame="323" value="-22.9373" />
                                        <Key frame="345" value="-6.15002" />
                                        <Key frame="365" value="-22.9373" />
                                        <Key frame="398" value="4.74374" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="21" value="0.2" />
                                        <Key frame="32" value="0.6" />
                                        <Key frame="42" value="0.2648" />
                                        <Key frame="62" value="0.264" />
                                        <Key frame="85" value="0.2648" />
                                        <Key frame="105" value="0.264" />
                                        <Key frame="127" value="0.2648" />
                                        <Key frame="147" value="0.264" />
                                        <Key frame="170" value="0.2648" />
                                        <Key frame="190" value="0.264" />
                                        <Key frame="204" value="0.13" />
                                        <Key frame="219" value="0.678" />
                                        <Key frame="229" value="0.3" />
                                        <Key frame="239" value="0.6784" />
                                        <Key frame="251" value="0.3" />
                                        <Key frame="262" value="0.678" />
                                        <Key frame="272" value="0.3" />
                                        <Key frame="282" value="0.6784" />
                                        <Key frame="294" value="0.3" />
                                        <Key frame="303" value="0.678" />
                                        <Key frame="313" value="0.3" />
                                        <Key frame="323" value="0.6784" />
                                        <Key frame="335" value="0.3" />
                                        <Key frame="345" value="0.678" />
                                        <Key frame="355" value="0.3" />
                                        <Key frame="365" value="0.6784" />
                                        <Key frame="377" value="0.3" />
                                        <Key frame="398" value="0.2968" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="23" value="52.4738" />
                                        <Key frame="44" value="-68.2895" />
                                        <Key frame="64" value="57.0441" />
                                        <Key frame="87" value="-68.2895" />
                                        <Key frame="107" value="57.0441" />
                                        <Key frame="129" value="-68.2895" />
                                        <Key frame="149" value="57.0441" />
                                        <Key frame="172" value="-68.2895" />
                                        <Key frame="192" value="57.0441" />
                                        <Key frame="204" value="69.6" />
                                        <Key frame="217" value="100.106" />
                                        <Key frame="237" value="106.347" />
                                        <Key frame="260" value="100.106" />
                                        <Key frame="280" value="106.347" />
                                        <Key frame="301" value="100.106" />
                                        <Key frame="321" value="106.347" />
                                        <Key frame="343" value="100.106" />
                                        <Key frame="363" value="106.347" />
                                        <Key frame="386" value="67.9" />
                                        <Key frame="396" value="84.3785" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="23" value="-15.2956" />
                                        <Key frame="34" value="-38.4" />
                                        <Key frame="44" value="-18.8112" />
                                        <Key frame="54" value="-34.1" />
                                        <Key frame="64" value="18" />
                                        <Key frame="76" value="-34.1" />
                                        <Key frame="87" value="-18.8112" />
                                        <Key frame="97" value="-34.1" />
                                        <Key frame="107" value="18" />
                                        <Key frame="119" value="-34.1" />
                                        <Key frame="129" value="-18.8112" />
                                        <Key frame="139" value="-34.1" />
                                        <Key frame="149" value="18" />
                                        <Key frame="161" value="-34.1" />
                                        <Key frame="172" value="-18.8112" />
                                        <Key frame="182" value="-34.1" />
                                        <Key frame="192" value="18" />
                                        <Key frame="204" value="-9.5" />
                                        <Key frame="217" value="-13.8845" />
                                        <Key frame="237" value="-11.2477" />
                                        <Key frame="260" value="-13.8845" />
                                        <Key frame="280" value="-11.2477" />
                                        <Key frame="301" value="-13.8845" />
                                        <Key frame="321" value="-11.2477" />
                                        <Key frame="343" value="-13.8845" />
                                        <Key frame="363" value="-11.2477" />
                                        <Key frame="378" value="-26.1" />
                                        <Key frame="396" value="-9.40682" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="23" value="34.0996" />
                                        <Key frame="34" value="32.5" />
                                        <Key frame="44" value="-48.7823" />
                                        <Key frame="54" value="-4.3" />
                                        <Key frame="64" value="-0.090296" />
                                        <Key frame="76" value="-26.4" />
                                        <Key frame="87" value="-48.7823" />
                                        <Key frame="97" value="-4.3" />
                                        <Key frame="107" value="-0.090296" />
                                        <Key frame="119" value="-26.4" />
                                        <Key frame="129" value="-48.7823" />
                                        <Key frame="139" value="-4.3" />
                                        <Key frame="149" value="-0.090296" />
                                        <Key frame="161" value="-26.4" />
                                        <Key frame="172" value="-48.7823" />
                                        <Key frame="182" value="-4.3" />
                                        <Key frame="192" value="-0.090296" />
                                        <Key frame="204" value="94.9" />
                                        <Key frame="217" value="21.7996" />
                                        <Key frame="237" value="35.4228" />
                                        <Key frame="260" value="21.7996" />
                                        <Key frame="280" value="35.4228" />
                                        <Key frame="301" value="21.7996" />
                                        <Key frame="321" value="35.4228" />
                                        <Key frame="343" value="21.7996" />
                                        <Key frame="363" value="35.4228" />
                                        <Key frame="378" value="90.5" />
                                        <Key frame="386" value="59.2" />
                                        <Key frame="396" value="69.3442" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="23" value="77.1713" />
                                        <Key frame="34" value="64.2" />
                                        <Key frame="44" value="7.91266" />
                                        <Key frame="54" value="75" />
                                        <Key frame="64" value="14.7682" />
                                        <Key frame="76" value="83.6" />
                                        <Key frame="87" value="7.91266" />
                                        <Key frame="97" value="75" />
                                        <Key frame="107" value="14.7682" />
                                        <Key frame="119" value="83.6" />
                                        <Key frame="129" value="7.91266" />
                                        <Key frame="139" value="75" />
                                        <Key frame="149" value="14.7682" />
                                        <Key frame="161" value="83.6" />
                                        <Key frame="172" value="7.91266" />
                                        <Key frame="182" value="75" />
                                        <Key frame="192" value="14.7682" />
                                        <Key frame="204" value="88.5" />
                                        <Key frame="217" value="21.1795" />
                                        <Key frame="237" value="11.5993" />
                                        <Key frame="260" value="21.1795" />
                                        <Key frame="280" value="11.5993" />
                                        <Key frame="301" value="21.1795" />
                                        <Key frame="321" value="11.5993" />
                                        <Key frame="343" value="21.1795" />
                                        <Key frame="363" value="11.5993" />
                                        <Key frame="378" value="47.1" />
                                        <Key frame="386" value="50.8" />
                                        <Key frame="396" value="24.6121" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="23" value="-23.03" />
                                        <Key frame="34" value="79.8" />
                                        <Key frame="44" value="6.15002" />
                                        <Key frame="64" value="22.9373" />
                                        <Key frame="87" value="6.15002" />
                                        <Key frame="107" value="22.9373" />
                                        <Key frame="129" value="6.15002" />
                                        <Key frame="149" value="22.9373" />
                                        <Key frame="172" value="6.15002" />
                                        <Key frame="192" value="22.9373" />
                                        <Key frame="217" value="22.6785" />
                                        <Key frame="237" value="24.0847" />
                                        <Key frame="260" value="22.6785" />
                                        <Key frame="280" value="24.0847" />
                                        <Key frame="301" value="22.6785" />
                                        <Key frame="321" value="24.0847" />
                                        <Key frame="343" value="22.6785" />
                                        <Key frame="363" value="24.0847" />
                                        <Key frame="396" value="6.2379" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="23" value="0.2" />
                                        <Key frame="34" value="0.5" />
                                        <Key frame="44" value="0.678" />
                                        <Key frame="54" value="0.3" />
                                        <Key frame="64" value="0.6784" />
                                        <Key frame="76" value="0.3" />
                                        <Key frame="87" value="0.678" />
                                        <Key frame="97" value="0.3" />
                                        <Key frame="107" value="0.6784" />
                                        <Key frame="119" value="0.3" />
                                        <Key frame="129" value="0.678" />
                                        <Key frame="139" value="0.3" />
                                        <Key frame="149" value="0.6784" />
                                        <Key frame="161" value="0.3" />
                                        <Key frame="172" value="0.678" />
                                        <Key frame="182" value="0.3" />
                                        <Key frame="192" value="0.6784" />
                                        <Key frame="204" value="0.13" />
                                        <Key frame="217" value="0.2648" />
                                        <Key frame="237" value="0.264" />
                                        <Key frame="260" value="0.2648" />
                                        <Key frame="280" value="0.264" />
                                        <Key frame="301" value="0.2648" />
                                        <Key frame="321" value="0.264" />
                                        <Key frame="343" value="0.2648" />
                                        <Key frame="363" value="0.264" />
                                        <Key frame="386" value="0.24" />
                                        <Key frame="396" value="0.2976" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="18" value="-25.3983" />
                                        <Key frame="40" value="-21.3553" />
                                        <Key frame="60" value="-20.4764" />
                                        <Key frame="83" value="-21.3553" />
                                        <Key frame="103" value="-20.4764" />
                                        <Key frame="125" value="-21.3553" />
                                        <Key frame="145" value="-20.4764" />
                                        <Key frame="168" value="-21.3553" />
                                        <Key frame="188" value="-20.4764" />
                                        <Key frame="215" value="-21.3553" />
                                        <Key frame="235" value="-20.4764" />
                                        <Key frame="258" value="-21.3553" />
                                        <Key frame="278" value="-20.4764" />
                                        <Key frame="299" value="-21.3553" />
                                        <Key frame="319" value="-20.4764" />
                                        <Key frame="341" value="-21.3553" />
                                        <Key frame="361" value="-20.4764" />
                                        <Key frame="394" value="-9.75358" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="18" value="0.266079" />
                                        <Key frame="40" value="-8.25942" />
                                        <Key frame="60" value="18.8991" />
                                        <Key frame="83" value="-8.25942" />
                                        <Key frame="103" value="18.8991" />
                                        <Key frame="125" value="-8.25942" />
                                        <Key frame="145" value="18.8991" />
                                        <Key frame="168" value="-8.25942" />
                                        <Key frame="188" value="18.8991" />
                                        <Key frame="215" value="17.0486" />
                                        <Key frame="235" value="-8.08844" />
                                        <Key frame="258" value="17.0486" />
                                        <Key frame="278" value="-8.08844" />
                                        <Key frame="299" value="17.0486" />
                                        <Key frame="319" value="-8.08844" />
                                        <Key frame="341" value="17.0486" />
                                        <Key frame="361" value="-8.08844" />
                                        <Key frame="394" value="5.89115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="18" value="-8.78677" />
                                        <Key frame="40" value="10.6373" />
                                        <Key frame="60" value="8.44001" />
                                        <Key frame="83" value="10.6373" />
                                        <Key frame="103" value="8.44001" />
                                        <Key frame="125" value="10.6373" />
                                        <Key frame="145" value="8.44001" />
                                        <Key frame="168" value="10.6373" />
                                        <Key frame="188" value="8.44001" />
                                        <Key frame="215" value="5.79845" />
                                        <Key frame="235" value="14.8513" />
                                        <Key frame="258" value="5.79845" />
                                        <Key frame="278" value="14.8513" />
                                        <Key frame="299" value="5.79845" />
                                        <Key frame="319" value="14.8513" />
                                        <Key frame="341" value="5.79845" />
                                        <Key frame="361" value="14.8513" />
                                        <Key frame="394" value="8.00056" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="18" value="23.201" />
                                        <Key frame="40" value="-5.18802" />
                                        <Key frame="60" value="-4.57277" />
                                        <Key frame="83" value="-5.18802" />
                                        <Key frame="103" value="-4.57277" />
                                        <Key frame="125" value="-5.18802" />
                                        <Key frame="145" value="-4.57277" />
                                        <Key frame="168" value="-5.18802" />
                                        <Key frame="188" value="-4.57277" />
                                        <Key frame="215" value="-5.18321" />
                                        <Key frame="235" value="-5.18321" />
                                        <Key frame="258" value="-5.18321" />
                                        <Key frame="278" value="-5.18321" />
                                        <Key frame="299" value="-5.18321" />
                                        <Key frame="319" value="-5.18321" />
                                        <Key frame="341" value="-5.18321" />
                                        <Key frame="361" value="-5.18321" />
                                        <Key frame="394" value="-4.48488" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="18" value="-2.63916" />
                                        <Key frame="40" value="2.54646" />
                                        <Key frame="60" value="9.22623" />
                                        <Key frame="83" value="2.54646" />
                                        <Key frame="103" value="9.22623" />
                                        <Key frame="125" value="2.54646" />
                                        <Key frame="145" value="9.22623" />
                                        <Key frame="168" value="2.54646" />
                                        <Key frame="188" value="9.22623" />
                                        <Key frame="215" value="5.27591" />
                                        <Key frame="235" value="4.74856" />
                                        <Key frame="258" value="5.27591" />
                                        <Key frame="278" value="4.74856" />
                                        <Key frame="299" value="5.27591" />
                                        <Key frame="319" value="4.74856" />
                                        <Key frame="341" value="5.27591" />
                                        <Key frame="361" value="4.74856" />
                                        <Key frame="394" value="5.00743" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="18" value="-1.0523" />
                                        <Key frame="40" value="3.60597" />
                                        <Key frame="60" value="-14.2361" />
                                        <Key frame="83" value="3.60597" />
                                        <Key frame="103" value="-14.2361" />
                                        <Key frame="125" value="3.60597" />
                                        <Key frame="145" value="-14.2361" />
                                        <Key frame="168" value="3.60597" />
                                        <Key frame="188" value="-14.2361" />
                                        <Key frame="215" value="-15.1198" />
                                        <Key frame="235" value="5.18321" />
                                        <Key frame="258" value="-15.1198" />
                                        <Key frame="278" value="5.18321" />
                                        <Key frame="299" value="-15.1198" />
                                        <Key frame="319" value="5.18321" />
                                        <Key frame="341" value="-15.1198" />
                                        <Key frame="361" value="5.18321" />
                                        <Key frame="394" value="-6.94104" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="18" value="-6.85315" />
                                        <Key frame="40" value="-17.0486" />
                                        <Key frame="60" value="8.08844" />
                                        <Key frame="83" value="-17.0486" />
                                        <Key frame="103" value="8.08844" />
                                        <Key frame="125" value="-17.0486" />
                                        <Key frame="145" value="8.08844" />
                                        <Key frame="168" value="-17.0486" />
                                        <Key frame="188" value="8.08844" />
                                        <Key frame="215" value="8.25942" />
                                        <Key frame="235" value="-18.8991" />
                                        <Key frame="258" value="8.25942" />
                                        <Key frame="278" value="-18.8991" />
                                        <Key frame="299" value="8.25942" />
                                        <Key frame="319" value="-18.8991" />
                                        <Key frame="341" value="8.25942" />
                                        <Key frame="361" value="-18.8991" />
                                        <Key frame="394" value="-5.53478" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="18" value="-10.1978" />
                                        <Key frame="40" value="5.79845" />
                                        <Key frame="60" value="14.8513" />
                                        <Key frame="83" value="5.79845" />
                                        <Key frame="103" value="14.8513" />
                                        <Key frame="125" value="5.79845" />
                                        <Key frame="145" value="14.8513" />
                                        <Key frame="168" value="5.79845" />
                                        <Key frame="188" value="14.8513" />
                                        <Key frame="215" value="10.6373" />
                                        <Key frame="235" value="8.44001" />
                                        <Key frame="258" value="10.6373" />
                                        <Key frame="278" value="8.44001" />
                                        <Key frame="299" value="10.6373" />
                                        <Key frame="319" value="8.44001" />
                                        <Key frame="341" value="10.6373" />
                                        <Key frame="361" value="8.44001" />
                                        <Key frame="394" value="7.55628" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="18" value="24.4363" />
                                        <Key frame="40" value="-5.18321" />
                                        <Key frame="60" value="-5.18321" />
                                        <Key frame="83" value="-5.18321" />
                                        <Key frame="103" value="-5.18321" />
                                        <Key frame="125" value="-5.18321" />
                                        <Key frame="145" value="-5.18321" />
                                        <Key frame="168" value="-5.18321" />
                                        <Key frame="188" value="-5.18321" />
                                        <Key frame="215" value="-5.18802" />
                                        <Key frame="235" value="-4.57277" />
                                        <Key frame="258" value="-5.18802" />
                                        <Key frame="278" value="-4.57277" />
                                        <Key frame="299" value="-5.18802" />
                                        <Key frame="319" value="-4.57277" />
                                        <Key frame="341" value="-5.18802" />
                                        <Key frame="361" value="-4.57277" />
                                        <Key frame="394" value="-5.2711" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="18" value="-2.98591" />
                                        <Key frame="40" value="5.27591" />
                                        <Key frame="60" value="4.74856" />
                                        <Key frame="83" value="5.27591" />
                                        <Key frame="103" value="4.74856" />
                                        <Key frame="125" value="5.27591" />
                                        <Key frame="145" value="4.74856" />
                                        <Key frame="168" value="5.27591" />
                                        <Key frame="188" value="4.74856" />
                                        <Key frame="215" value="2.54646" />
                                        <Key frame="235" value="9.22623" />
                                        <Key frame="258" value="2.54646" />
                                        <Key frame="278" value="9.22623" />
                                        <Key frame="299" value="2.54646" />
                                        <Key frame="319" value="9.22623" />
                                        <Key frame="341" value="2.54646" />
                                        <Key frame="361" value="9.22623" />
                                        <Key frame="394" value="5.3638" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="18" value="5.53958" />
                                        <Key frame="40" value="15.1198" />
                                        <Key frame="60" value="-5.18321" />
                                        <Key frame="83" value="15.1198" />
                                        <Key frame="103" value="-5.18321" />
                                        <Key frame="125" value="15.1198" />
                                        <Key frame="145" value="-5.18321" />
                                        <Key frame="168" value="15.1198" />
                                        <Key frame="188" value="-5.18321" />
                                        <Key frame="215" value="-3.60597" />
                                        <Key frame="235" value="14.2361" />
                                        <Key frame="258" value="-3.60597" />
                                        <Key frame="278" value="14.2361" />
                                        <Key frame="299" value="-3.60597" />
                                        <Key frame="319" value="14.2361" />
                                        <Key frame="341" value="-3.60597" />
                                        <Key frame="361" value="14.2361" />
                                        <Key frame="394" value="6.85796" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="40" value="-21.3553" />
                                        <Key frame="83" value="-21.3553" />
                                        <Key frame="125" value="-21.3553" />
                                        <Key frame="168" value="-21.3553" />
                                        <Key frame="215" value="-21.3553" />
                                        <Key frame="258" value="-21.3553" />
                                        <Key frame="299" value="-21.3553" />
                                        <Key frame="341" value="-21.3553" />
                                        <Key frame="394" value="-9.75358" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="_问再一遍" id="22" localization="8" tooltip="Say some text. The text can be localized." x="817" y="70">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="看清楚了么？需要我再做一遍么？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_再做一遍" id="28" localization="8" tooltip="Say some text. The text can be localized." x="165" y="21">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，那我再做一次给你看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="1" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="306" y="53">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_站起" id="2" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="651" y="126">
                                  <bitmap>media/images/box/movement/stand.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="StandUpBehavior">
                                      <BehaviorKeyframe name="DetectRobotPose" index="1">
                                        <Diagram>
                                          <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                            <bitmap>media/images/box/box-diagram.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                            <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                            <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                            <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                              <Choice value="Crouch" />
                                              <Choice value="LyingBack" />
                                              <Choice value="LyingBelly" />
                                              <Choice value="Sit" />
                                              <Choice value="SitRelax" />
                                              <Choice value="StandInit" />
                                              <Choice value="Stand" />
                                              <Choice value="StandZero" />
                                            </Parameter>
                                            <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                            <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                            <Resource name="All motors" type="Lock" timeout="0" />
                                            <Resource name="Stiffness" type="Lock" timeout="0" />
                                          </Box>
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                </Box>
                                <Box name="_人脸识别" id="5" localization="-1" tooltip="This box makes the robot track people with different modes." x="757" y="633">
                                  <bitmap>media/images/box/interaction/target_face.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                                  <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                                  <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                                  <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                                    <Choice value="Head" />
                                    <Choice value="WholeBody" />
                                    <Choice value="Move" />
                                  </Parameter>
                                  <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                                    <Choice value="None" />
                                    <Choice value="Arms" />
                                    <Choice value="LArm" />
                                    <Choice value="RArm" />
                                  </Parameter>
                                  <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                                  <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                                  <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                                  <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                                  <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                                  <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                                </Box>
                                <Box name="_请再一遍" id="4" localization="8" tooltip="Say some text. The text can be localized." x="477" y="570">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Text" inherits_from_parent="0" content_type="5" value="好的，那请你做一次吧！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="23" indexofinput="2" outputowner="16" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="28" indexofoutput="4" />
                                <Link inputowner="23" indexofinput="2" outputowner="1" indexofoutput="4" />
                                <Link inputowner="2" indexofinput="2" outputowner="23" indexofoutput="4" />
                                <Link inputowner="22" indexofinput="2" outputowner="2" indexofoutput="4" />
                                <Link inputowner="5" indexofinput="2" outputowner="4" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="1Negative" id="26" localization="8" tooltip="Say the text received on its input." x="86" y="356">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_别害羞" id="20" localization="8" tooltip="Say some text with animations. The text can be localized." x="272" y="792">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，试试看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Play Sound" id="18" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="103" y="189">
                        <bitmap>media/images/box/interaction/play_music.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                        <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../dancingBGM.mp3" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                        <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="120" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                        <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="10" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                        <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                        <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                  <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                  <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                  <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                </Box>
                                <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                  <bitmap>media/images/box/folder.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                  <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                  <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                </Box>
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="Audio player" type="Lock" timeout="0" />
                      </Box>
                      <Box name="2Second" id="4" localization="8" tooltip="Say some text with animations. The text can be localized." x="299" y="371">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="第二遍，我们一起再做一次，跟上我的动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_暂停一秒" id="13" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="502" y="403">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="1" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_人脸识别" id="19" localization="-1" tooltip="This box makes the robot track people with different modes." x="752" y="633">
                        <bitmap>media/images/box/interaction/target_face.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.targetName = "People"
        self.distanceX = 0.0
        self.distanceY = 0.0
        self.angleWz = 0.0
        self.thresholdX = 0.0
        self.thresholdY = 0.0
        self.thresholdWz = 0.0
        self.effector = "None"
        self.subscribeDone = False
        self.isRunning = False

    def onLoad(self):
        self.tracker = self.session().service( "ALTracker" )
        self.memory = self.session().service("ALMemory")
        self.BIND_PYTHON(self.getName(), "setParameter")
        self.BIND_PYTHON(self.getName(), "onTargetLost")
        self.BIND_PYTHON(self.getName(), "onTargetReached")
        self.BIND_PYTHON(self.getName(), "onTargetChanged")
        self.memory.subscribeToEvent("ALTracker/ActiveTargetChanged", self.getName(), "onTargetChanged")

    def onUnload(self):
        if self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False

        if self.isRunning:
            self.tracker.setEffector("None")
            self.tracker.stopTracker()
            self.tracker.unregisterTarget(self.targetName)
            self.isRunning = False

    def onInput_onStart(self):
        self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
        self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
        self.subscribeDone = True

        mode = self.getParameter("Mode")
        self.distanceX = self.getParameter("Distance X (m)")
        self.thresholdX = self.getParameter("Threshold X (m)")
        self.distanceY = self.getParameter("Distance Y (m)")
        self.thresholdY = self.getParameter("Threshold Y (m)")
        self.angleWz = self.getParameter("Theta (rad)")
        self.thresholdWz = self.getParameter("Threshold Theta (rad)")
        self.effector = self.getParameter("Effector")

        self.tracker.setEffector(self.effector)

        peopleIds = []

        self.tracker.registerTarget(self.targetName, peopleIds)
        self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                           self.thresholdX, self.thresholdY, self.thresholdWz])
        self.tracker.setMode(mode)

        self.tracker.track(self.targetName) #Start tracker
        self.isRunning = True

    def onInput_onStop(self):
        self.onStopped()
        self.onUnload()

    def onInput_peopleId(self, p):
        if(p is None):
            return

        self.tracker.registerTarget(self.targetName, p)

    def setParameter(self, parameterName, newValue):
        GeneratedClass.setParameter(self, parameterName, newValue)
        if (parameterName == 'Mode'):
            self.tracker.setMode(newValue)
            return

        if (parameterName == "Distance X (m)"):
            self.distanceX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Distance Y (m)"):
            self.distanceY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Theta (rad)"):
            self.angleWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold X (m)"):
            self.thresholdX = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Y (m)"):
            self.thresholdY = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if (parameterName == "Threshold Theta (rad)"):
            self.thresholdWz = newValue
            self.tracker.setRelativePosition([-self.distanceX, self.distanceY, self.angleWz,
                                               self.thresholdX, self.thresholdY, self.thresholdWz])
            return

        if(parameterName == "Effector"):
            self.tracker.setEffector(newValue)
            self.effector = newValue
            return

    def onTargetLost(self, key, value, message):
        self.targetLost()

    def onTargetReached(self, key, value, message):
        self.targetReached()

    def onTargetChanged(self, key, value, message):
        if value == self.targetName and not self.subscribeDone:
            self.memory.subscribeToEvent("ALTracker/TargetLost", self.getName(), "onTargetLost")
            self.memory.subscribeToEvent("ALTracker/TargetReached", self.getName(), "onTargetReached")
            self.subscribeDone = True
        elif value != self.targetName and self.subscribeDone:
            self.memory.unsubscribeToEvent("ALTracker/TargetLost", self.getName())
            self.memory.unsubscribeToEvent("ALTracker/TargetReached", self.getName())
            self.subscribeDone = False]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Input name="peopleId" type="0" type_size="1" nature="1" inner="0" tooltip="List of people id to track" id="4" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" />
                        <Output name="targetLost" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is lost." id="6" />
                        <Output name="targetReached" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when the target is reached." id="7" />
                        <Parameter name="Mode" inherits_from_parent="0" content_type="3" value="WholeBody" default_value="Head" custom_choice="0" tooltip="Set tracker mode" id="8">
                          <Choice value="Head" />
                          <Choice value="WholeBody" />
                          <Choice value="Move" />
                        </Parameter>
                        <Parameter name="Effector" inherits_from_parent="0" content_type="3" value="None" default_value="None" custom_choice="0" tooltip="Set effector to use for tracking. Head is always used." id="9">
                          <Choice value="None" />
                          <Choice value="Arms" />
                          <Choice value="LArm" />
                          <Choice value="RArm" />
                        </Parameter>
                        <Parameter name="Distance X (m)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="5" tooltip="Distance on X axis the robot will try to maintain from its target in move modes." id="10" />
                        <Parameter name="Threshold X (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="11" />
                        <Parameter name="Distance Y (m)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-5" max="5" tooltip="Distance on Y axis the robot will try to maintain from its target in move modes." id="12" />
                        <Parameter name="Threshold Y (m)" inherits_from_parent="0" content_type="2" value="0.1" default_value="0.1" min="0.01" max="1" tooltip="Threshold above which the robot will move to track its target in move modes." id="13" />
                        <Parameter name="Theta (rad)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-3.14" max="3.14" tooltip="Wz angle of the vector robot-target the robot will try to maintain in move modes." id="14" />
                        <Parameter name="Threshold Theta (rad)" inherits_from_parent="0" content_type="2" value="0.3" default_value="0.3" min="0.01" max="3.14" tooltip="Threshold of the angle of the vector robot-target above which the robot will move to track its target in move modes." id="15" />
                      </Box>
                      <Box name="2Negative" id="8" localization="8" tooltip="Say the text received on its input." x="110" y="569">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="3Negative" id="6" localization="8" tooltip="Say the text received on its input." x="604" y="120">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_要求重新做" id="9" localization="8" tooltip="Say some text with animations. The text can be localized." x="281" y="1110">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这样不可以，再认真做一次！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_迪斯可手四次" id="23" localization="8" tooltip="ID : #04B 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Disco" x="288" y="958">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Animation starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Animation stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when animation is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="398">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="42" value="-42.7" />
                              <Key frame="62" value="16.6" />
                              <Key frame="85" value="-42.7" />
                              <Key frame="105" value="16.6" />
                              <Key frame="127" value="-42.7" />
                              <Key frame="147" value="16.6" />
                              <Key frame="170" value="-42.7" />
                              <Key frame="190" value="16.6" />
                              <Key frame="217" value="42.7" />
                              <Key frame="237" value="-16.6" />
                              <Key frame="260" value="42.7" />
                              <Key frame="280" value="-16.6" />
                              <Key frame="301" value="42.7" />
                              <Key frame="321" value="-16.6" />
                              <Key frame="343" value="42.7" />
                              <Key frame="363" value="-16.6" />
                              <Key frame="396" value="0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="42" value="-27.3" />
                              <Key frame="62" value="19.4" />
                              <Key frame="85" value="-27.3" />
                              <Key frame="105" value="19.4" />
                              <Key frame="127" value="-27.3" />
                              <Key frame="147" value="19.4" />
                              <Key frame="170" value="-27.3" />
                              <Key frame="190" value="19.4" />
                              <Key frame="217" value="-27.3" />
                              <Key frame="237" value="19.4" />
                              <Key frame="260" value="-27.3" />
                              <Key frame="280" value="19.4" />
                              <Key frame="301" value="-27.3" />
                              <Key frame="321" value="19.4" />
                              <Key frame="343" value="-27.3" />
                              <Key frame="363" value="19.4" />
                              <Key frame="396" value="-9.84628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="21" value="36.6484" />
                              <Key frame="42" value="100.106" />
                              <Key frame="62" value="106.347" />
                              <Key frame="85" value="100.106" />
                              <Key frame="105" value="106.347" />
                              <Key frame="127" value="100.106" />
                              <Key frame="147" value="106.347" />
                              <Key frame="170" value="100.106" />
                              <Key frame="190" value="106.347" />
                              <Key frame="204" value="69.6" />
                              <Key frame="219" value="-68.2895" />
                              <Key frame="239" value="57.0441" />
                              <Key frame="262" value="-68.2895" />
                              <Key frame="282" value="57.0441" />
                              <Key frame="303" value="-68.2895" />
                              <Key frame="323" value="57.0441" />
                              <Key frame="345" value="-68.2895" />
                              <Key frame="365" value="57.0441" />
                              <Key frame="385" value="61" />
                              <Key frame="398" value="84.2858" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="21" value="19.5096" />
                              <Key frame="42" value="13.8845" />
                              <Key frame="62" value="11.2477" />
                              <Key frame="85" value="13.8845" />
                              <Key frame="105" value="11.2477" />
                              <Key frame="127" value="13.8845" />
                              <Key frame="147" value="11.2477" />
                              <Key frame="170" value="13.8845" />
                              <Key frame="190" value="11.2477" />
                              <Key frame="204" value="9.5" />
                              <Key frame="219" value="18.8112" />
                              <Key frame="229" value="34.1" />
                              <Key frame="239" value="-18" />
                              <Key frame="251" value="34.1" />
                              <Key frame="262" value="18.8112" />
                              <Key frame="272" value="34.1" />
                              <Key frame="282" value="-18" />
                              <Key frame="294" value="34.1" />
                              <Key frame="303" value="18.8112" />
                              <Key frame="313" value="34.1" />
                              <Key frame="323" value="-18" />
                              <Key frame="335" value="34.1" />
                              <Key frame="345" value="18.8112" />
                              <Key frame="355" value="34.1" />
                              <Key frame="365" value="-18" />
                              <Key frame="377" value="34.1" />
                              <Key frame="398" value="8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="21" value="-37.5322" />
                              <Key frame="32" value="-101.1" />
                              <Key frame="42" value="-21.7996" />
                              <Key frame="62" value="-35.4228" />
                              <Key frame="85" value="-21.7996" />
                              <Key frame="105" value="-35.4228" />
                              <Key frame="127" value="-21.7996" />
                              <Key frame="147" value="-35.4228" />
                              <Key frame="170" value="-21.7996" />
                              <Key frame="190" value="-35.4228" />
                              <Key frame="204" value="-94.9" />
                              <Key frame="219" value="48.7823" />
                              <Key frame="229" value="4.3" />
                              <Key frame="239" value="0.090296" />
                              <Key frame="251" value="26.4" />
                              <Key frame="262" value="48.7823" />
                              <Key frame="272" value="4.3" />
                              <Key frame="282" value="0.090296" />
                              <Key frame="294" value="26.4" />
                              <Key frame="303" value="48.7823" />
                              <Key frame="313" value="4.3" />
                              <Key frame="323" value="0.090296" />
                              <Key frame="335" value="26.4" />
                              <Key frame="345" value="48.7823" />
                              <Key frame="355" value="4.3" />
                              <Key frame="365" value="0.090296" />
                              <Key frame="377" value="-39.1" />
                              <Key frame="398" value="-69.349" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="21" value="-78.6607" />
                              <Key frame="32" value="-64.7" />
                              <Key frame="42" value="-21.1795" />
                              <Key frame="62" value="-11.5993" />
                              <Key frame="85" value="-21.1795" />
                              <Key frame="105" value="-11.5993" />
                              <Key frame="127" value="-21.1795" />
                              <Key frame="147" value="-11.5993" />
                              <Key frame="170" value="-21.1795" />
                              <Key frame="190" value="-11.5993" />
                              <Key frame="204" value="-88.5" />
                              <Key frame="219" value="-7.91266" />
                              <Key frame="229" value="-75" />
                              <Key frame="239" value="-14.7682" />
                              <Key frame="251" value="-83.6" />
                              <Key frame="262" value="-7.91266" />
                              <Key frame="272" value="-75" />
                              <Key frame="282" value="-14.7682" />
                              <Key frame="294" value="-83.6" />
                              <Key frame="303" value="-7.91266" />
                              <Key frame="313" value="-75" />
                              <Key frame="323" value="-14.7682" />
                              <Key frame="335" value="-83.6" />
                              <Key frame="345" value="-7.91266" />
                              <Key frame="355" value="-75" />
                              <Key frame="365" value="-14.7682" />
                              <Key frame="377" value="-83.6" />
                              <Key frame="398" value="-24.3436" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="21" value="6.85315" />
                              <Key frame="32" value="-83.1" />
                              <Key frame="42" value="-22.6785" />
                              <Key frame="62" value="-24.0847" />
                              <Key frame="85" value="-22.6785" />
                              <Key frame="105" value="-24.0847" />
                              <Key frame="127" value="-22.6785" />
                              <Key frame="147" value="-24.0847" />
                              <Key frame="170" value="-22.6785" />
                              <Key frame="190" value="-24.0847" />
                              <Key frame="219" value="-6.15002" />
                              <Key frame="239" value="-22.9373" />
                              <Key frame="262" value="-6.15002" />
                              <Key frame="282" value="-22.9373" />
                              <Key frame="303" value="-6.15002" />
                              <Key frame="323" value="-22.9373" />
                              <Key frame="345" value="-6.15002" />
                              <Key frame="365" value="-22.9373" />
                              <Key frame="398" value="4.74374" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="21" value="0.2" />
                              <Key frame="32" value="0.6" />
                              <Key frame="42" value="0.2648" />
                              <Key frame="62" value="0.264" />
                              <Key frame="85" value="0.2648" />
                              <Key frame="105" value="0.264" />
                              <Key frame="127" value="0.2648" />
                              <Key frame="147" value="0.264" />
                              <Key frame="170" value="0.2648" />
                              <Key frame="190" value="0.264" />
                              <Key frame="204" value="0.13" />
                              <Key frame="219" value="0.678" />
                              <Key frame="229" value="0.3" />
                              <Key frame="239" value="0.6784" />
                              <Key frame="251" value="0.3" />
                              <Key frame="262" value="0.678" />
                              <Key frame="272" value="0.3" />
                              <Key frame="282" value="0.6784" />
                              <Key frame="294" value="0.3" />
                              <Key frame="303" value="0.678" />
                              <Key frame="313" value="0.3" />
                              <Key frame="323" value="0.6784" />
                              <Key frame="335" value="0.3" />
                              <Key frame="345" value="0.678" />
                              <Key frame="355" value="0.3" />
                              <Key frame="365" value="0.6784" />
                              <Key frame="377" value="0.3" />
                              <Key frame="398" value="0.2968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="23" value="52.4738" />
                              <Key frame="44" value="-68.2895" />
                              <Key frame="64" value="57.0441" />
                              <Key frame="87" value="-68.2895" />
                              <Key frame="107" value="57.0441" />
                              <Key frame="129" value="-68.2895" />
                              <Key frame="149" value="57.0441" />
                              <Key frame="172" value="-68.2895" />
                              <Key frame="192" value="57.0441" />
                              <Key frame="204" value="69.6" />
                              <Key frame="217" value="100.106" />
                              <Key frame="237" value="106.347" />
                              <Key frame="260" value="100.106" />
                              <Key frame="280" value="106.347" />
                              <Key frame="301" value="100.106" />
                              <Key frame="321" value="106.347" />
                              <Key frame="343" value="100.106" />
                              <Key frame="363" value="106.347" />
                              <Key frame="386" value="67.9" />
                              <Key frame="396" value="84.3785" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="23" value="-15.2956" />
                              <Key frame="34" value="-38.4" />
                              <Key frame="44" value="-18.8112" />
                              <Key frame="54" value="-34.1" />
                              <Key frame="64" value="18" />
                              <Key frame="76" value="-34.1" />
                              <Key frame="87" value="-18.8112" />
                              <Key frame="97" value="-34.1" />
                              <Key frame="107" value="18" />
                              <Key frame="119" value="-34.1" />
                              <Key frame="129" value="-18.8112" />
                              <Key frame="139" value="-34.1" />
                              <Key frame="149" value="18" />
                              <Key frame="161" value="-34.1" />
                              <Key frame="172" value="-18.8112" />
                              <Key frame="182" value="-34.1" />
                              <Key frame="192" value="18" />
                              <Key frame="204" value="-9.5" />
                              <Key frame="217" value="-13.8845" />
                              <Key frame="237" value="-11.2477" />
                              <Key frame="260" value="-13.8845" />
                              <Key frame="280" value="-11.2477" />
                              <Key frame="301" value="-13.8845" />
                              <Key frame="321" value="-11.2477" />
                              <Key frame="343" value="-13.8845" />
                              <Key frame="363" value="-11.2477" />
                              <Key frame="378" value="-26.1" />
                              <Key frame="396" value="-9.40682" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="23" value="34.0996" />
                              <Key frame="34" value="32.5" />
                              <Key frame="44" value="-48.7823" />
                              <Key frame="54" value="-4.3" />
                              <Key frame="64" value="-0.090296" />
                              <Key frame="76" value="-26.4" />
                              <Key frame="87" value="-48.7823" />
                              <Key frame="97" value="-4.3" />
                              <Key frame="107" value="-0.090296" />
                              <Key frame="119" value="-26.4" />
                              <Key frame="129" value="-48.7823" />
                              <Key frame="139" value="-4.3" />
                              <Key frame="149" value="-0.090296" />
                              <Key frame="161" value="-26.4" />
                              <Key frame="172" value="-48.7823" />
                              <Key frame="182" value="-4.3" />
                              <Key frame="192" value="-0.090296" />
                              <Key frame="204" value="94.9" />
                              <Key frame="217" value="21.7996" />
                              <Key frame="237" value="35.4228" />
                              <Key frame="260" value="21.7996" />
                              <Key frame="280" value="35.4228" />
                              <Key frame="301" value="21.7996" />
                              <Key frame="321" value="35.4228" />
                              <Key frame="343" value="21.7996" />
                              <Key frame="363" value="35.4228" />
                              <Key frame="378" value="90.5" />
                              <Key frame="386" value="59.2" />
                              <Key frame="396" value="69.3442" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="23" value="77.1713" />
                              <Key frame="34" value="64.2" />
                              <Key frame="44" value="7.91266" />
                              <Key frame="54" value="75" />
                              <Key frame="64" value="14.7682" />
                              <Key frame="76" value="83.6" />
                              <Key frame="87" value="7.91266" />
                              <Key frame="97" value="75" />
                              <Key frame="107" value="14.7682" />
                              <Key frame="119" value="83.6" />
                              <Key frame="129" value="7.91266" />
                              <Key frame="139" value="75" />
                              <Key frame="149" value="14.7682" />
                              <Key frame="161" value="83.6" />
                              <Key frame="172" value="7.91266" />
                              <Key frame="182" value="75" />
                              <Key frame="192" value="14.7682" />
                              <Key frame="204" value="88.5" />
                              <Key frame="217" value="21.1795" />
                              <Key frame="237" value="11.5993" />
                              <Key frame="260" value="21.1795" />
                              <Key frame="280" value="11.5993" />
                              <Key frame="301" value="21.1795" />
                              <Key frame="321" value="11.5993" />
                              <Key frame="343" value="21.1795" />
                              <Key frame="363" value="11.5993" />
                              <Key frame="378" value="47.1" />
                              <Key frame="386" value="50.8" />
                              <Key frame="396" value="24.6121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="23" value="-23.03" />
                              <Key frame="34" value="79.8" />
                              <Key frame="44" value="6.15002" />
                              <Key frame="64" value="22.9373" />
                              <Key frame="87" value="6.15002" />
                              <Key frame="107" value="22.9373" />
                              <Key frame="129" value="6.15002" />
                              <Key frame="149" value="22.9373" />
                              <Key frame="172" value="6.15002" />
                              <Key frame="192" value="22.9373" />
                              <Key frame="217" value="22.6785" />
                              <Key frame="237" value="24.0847" />
                              <Key frame="260" value="22.6785" />
                              <Key frame="280" value="24.0847" />
                              <Key frame="301" value="22.6785" />
                              <Key frame="321" value="24.0847" />
                              <Key frame="343" value="22.6785" />
                              <Key frame="363" value="24.0847" />
                              <Key frame="396" value="6.2379" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="23" value="0.2" />
                              <Key frame="34" value="0.5" />
                              <Key frame="44" value="0.678" />
                              <Key frame="54" value="0.3" />
                              <Key frame="64" value="0.6784" />
                              <Key frame="76" value="0.3" />
                              <Key frame="87" value="0.678" />
                              <Key frame="97" value="0.3" />
                              <Key frame="107" value="0.6784" />
                              <Key frame="119" value="0.3" />
                              <Key frame="129" value="0.678" />
                              <Key frame="139" value="0.3" />
                              <Key frame="149" value="0.6784" />
                              <Key frame="161" value="0.3" />
                              <Key frame="172" value="0.678" />
                              <Key frame="182" value="0.3" />
                              <Key frame="192" value="0.6784" />
                              <Key frame="204" value="0.13" />
                              <Key frame="217" value="0.2648" />
                              <Key frame="237" value="0.264" />
                              <Key frame="260" value="0.2648" />
                              <Key frame="280" value="0.264" />
                              <Key frame="301" value="0.2648" />
                              <Key frame="321" value="0.264" />
                              <Key frame="343" value="0.2648" />
                              <Key frame="363" value="0.264" />
                              <Key frame="386" value="0.24" />
                              <Key frame="396" value="0.2976" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="18" value="-25.3983" />
                              <Key frame="40" value="-21.3553" />
                              <Key frame="60" value="-20.4764" />
                              <Key frame="83" value="-21.3553" />
                              <Key frame="103" value="-20.4764" />
                              <Key frame="125" value="-21.3553" />
                              <Key frame="145" value="-20.4764" />
                              <Key frame="168" value="-21.3553" />
                              <Key frame="188" value="-20.4764" />
                              <Key frame="215" value="-21.3553" />
                              <Key frame="235" value="-20.4764" />
                              <Key frame="258" value="-21.3553" />
                              <Key frame="278" value="-20.4764" />
                              <Key frame="299" value="-21.3553" />
                              <Key frame="319" value="-20.4764" />
                              <Key frame="341" value="-21.3553" />
                              <Key frame="361" value="-20.4764" />
                              <Key frame="394" value="-9.75358" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="18" value="0.266079" />
                              <Key frame="40" value="-8.25942" />
                              <Key frame="60" value="18.8991" />
                              <Key frame="83" value="-8.25942" />
                              <Key frame="103" value="18.8991" />
                              <Key frame="125" value="-8.25942" />
                              <Key frame="145" value="18.8991" />
                              <Key frame="168" value="-8.25942" />
                              <Key frame="188" value="18.8991" />
                              <Key frame="215" value="17.0486" />
                              <Key frame="235" value="-8.08844" />
                              <Key frame="258" value="17.0486" />
                              <Key frame="278" value="-8.08844" />
                              <Key frame="299" value="17.0486" />
                              <Key frame="319" value="-8.08844" />
                              <Key frame="341" value="17.0486" />
                              <Key frame="361" value="-8.08844" />
                              <Key frame="394" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="18" value="-8.78677" />
                              <Key frame="40" value="10.6373" />
                              <Key frame="60" value="8.44001" />
                              <Key frame="83" value="10.6373" />
                              <Key frame="103" value="8.44001" />
                              <Key frame="125" value="10.6373" />
                              <Key frame="145" value="8.44001" />
                              <Key frame="168" value="10.6373" />
                              <Key frame="188" value="8.44001" />
                              <Key frame="215" value="5.79845" />
                              <Key frame="235" value="14.8513" />
                              <Key frame="258" value="5.79845" />
                              <Key frame="278" value="14.8513" />
                              <Key frame="299" value="5.79845" />
                              <Key frame="319" value="14.8513" />
                              <Key frame="341" value="5.79845" />
                              <Key frame="361" value="14.8513" />
                              <Key frame="394" value="8.00056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="18" value="23.201" />
                              <Key frame="40" value="-5.18802" />
                              <Key frame="60" value="-4.57277" />
                              <Key frame="83" value="-5.18802" />
                              <Key frame="103" value="-4.57277" />
                              <Key frame="125" value="-5.18802" />
                              <Key frame="145" value="-4.57277" />
                              <Key frame="168" value="-5.18802" />
                              <Key frame="188" value="-4.57277" />
                              <Key frame="215" value="-5.18321" />
                              <Key frame="235" value="-5.18321" />
                              <Key frame="258" value="-5.18321" />
                              <Key frame="278" value="-5.18321" />
                              <Key frame="299" value="-5.18321" />
                              <Key frame="319" value="-5.18321" />
                              <Key frame="341" value="-5.18321" />
                              <Key frame="361" value="-5.18321" />
                              <Key frame="394" value="-4.48488" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="18" value="-2.63916" />
                              <Key frame="40" value="2.54646" />
                              <Key frame="60" value="9.22623" />
                              <Key frame="83" value="2.54646" />
                              <Key frame="103" value="9.22623" />
                              <Key frame="125" value="2.54646" />
                              <Key frame="145" value="9.22623" />
                              <Key frame="168" value="2.54646" />
                              <Key frame="188" value="9.22623" />
                              <Key frame="215" value="5.27591" />
                              <Key frame="235" value="4.74856" />
                              <Key frame="258" value="5.27591" />
                              <Key frame="278" value="4.74856" />
                              <Key frame="299" value="5.27591" />
                              <Key frame="319" value="4.74856" />
                              <Key frame="341" value="5.27591" />
                              <Key frame="361" value="4.74856" />
                              <Key frame="394" value="5.00743" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="18" value="-1.0523" />
                              <Key frame="40" value="3.60597" />
                              <Key frame="60" value="-14.2361" />
                              <Key frame="83" value="3.60597" />
                              <Key frame="103" value="-14.2361" />
                              <Key frame="125" value="3.60597" />
                              <Key frame="145" value="-14.2361" />
                              <Key frame="168" value="3.60597" />
                              <Key frame="188" value="-14.2361" />
                              <Key frame="215" value="-15.1198" />
                              <Key frame="235" value="5.18321" />
                              <Key frame="258" value="-15.1198" />
                              <Key frame="278" value="5.18321" />
                              <Key frame="299" value="-15.1198" />
                              <Key frame="319" value="5.18321" />
                              <Key frame="341" value="-15.1198" />
                              <Key frame="361" value="5.18321" />
                              <Key frame="394" value="-6.94104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="18" value="-6.85315" />
                              <Key frame="40" value="-17.0486" />
                              <Key frame="60" value="8.08844" />
                              <Key frame="83" value="-17.0486" />
                              <Key frame="103" value="8.08844" />
                              <Key frame="125" value="-17.0486" />
                              <Key frame="145" value="8.08844" />
                              <Key frame="168" value="-17.0486" />
                              <Key frame="188" value="8.08844" />
                              <Key frame="215" value="8.25942" />
                              <Key frame="235" value="-18.8991" />
                              <Key frame="258" value="8.25942" />
                              <Key frame="278" value="-18.8991" />
                              <Key frame="299" value="8.25942" />
                              <Key frame="319" value="-18.8991" />
                              <Key frame="341" value="8.25942" />
                              <Key frame="361" value="-18.8991" />
                              <Key frame="394" value="-5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="18" value="-10.1978" />
                              <Key frame="40" value="5.79845" />
                              <Key frame="60" value="14.8513" />
                              <Key frame="83" value="5.79845" />
                              <Key frame="103" value="14.8513" />
                              <Key frame="125" value="5.79845" />
                              <Key frame="145" value="14.8513" />
                              <Key frame="168" value="5.79845" />
                              <Key frame="188" value="14.8513" />
                              <Key frame="215" value="10.6373" />
                              <Key frame="235" value="8.44001" />
                              <Key frame="258" value="10.6373" />
                              <Key frame="278" value="8.44001" />
                              <Key frame="299" value="10.6373" />
                              <Key frame="319" value="8.44001" />
                              <Key frame="341" value="10.6373" />
                              <Key frame="361" value="8.44001" />
                              <Key frame="394" value="7.55628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="18" value="24.4363" />
                              <Key frame="40" value="-5.18321" />
                              <Key frame="60" value="-5.18321" />
                              <Key frame="83" value="-5.18321" />
                              <Key frame="103" value="-5.18321" />
                              <Key frame="125" value="-5.18321" />
                              <Key frame="145" value="-5.18321" />
                              <Key frame="168" value="-5.18321" />
                              <Key frame="188" value="-5.18321" />
                              <Key frame="215" value="-5.18802" />
                              <Key frame="235" value="-4.57277" />
                              <Key frame="258" value="-5.18802" />
                              <Key frame="278" value="-4.57277" />
                              <Key frame="299" value="-5.18802" />
                              <Key frame="319" value="-4.57277" />
                              <Key frame="341" value="-5.18802" />
                              <Key frame="361" value="-4.57277" />
                              <Key frame="394" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="18" value="-2.98591" />
                              <Key frame="40" value="5.27591" />
                              <Key frame="60" value="4.74856" />
                              <Key frame="83" value="5.27591" />
                              <Key frame="103" value="4.74856" />
                              <Key frame="125" value="5.27591" />
                              <Key frame="145" value="4.74856" />
                              <Key frame="168" value="5.27591" />
                              <Key frame="188" value="4.74856" />
                              <Key frame="215" value="2.54646" />
                              <Key frame="235" value="9.22623" />
                              <Key frame="258" value="2.54646" />
                              <Key frame="278" value="9.22623" />
                              <Key frame="299" value="2.54646" />
                              <Key frame="319" value="9.22623" />
                              <Key frame="341" value="2.54646" />
                              <Key frame="361" value="9.22623" />
                              <Key frame="394" value="5.3638" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="18" value="5.53958" />
                              <Key frame="40" value="15.1198" />
                              <Key frame="60" value="-5.18321" />
                              <Key frame="83" value="15.1198" />
                              <Key frame="103" value="-5.18321" />
                              <Key frame="125" value="15.1198" />
                              <Key frame="145" value="-5.18321" />
                              <Key frame="168" value="15.1198" />
                              <Key frame="188" value="-5.18321" />
                              <Key frame="215" value="-3.60597" />
                              <Key frame="235" value="14.2361" />
                              <Key frame="258" value="-3.60597" />
                              <Key frame="278" value="14.2361" />
                              <Key frame="299" value="-3.60597" />
                              <Key frame="319" value="14.2361" />
                              <Key frame="341" value="-3.60597" />
                              <Key frame="361" value="14.2361" />
                              <Key frame="394" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="40" value="-21.3553" />
                              <Key frame="83" value="-21.3553" />
                              <Key frame="125" value="-21.3553" />
                              <Key frame="168" value="-21.3553" />
                              <Key frame="215" value="-21.3553" />
                              <Key frame="258" value="-21.3553" />
                              <Key frame="299" value="-21.3553" />
                              <Key frame="341" value="-21.3553" />
                              <Key frame="394" value="-9.75358" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Box name="_迪斯可手四次" id="2" localization="8" tooltip="ID : #04B 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Disco" x="728" y="426">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Animation starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Animation stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when animation is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="398">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="42" value="-42.7" />
                              <Key frame="62" value="16.6" />
                              <Key frame="85" value="-42.7" />
                              <Key frame="105" value="16.6" />
                              <Key frame="127" value="-42.7" />
                              <Key frame="147" value="16.6" />
                              <Key frame="170" value="-42.7" />
                              <Key frame="190" value="16.6" />
                              <Key frame="217" value="42.7" />
                              <Key frame="237" value="-16.6" />
                              <Key frame="260" value="42.7" />
                              <Key frame="280" value="-16.6" />
                              <Key frame="301" value="42.7" />
                              <Key frame="321" value="-16.6" />
                              <Key frame="343" value="42.7" />
                              <Key frame="363" value="-16.6" />
                              <Key frame="396" value="0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="42" value="-27.3" />
                              <Key frame="62" value="19.4" />
                              <Key frame="85" value="-27.3" />
                              <Key frame="105" value="19.4" />
                              <Key frame="127" value="-27.3" />
                              <Key frame="147" value="19.4" />
                              <Key frame="170" value="-27.3" />
                              <Key frame="190" value="19.4" />
                              <Key frame="217" value="-27.3" />
                              <Key frame="237" value="19.4" />
                              <Key frame="260" value="-27.3" />
                              <Key frame="280" value="19.4" />
                              <Key frame="301" value="-27.3" />
                              <Key frame="321" value="19.4" />
                              <Key frame="343" value="-27.3" />
                              <Key frame="363" value="19.4" />
                              <Key frame="396" value="-9.84628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="21" value="36.6484" />
                              <Key frame="42" value="100.106" />
                              <Key frame="62" value="106.347" />
                              <Key frame="85" value="100.106" />
                              <Key frame="105" value="106.347" />
                              <Key frame="127" value="100.106" />
                              <Key frame="147" value="106.347" />
                              <Key frame="170" value="100.106" />
                              <Key frame="190" value="106.347" />
                              <Key frame="204" value="69.6" />
                              <Key frame="219" value="-68.2895" />
                              <Key frame="239" value="57.0441" />
                              <Key frame="262" value="-68.2895" />
                              <Key frame="282" value="57.0441" />
                              <Key frame="303" value="-68.2895" />
                              <Key frame="323" value="57.0441" />
                              <Key frame="345" value="-68.2895" />
                              <Key frame="365" value="57.0441" />
                              <Key frame="385" value="61" />
                              <Key frame="398" value="84.2858" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="21" value="19.5096" />
                              <Key frame="42" value="13.8845" />
                              <Key frame="62" value="11.2477" />
                              <Key frame="85" value="13.8845" />
                              <Key frame="105" value="11.2477" />
                              <Key frame="127" value="13.8845" />
                              <Key frame="147" value="11.2477" />
                              <Key frame="170" value="13.8845" />
                              <Key frame="190" value="11.2477" />
                              <Key frame="204" value="9.5" />
                              <Key frame="219" value="18.8112" />
                              <Key frame="229" value="34.1" />
                              <Key frame="239" value="-18" />
                              <Key frame="251" value="34.1" />
                              <Key frame="262" value="18.8112" />
                              <Key frame="272" value="34.1" />
                              <Key frame="282" value="-18" />
                              <Key frame="294" value="34.1" />
                              <Key frame="303" value="18.8112" />
                              <Key frame="313" value="34.1" />
                              <Key frame="323" value="-18" />
                              <Key frame="335" value="34.1" />
                              <Key frame="345" value="18.8112" />
                              <Key frame="355" value="34.1" />
                              <Key frame="365" value="-18" />
                              <Key frame="377" value="34.1" />
                              <Key frame="398" value="8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="21" value="-37.5322" />
                              <Key frame="32" value="-101.1" />
                              <Key frame="42" value="-21.7996" />
                              <Key frame="62" value="-35.4228" />
                              <Key frame="85" value="-21.7996" />
                              <Key frame="105" value="-35.4228" />
                              <Key frame="127" value="-21.7996" />
                              <Key frame="147" value="-35.4228" />
                              <Key frame="170" value="-21.7996" />
                              <Key frame="190" value="-35.4228" />
                              <Key frame="204" value="-94.9" />
                              <Key frame="219" value="48.7823" />
                              <Key frame="229" value="4.3" />
                              <Key frame="239" value="0.090296" />
                              <Key frame="251" value="26.4" />
                              <Key frame="262" value="48.7823" />
                              <Key frame="272" value="4.3" />
                              <Key frame="282" value="0.090296" />
                              <Key frame="294" value="26.4" />
                              <Key frame="303" value="48.7823" />
                              <Key frame="313" value="4.3" />
                              <Key frame="323" value="0.090296" />
                              <Key frame="335" value="26.4" />
                              <Key frame="345" value="48.7823" />
                              <Key frame="355" value="4.3" />
                              <Key frame="365" value="0.090296" />
                              <Key frame="377" value="-39.1" />
                              <Key frame="398" value="-69.349" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="21" value="-78.6607" />
                              <Key frame="32" value="-64.7" />
                              <Key frame="42" value="-21.1795" />
                              <Key frame="62" value="-11.5993" />
                              <Key frame="85" value="-21.1795" />
                              <Key frame="105" value="-11.5993" />
                              <Key frame="127" value="-21.1795" />
                              <Key frame="147" value="-11.5993" />
                              <Key frame="170" value="-21.1795" />
                              <Key frame="190" value="-11.5993" />
                              <Key frame="204" value="-88.5" />
                              <Key frame="219" value="-7.91266" />
                              <Key frame="229" value="-75" />
                              <Key frame="239" value="-14.7682" />
                              <Key frame="251" value="-83.6" />
                              <Key frame="262" value="-7.91266" />
                              <Key frame="272" value="-75" />
                              <Key frame="282" value="-14.7682" />
                              <Key frame="294" value="-83.6" />
                              <Key frame="303" value="-7.91266" />
                              <Key frame="313" value="-75" />
                              <Key frame="323" value="-14.7682" />
                              <Key frame="335" value="-83.6" />
                              <Key frame="345" value="-7.91266" />
                              <Key frame="355" value="-75" />
                              <Key frame="365" value="-14.7682" />
                              <Key frame="377" value="-83.6" />
                              <Key frame="398" value="-24.3436" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="21" value="6.85315" />
                              <Key frame="32" value="-83.1" />
                              <Key frame="42" value="-22.6785" />
                              <Key frame="62" value="-24.0847" />
                              <Key frame="85" value="-22.6785" />
                              <Key frame="105" value="-24.0847" />
                              <Key frame="127" value="-22.6785" />
                              <Key frame="147" value="-24.0847" />
                              <Key frame="170" value="-22.6785" />
                              <Key frame="190" value="-24.0847" />
                              <Key frame="219" value="-6.15002" />
                              <Key frame="239" value="-22.9373" />
                              <Key frame="262" value="-6.15002" />
                              <Key frame="282" value="-22.9373" />
                              <Key frame="303" value="-6.15002" />
                              <Key frame="323" value="-22.9373" />
                              <Key frame="345" value="-6.15002" />
                              <Key frame="365" value="-22.9373" />
                              <Key frame="398" value="4.74374" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="21" value="0.2" />
                              <Key frame="32" value="0.6" />
                              <Key frame="42" value="0.2648" />
                              <Key frame="62" value="0.264" />
                              <Key frame="85" value="0.2648" />
                              <Key frame="105" value="0.264" />
                              <Key frame="127" value="0.2648" />
                              <Key frame="147" value="0.264" />
                              <Key frame="170" value="0.2648" />
                              <Key frame="190" value="0.264" />
                              <Key frame="204" value="0.13" />
                              <Key frame="219" value="0.678" />
                              <Key frame="229" value="0.3" />
                              <Key frame="239" value="0.6784" />
                              <Key frame="251" value="0.3" />
                              <Key frame="262" value="0.678" />
                              <Key frame="272" value="0.3" />
                              <Key frame="282" value="0.6784" />
                              <Key frame="294" value="0.3" />
                              <Key frame="303" value="0.678" />
                              <Key frame="313" value="0.3" />
                              <Key frame="323" value="0.6784" />
                              <Key frame="335" value="0.3" />
                              <Key frame="345" value="0.678" />
                              <Key frame="355" value="0.3" />
                              <Key frame="365" value="0.6784" />
                              <Key frame="377" value="0.3" />
                              <Key frame="398" value="0.2968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="23" value="52.4738" />
                              <Key frame="44" value="-68.2895" />
                              <Key frame="64" value="57.0441" />
                              <Key frame="87" value="-68.2895" />
                              <Key frame="107" value="57.0441" />
                              <Key frame="129" value="-68.2895" />
                              <Key frame="149" value="57.0441" />
                              <Key frame="172" value="-68.2895" />
                              <Key frame="192" value="57.0441" />
                              <Key frame="204" value="69.6" />
                              <Key frame="217" value="100.106" />
                              <Key frame="237" value="106.347" />
                              <Key frame="260" value="100.106" />
                              <Key frame="280" value="106.347" />
                              <Key frame="301" value="100.106" />
                              <Key frame="321" value="106.347" />
                              <Key frame="343" value="100.106" />
                              <Key frame="363" value="106.347" />
                              <Key frame="386" value="67.9" />
                              <Key frame="396" value="84.3785" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="23" value="-15.2956" />
                              <Key frame="34" value="-38.4" />
                              <Key frame="44" value="-18.8112" />
                              <Key frame="54" value="-34.1" />
                              <Key frame="64" value="18" />
                              <Key frame="76" value="-34.1" />
                              <Key frame="87" value="-18.8112" />
                              <Key frame="97" value="-34.1" />
                              <Key frame="107" value="18" />
                              <Key frame="119" value="-34.1" />
                              <Key frame="129" value="-18.8112" />
                              <Key frame="139" value="-34.1" />
                              <Key frame="149" value="18" />
                              <Key frame="161" value="-34.1" />
                              <Key frame="172" value="-18.8112" />
                              <Key frame="182" value="-34.1" />
                              <Key frame="192" value="18" />
                              <Key frame="204" value="-9.5" />
                              <Key frame="217" value="-13.8845" />
                              <Key frame="237" value="-11.2477" />
                              <Key frame="260" value="-13.8845" />
                              <Key frame="280" value="-11.2477" />
                              <Key frame="301" value="-13.8845" />
                              <Key frame="321" value="-11.2477" />
                              <Key frame="343" value="-13.8845" />
                              <Key frame="363" value="-11.2477" />
                              <Key frame="378" value="-26.1" />
                              <Key frame="396" value="-9.40682" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="23" value="34.0996" />
                              <Key frame="34" value="32.5" />
                              <Key frame="44" value="-48.7823" />
                              <Key frame="54" value="-4.3" />
                              <Key frame="64" value="-0.090296" />
                              <Key frame="76" value="-26.4" />
                              <Key frame="87" value="-48.7823" />
                              <Key frame="97" value="-4.3" />
                              <Key frame="107" value="-0.090296" />
                              <Key frame="119" value="-26.4" />
                              <Key frame="129" value="-48.7823" />
                              <Key frame="139" value="-4.3" />
                              <Key frame="149" value="-0.090296" />
                              <Key frame="161" value="-26.4" />
                              <Key frame="172" value="-48.7823" />
                              <Key frame="182" value="-4.3" />
                              <Key frame="192" value="-0.090296" />
                              <Key frame="204" value="94.9" />
                              <Key frame="217" value="21.7996" />
                              <Key frame="237" value="35.4228" />
                              <Key frame="260" value="21.7996" />
                              <Key frame="280" value="35.4228" />
                              <Key frame="301" value="21.7996" />
                              <Key frame="321" value="35.4228" />
                              <Key frame="343" value="21.7996" />
                              <Key frame="363" value="35.4228" />
                              <Key frame="378" value="90.5" />
                              <Key frame="386" value="59.2" />
                              <Key frame="396" value="69.3442" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="23" value="77.1713" />
                              <Key frame="34" value="64.2" />
                              <Key frame="44" value="7.91266" />
                              <Key frame="54" value="75" />
                              <Key frame="64" value="14.7682" />
                              <Key frame="76" value="83.6" />
                              <Key frame="87" value="7.91266" />
                              <Key frame="97" value="75" />
                              <Key frame="107" value="14.7682" />
                              <Key frame="119" value="83.6" />
                              <Key frame="129" value="7.91266" />
                              <Key frame="139" value="75" />
                              <Key frame="149" value="14.7682" />
                              <Key frame="161" value="83.6" />
                              <Key frame="172" value="7.91266" />
                              <Key frame="182" value="75" />
                              <Key frame="192" value="14.7682" />
                              <Key frame="204" value="88.5" />
                              <Key frame="217" value="21.1795" />
                              <Key frame="237" value="11.5993" />
                              <Key frame="260" value="21.1795" />
                              <Key frame="280" value="11.5993" />
                              <Key frame="301" value="21.1795" />
                              <Key frame="321" value="11.5993" />
                              <Key frame="343" value="21.1795" />
                              <Key frame="363" value="11.5993" />
                              <Key frame="378" value="47.1" />
                              <Key frame="386" value="50.8" />
                              <Key frame="396" value="24.6121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="23" value="-23.03" />
                              <Key frame="34" value="79.8" />
                              <Key frame="44" value="6.15002" />
                              <Key frame="64" value="22.9373" />
                              <Key frame="87" value="6.15002" />
                              <Key frame="107" value="22.9373" />
                              <Key frame="129" value="6.15002" />
                              <Key frame="149" value="22.9373" />
                              <Key frame="172" value="6.15002" />
                              <Key frame="192" value="22.9373" />
                              <Key frame="217" value="22.6785" />
                              <Key frame="237" value="24.0847" />
                              <Key frame="260" value="22.6785" />
                              <Key frame="280" value="24.0847" />
                              <Key frame="301" value="22.6785" />
                              <Key frame="321" value="24.0847" />
                              <Key frame="343" value="22.6785" />
                              <Key frame="363" value="24.0847" />
                              <Key frame="396" value="6.2379" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="23" value="0.2" />
                              <Key frame="34" value="0.5" />
                              <Key frame="44" value="0.678" />
                              <Key frame="54" value="0.3" />
                              <Key frame="64" value="0.6784" />
                              <Key frame="76" value="0.3" />
                              <Key frame="87" value="0.678" />
                              <Key frame="97" value="0.3" />
                              <Key frame="107" value="0.6784" />
                              <Key frame="119" value="0.3" />
                              <Key frame="129" value="0.678" />
                              <Key frame="139" value="0.3" />
                              <Key frame="149" value="0.6784" />
                              <Key frame="161" value="0.3" />
                              <Key frame="172" value="0.678" />
                              <Key frame="182" value="0.3" />
                              <Key frame="192" value="0.6784" />
                              <Key frame="204" value="0.13" />
                              <Key frame="217" value="0.2648" />
                              <Key frame="237" value="0.264" />
                              <Key frame="260" value="0.2648" />
                              <Key frame="280" value="0.264" />
                              <Key frame="301" value="0.2648" />
                              <Key frame="321" value="0.264" />
                              <Key frame="343" value="0.2648" />
                              <Key frame="363" value="0.264" />
                              <Key frame="386" value="0.24" />
                              <Key frame="396" value="0.2976" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="18" value="-25.3983" />
                              <Key frame="40" value="-21.3553" />
                              <Key frame="60" value="-20.4764" />
                              <Key frame="83" value="-21.3553" />
                              <Key frame="103" value="-20.4764" />
                              <Key frame="125" value="-21.3553" />
                              <Key frame="145" value="-20.4764" />
                              <Key frame="168" value="-21.3553" />
                              <Key frame="188" value="-20.4764" />
                              <Key frame="215" value="-21.3553" />
                              <Key frame="235" value="-20.4764" />
                              <Key frame="258" value="-21.3553" />
                              <Key frame="278" value="-20.4764" />
                              <Key frame="299" value="-21.3553" />
                              <Key frame="319" value="-20.4764" />
                              <Key frame="341" value="-21.3553" />
                              <Key frame="361" value="-20.4764" />
                              <Key frame="394" value="-9.75358" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="18" value="0.266079" />
                              <Key frame="40" value="-8.25942" />
                              <Key frame="60" value="18.8991" />
                              <Key frame="83" value="-8.25942" />
                              <Key frame="103" value="18.8991" />
                              <Key frame="125" value="-8.25942" />
                              <Key frame="145" value="18.8991" />
                              <Key frame="168" value="-8.25942" />
                              <Key frame="188" value="18.8991" />
                              <Key frame="215" value="17.0486" />
                              <Key frame="235" value="-8.08844" />
                              <Key frame="258" value="17.0486" />
                              <Key frame="278" value="-8.08844" />
                              <Key frame="299" value="17.0486" />
                              <Key frame="319" value="-8.08844" />
                              <Key frame="341" value="17.0486" />
                              <Key frame="361" value="-8.08844" />
                              <Key frame="394" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="18" value="-8.78677" />
                              <Key frame="40" value="10.6373" />
                              <Key frame="60" value="8.44001" />
                              <Key frame="83" value="10.6373" />
                              <Key frame="103" value="8.44001" />
                              <Key frame="125" value="10.6373" />
                              <Key frame="145" value="8.44001" />
                              <Key frame="168" value="10.6373" />
                              <Key frame="188" value="8.44001" />
                              <Key frame="215" value="5.79845" />
                              <Key frame="235" value="14.8513" />
                              <Key frame="258" value="5.79845" />
                              <Key frame="278" value="14.8513" />
                              <Key frame="299" value="5.79845" />
                              <Key frame="319" value="14.8513" />
                              <Key frame="341" value="5.79845" />
                              <Key frame="361" value="14.8513" />
                              <Key frame="394" value="8.00056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="18" value="23.201" />
                              <Key frame="40" value="-5.18802" />
                              <Key frame="60" value="-4.57277" />
                              <Key frame="83" value="-5.18802" />
                              <Key frame="103" value="-4.57277" />
                              <Key frame="125" value="-5.18802" />
                              <Key frame="145" value="-4.57277" />
                              <Key frame="168" value="-5.18802" />
                              <Key frame="188" value="-4.57277" />
                              <Key frame="215" value="-5.18321" />
                              <Key frame="235" value="-5.18321" />
                              <Key frame="258" value="-5.18321" />
                              <Key frame="278" value="-5.18321" />
                              <Key frame="299" value="-5.18321" />
                              <Key frame="319" value="-5.18321" />
                              <Key frame="341" value="-5.18321" />
                              <Key frame="361" value="-5.18321" />
                              <Key frame="394" value="-4.48488" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="18" value="-2.63916" />
                              <Key frame="40" value="2.54646" />
                              <Key frame="60" value="9.22623" />
                              <Key frame="83" value="2.54646" />
                              <Key frame="103" value="9.22623" />
                              <Key frame="125" value="2.54646" />
                              <Key frame="145" value="9.22623" />
                              <Key frame="168" value="2.54646" />
                              <Key frame="188" value="9.22623" />
                              <Key frame="215" value="5.27591" />
                              <Key frame="235" value="4.74856" />
                              <Key frame="258" value="5.27591" />
                              <Key frame="278" value="4.74856" />
                              <Key frame="299" value="5.27591" />
                              <Key frame="319" value="4.74856" />
                              <Key frame="341" value="5.27591" />
                              <Key frame="361" value="4.74856" />
                              <Key frame="394" value="5.00743" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="18" value="-1.0523" />
                              <Key frame="40" value="3.60597" />
                              <Key frame="60" value="-14.2361" />
                              <Key frame="83" value="3.60597" />
                              <Key frame="103" value="-14.2361" />
                              <Key frame="125" value="3.60597" />
                              <Key frame="145" value="-14.2361" />
                              <Key frame="168" value="3.60597" />
                              <Key frame="188" value="-14.2361" />
                              <Key frame="215" value="-15.1198" />
                              <Key frame="235" value="5.18321" />
                              <Key frame="258" value="-15.1198" />
                              <Key frame="278" value="5.18321" />
                              <Key frame="299" value="-15.1198" />
                              <Key frame="319" value="5.18321" />
                              <Key frame="341" value="-15.1198" />
                              <Key frame="361" value="5.18321" />
                              <Key frame="394" value="-6.94104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="18" value="-6.85315" />
                              <Key frame="40" value="-17.0486" />
                              <Key frame="60" value="8.08844" />
                              <Key frame="83" value="-17.0486" />
                              <Key frame="103" value="8.08844" />
                              <Key frame="125" value="-17.0486" />
                              <Key frame="145" value="8.08844" />
                              <Key frame="168" value="-17.0486" />
                              <Key frame="188" value="8.08844" />
                              <Key frame="215" value="8.25942" />
                              <Key frame="235" value="-18.8991" />
                              <Key frame="258" value="8.25942" />
                              <Key frame="278" value="-18.8991" />
                              <Key frame="299" value="8.25942" />
                              <Key frame="319" value="-18.8991" />
                              <Key frame="341" value="8.25942" />
                              <Key frame="361" value="-18.8991" />
                              <Key frame="394" value="-5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="18" value="-10.1978" />
                              <Key frame="40" value="5.79845" />
                              <Key frame="60" value="14.8513" />
                              <Key frame="83" value="5.79845" />
                              <Key frame="103" value="14.8513" />
                              <Key frame="125" value="5.79845" />
                              <Key frame="145" value="14.8513" />
                              <Key frame="168" value="5.79845" />
                              <Key frame="188" value="14.8513" />
                              <Key frame="215" value="10.6373" />
                              <Key frame="235" value="8.44001" />
                              <Key frame="258" value="10.6373" />
                              <Key frame="278" value="8.44001" />
                              <Key frame="299" value="10.6373" />
                              <Key frame="319" value="8.44001" />
                              <Key frame="341" value="10.6373" />
                              <Key frame="361" value="8.44001" />
                              <Key frame="394" value="7.55628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="18" value="24.4363" />
                              <Key frame="40" value="-5.18321" />
                              <Key frame="60" value="-5.18321" />
                              <Key frame="83" value="-5.18321" />
                              <Key frame="103" value="-5.18321" />
                              <Key frame="125" value="-5.18321" />
                              <Key frame="145" value="-5.18321" />
                              <Key frame="168" value="-5.18321" />
                              <Key frame="188" value="-5.18321" />
                              <Key frame="215" value="-5.18802" />
                              <Key frame="235" value="-4.57277" />
                              <Key frame="258" value="-5.18802" />
                              <Key frame="278" value="-4.57277" />
                              <Key frame="299" value="-5.18802" />
                              <Key frame="319" value="-4.57277" />
                              <Key frame="341" value="-5.18802" />
                              <Key frame="361" value="-4.57277" />
                              <Key frame="394" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="18" value="-2.98591" />
                              <Key frame="40" value="5.27591" />
                              <Key frame="60" value="4.74856" />
                              <Key frame="83" value="5.27591" />
                              <Key frame="103" value="4.74856" />
                              <Key frame="125" value="5.27591" />
                              <Key frame="145" value="4.74856" />
                              <Key frame="168" value="5.27591" />
                              <Key frame="188" value="4.74856" />
                              <Key frame="215" value="2.54646" />
                              <Key frame="235" value="9.22623" />
                              <Key frame="258" value="2.54646" />
                              <Key frame="278" value="9.22623" />
                              <Key frame="299" value="2.54646" />
                              <Key frame="319" value="9.22623" />
                              <Key frame="341" value="2.54646" />
                              <Key frame="361" value="9.22623" />
                              <Key frame="394" value="5.3638" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="18" value="5.53958" />
                              <Key frame="40" value="15.1198" />
                              <Key frame="60" value="-5.18321" />
                              <Key frame="83" value="15.1198" />
                              <Key frame="103" value="-5.18321" />
                              <Key frame="125" value="15.1198" />
                              <Key frame="145" value="-5.18321" />
                              <Key frame="168" value="15.1198" />
                              <Key frame="188" value="-5.18321" />
                              <Key frame="215" value="-3.60597" />
                              <Key frame="235" value="14.2361" />
                              <Key frame="258" value="-3.60597" />
                              <Key frame="278" value="14.2361" />
                              <Key frame="299" value="-3.60597" />
                              <Key frame="319" value="14.2361" />
                              <Key frame="341" value="-3.60597" />
                              <Key frame="361" value="14.2361" />
                              <Key frame="394" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="40" value="-21.3553" />
                              <Key frame="83" value="-21.3553" />
                              <Key frame="125" value="-21.3553" />
                              <Key frame="168" value="-21.3553" />
                              <Key frame="215" value="-21.3553" />
                              <Key frame="258" value="-21.3553" />
                              <Key frame="299" value="-21.3553" />
                              <Key frame="341" value="-21.3553" />
                              <Key frame="394" value="-9.75358" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Box name="_再说一次" id="5" localization="8" tooltip="Say some text with animations. The text can be localized." x="92" y="1105">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_请调位置" id="7" localization="8" tooltip="Say some text with animations. The text can be localized." x="659" y="1105">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="不好意思，NAO看不到你了！你可以帮我调整一下位置吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_继续" id="10" localization="8" tooltip="Say some text with animations. The text can be localized." x="780" y="1105">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="谢谢你！我们可以继续了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_说些什么" id="14" localization="8" tooltip="" x="917" y="1103">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="sayText" id="26" localization="8" tooltip="Say the text received on its input." x="204" y="14">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Animated Say Text" id="28" localization="8" tooltip="Say the text received on its input and move during its speech.&#x0A;" x="72" y="16">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_认真一点" id="24" localization="8" tooltip="Say some text with animations. The text can be localized." x="92" y="942">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，再做一次看看！要认真一点喔！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_站起" id="11" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="535" y="611">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="3Third" id="15" localization="8" tooltip="Say some text. The text can be localized." x="323" y="577">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += self.getParameter("Text")
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="最后一次了！再试一次看看！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="0" indexofinput="4" outputowner="12" indexofoutput="4" />
                      <Link inputowner="13" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="26" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="12" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="19" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="15" indexofinput="2" outputowner="8" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="2" outputowner="15" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_实验后交流" id="10" localization="8" tooltip="" x="999" y="775">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram scale="100">
                      <Box name="1-Z总结" id="5" localization="8" tooltip="Say some text with animations. The text can be localized." x="161" y="57">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="今天我们一共学习了四个动作，有的动作完成得很好，但是也有动作完成得不好!" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="2-自我评价" id="1" localization="8" tooltip="Say some text with animations. The text can be localized." x="356" y="75">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="总的来说，请问你认为自己刚刚的表现如何？1代表非常不满意，7代表非常满意，你给自己打几分呢？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="3-自我归因" id="2" localization="8" tooltip="Say some text with animations. The text can be localized." x="119" y="278">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="那你认为自己表现得好，或者不好，是你自己的原因，还是我的原因呢？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="4-询问满意度" id="4" localization="8" tooltip="Say some text with animations. The text can be localized." x="119" y="471">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="请你为我的教学表现打分！1代表非常不满意，7代表非常满意，请问你为我打几分呢？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="6-再见" id="6" localization="8" tooltip="Say some text with animations. The text can be localized." x="722" y="230">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="感谢你的评价！本次实验结束！我已经通知主试，请你稍等一下！再见！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Speech Reco." id="7" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="581" y="89">
                        <bitmap>media/images/box/interaction/ear.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.asr = self.session().service("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = self.session().service("ALMemory")
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                        <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                        <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="1;2;3;4;5;6;7" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                        <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="10" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                        <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="9" />
                        <Resource name="Speech recognition" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Speech Reco. (1)" id="8" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="368" y="315">
                        <bitmap>media/images/box/interaction/ear.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.asr = self.session().service("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = self.session().service("ALMemory")
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                        <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                        <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="我的原因;自己的原因;你的原因" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                        <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="10" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                        <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="9" />
                        <Resource name="Speech recognition" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Speech Reco. (2)" id="9" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="378" y="518">
                        <bitmap>media/images/box/interaction/ear.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.asr = self.session().service("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = self.session().service("ALMemory")
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                        <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                        <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="1;2;3;4;5;6;7" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                        <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="10" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                        <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="9" />
                        <Resource name="Speech recognition" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Stand Up" id="10" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="930" y="117">
                        <bitmap>media/images/box/movement/stand.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
                        <Timeline enable="0">
                          <BehaviorLayer name="StandUpBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="5-询问喜爱度" id="3" localization="8" tooltip="Say some text with animations. The text can be localized." x="116" y="665">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="最后一个问题，请问你喜欢我么？1代表非常不喜欢，7代表非常喜欢，请问你打几分呢？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Speech Reco. (3)" id="11" localization="8" tooltip="Recognize a word from a list of words set in the box parameters.&#x0A;&#x0A;V1.1.0&#x0A;" x="380" y="726">
                        <bitmap>media/images/box/interaction/ear.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        try:
            self.asr = self.session().service("ALSpeechRecognition")
        except Exception as e:
            self.asr = None
            self.logger.error(e)
        self.memory = self.session().service("ALMemory")
        from threading import Lock
        self.bIsRunning = False
        self.mutex = Lock()
        self.hasPushed = False
        self.hasSubscribed = False
        self.BIND_PYTHON(self.getName(), "onWordRecognized")

    def onUnload(self):
        from threading import Lock
        self.mutex.acquire()
        try:
            if (self.bIsRunning):
                if (self.hasSubscribed):
                    self.memory.unsubscribeToEvent("WordRecognized", self.getName())
                if (self.hasPushed and self.asr):
                    self.asr.popContexts()
        except RuntimeError, e:
            self.mutex.release()
            raise e
        self.bIsRunning = False;
        self.mutex.release()

    def onInput_onStart(self):
        from threading import Lock
        self.mutex.acquire()
        if(self.bIsRunning):
            self.mutex.release()
            return
        self.bIsRunning = True
        try:
            if self.asr:
                self.asr.pushContexts()
            self.hasPushed = True
            if self.asr:
                self.asr.setVocabulary( self.getParameter("Word list").split(';'), self.getParameter("Enable word spotting") )
            self.memory.subscribeToEvent("WordRecognized", self.getName(), "onWordRecognized")
            self.hasSubscribed = True
        except RuntimeError, e:
            self.mutex.release()
            self.onUnload()
            raise e
        self.mutex.release()

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()

    def onWordRecognized(self, key, value, message):
        if(len(value) > 1 and value[1] >= self.getParameter("Confidence threshold (%)")/100.):
            self.wordRecognized(value[0]) #~ activate output of the box
        else:
            self.onNothing()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Output name="wordRecognized" type="3" type_size="1" nature="2" inner="0" tooltip="Word recognized with a confidence higher than the threshold set in the box parameters." id="5" />
                        <Output name="onNothing" type="1" type_size="1" nature="2" inner="0" tooltip="Nothing has been understood." id="6" />
                        <Parameter name="Word list" inherits_from_parent="0" content_type="3" value="1;2;3;4;5;6;7" default_value="yes;no" custom_choice="0" tooltip="Try to recognize a word from a list of words set in the box parameters." id="7" />
                        <Parameter name="Confidence threshold (%)" inherits_from_parent="0" content_type="1" value="10" default_value="30" min="0" max="100" tooltip="If the confidence associated with the word recognized is below this threshold, the robot will consider that it is not recognized." id="8" />
                        <Parameter name="Enable word spotting" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="If this option is not activated the robot will only understand exact expressions. If it is, he will spot the exact expressions even in the middle of a sentence.&#x0A;&#x0A;!!Warning!! This option is only available with the speech recognition module using Nuance (ie in Atom version of the robot)." id="9" />
                        <Resource name="Speech recognition" type="Lock" timeout="0" />
                      </Box>
                      <Box name="s大声一点" id="12" localization="8" tooltip="Say some text with animations. The text can be localized." x="115" y="1099">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="s再说一次" id="13" localization="8" tooltip="Say some text with animations. The text can be localized." x="301" y="1096">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请再说一次！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="t请调位置" id="14" localization="8" tooltip="Say some text with animations. The text can be localized." x="489" y="1091">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="不好意思，NAO看不到你了！你可以帮我调整一下位置吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="j继续" id="15" localization="8" tooltip="Say some text with animations. The text can be localized." x="663" y="1090">
                        <bitmap>media/images/box/interaction/say.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                        <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                        <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                        <Parameter name="Text" inherits_from_parent="0" content_type="5" value="谢谢你！我们可以继续了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
                        <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                          <Choice value="disabled" />
                          <Choice value="random" />
                          <Choice value="contextual" />
                        </Parameter>
                        <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
                        <Resource name="Speech" type="Lock" timeout="0" />
                      </Box>
                      <Box name="SaySTH" id="16" localization="8" tooltip="" x="849" y="1086">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="sayText" id="26" localization="8" tooltip="Say the text received on its input." x="204" y="14">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                                <Box name="Animated Say Text" id="28" localization="8" tooltip="Say the text received on its input and move during its speech.&#x0A;" x="72" y="16">
                                  <bitmap>media/images/box/interaction/say.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
                                  <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
                                  <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="7">
                                    <Choice value="disabled" />
                                    <Choice value="random" />
                                    <Choice value="contextual" />
                                  </Parameter>
                                  <Resource name="Speech" type="Lock" timeout="0" />
                                </Box>
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Link inputowner="5" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="7" indexofinput="3" outputowner="7" indexofoutput="5" />
                      <Link inputowner="1" indexofinput="2" outputowner="5" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="8" indexofinput="3" outputowner="8" indexofoutput="5" />
                      <Link inputowner="8" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="9" indexofinput="3" outputowner="9" indexofoutput="5" />
                      <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="4" />
                      <Link inputowner="10" indexofinput="2" outputowner="6" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="4" outputowner="10" indexofoutput="4" />
                      <Link inputowner="11" indexofinput="3" outputowner="11" indexofoutput="5" />
                      <Link inputowner="11" indexofinput="2" outputowner="3" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_动作一结束" id="9" localization="8" tooltip="Say some text with animations. The text can be localized." x="129" y="766">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这个动作就练习到这里，我们接着学习，下一个动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_动作二结束" id="12" localization="8" tooltip="Say some text with animations. The text can be localized." x="333" y="769">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="这个动作学习结束，我们进入，下一个动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_动作三结束" id="16" localization="8" tooltip="Say some text with animations. The text can be localized." x="577" y="775">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="我们接着练习，下一个动作！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_动作四结束" id="18" localization="8" tooltip="Say some text with animations. The text can be localized." x="804" y="777">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="今天的练习到这里就结束了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_动作一开始" id="19" localization="8" tooltip="Say some text with animations. The text can be localized." x="123" y="413">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="第一个动作，请看我的示范！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_动作二开始" id="20" localization="8" tooltip="Say some text with animations. The text can be localized." x="342" y="392">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="第二个动作，请看我的示范！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_动作三开始" id="21" localization="8" tooltip="Say some text with animations. The text can be localized." x="581" y="390">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="第三个动作，请看我的示范！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_动作四开始" id="22" localization="8" tooltip="Say some text with animations. The text can be localized." x="798" y="389">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="最后一个动作，请看我的示范！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_应可移除" id="11" localization="8" tooltip="" x="809" y="82">
              <bitmap>media/images/box/box-diagram.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
              <Timeline enable="0">
                <BehaviorLayer name="behavior_layer1">
                  <BehaviorKeyframe name="keyframe1" index="1">
                    <Diagram>
                      <Box name="_左右手慢动作" id="7" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="588" y="956">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="432">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="Twinkle" id="1" localization="8" tooltip="NAO&apos;s selected LEDs flash on and off during the time defined in parameters." x="255" y="104">
                                  <bitmap>media/images/box/interaction/LED.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Parameter name="LEDs group" inherits_from_parent="0" content_type="3" value="AllLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="5">
                                    <Choice value="AllLeds" />
                                    <Choice value="BrainLeds" />
                                    <Choice value="ChestLeds" />
                                    <Choice value="EarLeds" />
                                    <Choice value="FaceLeds" />
                                    <Choice value="FeetLeds" />
                                    <Choice value="LeftEarLeds" />
                                    <Choice value="LeftFaceLeds" />
                                    <Choice value="LeftFootLeds" />
                                    <Choice value="RightEarLeds" />
                                    <Choice value="RightFaceLeds" />
                                    <Choice value="RightFootLeds" />
                                  </Parameter>
                                  <Parameter name="Time to flash on (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                  <Parameter name="Time to flash off (s)" inherits_from_parent="0" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="7" />
                                  <Parameter name="Animation duration (s)" inherits_from_parent="0" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="8" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Set LEDs" id="3" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="176" y="119">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash on (s)"))
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                            <Parameter name="Time to flash on (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                          </Box>
                                          <Box name="Set LEDs" id="1" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="180" y="262">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., self.getParameter("Time to flash off (s)"))
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="0" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                            <Parameter name="Time to flash off (s)" inherits_from_parent="1" content_type="2" value="0.5" default_value="0.5" min="0.1" max="2" tooltip="How much time to go to the intensity in seconds." id="6" />
                                          </Box>
                                          <Box name="Wait" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. The wait can be stopped any&#x0A;time. You may restart it any time, and it will start again." x="172" y="16">
                                            <bitmap>media/images/box/wait.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import threading

class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.tb = False

    def onUnload(self):
        if( self.tb ):
            self.tb.cancel()
            self.tb = False

    def triggerOutput( self, rPeriod = 1 ):
        self.onUnload() # to clean everything
        self.timerOutput()

    def startTimer( self, rPeriod = 1 ):
        if( self.tb ):
            self.tb.cancel()
        self.tb = threading.Timer( rPeriod, self.triggerOutput, [rPeriod] )
        self.tb.start()

    def onInput_onStart(self):
        self.startTimer( self.getParameter("Animation duration (s)") )

    def onInput_onStop(self):
        bRunning = self.tb
        self.onUnload()
        if( bRunning ):
            self.timerOutput()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                                            <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is ellapsed, or if the box is stopped." id="4" />
                                            <Parameter name="Animation duration (s)" inherits_from_parent="1" content_type="2" value="10" default_value="10" min="0.1" max="5000" tooltip="Duration of the animation of LEDs." id="5" />
                                          </Box>
                                          <Box name="Set LEDs" id="4" localization="8" tooltip="Set the intensity of the LEDs of a given group." x="308" y="12">
                                            <bitmap>media/images/box/interaction/LED.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.leds = ALProxy("ALLeds")

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onSet(self):
        self.leds.fade(self.getParameter("LEDs group"), self.getParameter("Intensity (%)")/100., 0.1)
        self.onReady() # activate output of the box]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onSet" type="1" type_size="1" nature="2" inner="0" tooltip="When this input is stimulated, the intensity of all the LEDs from the group is&#x0A;set to the intensity parameter value." id="2" />
                                            <Output name="onReady" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when LEDs intensity has been set." id="3" />
                                            <Parameter name="LEDs group" inherits_from_parent="1" content_type="3" value="FaceLeds" default_value="FaceLeds" custom_choice="1" tooltip="The group of LEDs which intensity is to set.&#x0A;&#x0A;Note: You can call the listGroups() method of ALMotion to get the name of LEDs&#x0A;groups which are not listed here." id="4">
                                              <Choice value="AllLeds" />
                                              <Choice value="BrainLeds" />
                                              <Choice value="ChestLeds" />
                                              <Choice value="EarLeds" />
                                              <Choice value="FaceLeds" />
                                              <Choice value="FeetLeds" />
                                              <Choice value="LeftEarLeds" />
                                              <Choice value="LeftFaceLeds" />
                                              <Choice value="LeftFootLeds" />
                                              <Choice value="RightEarLeds" />
                                              <Choice value="RightFaceLeds" />
                                              <Choice value="RightFootLeds" />
                                            </Parameter>
                                            <Parameter name="Intensity (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Intensity all the LEDs from the group is set to." id="5" />
                                          </Box>
                                          <Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="1" indexofinput="2" outputowner="3" indexofoutput="3" />
                                          <Link inputowner="3" indexofinput="2" outputowner="1" indexofoutput="3" />
                                          <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="4" indexofinput="2" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="0" indexofinput="4" outputowner="4" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="-13.6256" />
                              <Key frame="49" value="-0.353968" />
                              <Key frame="69" value="3.68905" />
                              <Key frame="87" value="3.68905" />
                              <Key frame="104" value="3.68905" />
                              <Key frame="127" value="3.68905" />
                              <Key frame="148" value="3.68905" />
                              <Key frame="163" value="8.78677" />
                              <Key frame="178" value="8.78677" />
                              <Key frame="191" value="-10.901" />
                              <Key frame="209" value="-5.97904" />
                              <Key frame="227" value="-16.3503" />
                              <Key frame="260" value="0.349159" />
                              <Key frame="292" value="7.90786" />
                              <Key frame="319" value="12.7419" />
                              <Key frame="341" value="12.7419" />
                              <Key frame="360" value="4.2164" />
                              <Key frame="378" value="16.8728" />
                              <Key frame="400" value="-13.0104" />
                              <Key frame="432" value="-13.6256" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-0.00240423" />
                              <Key frame="49" value="-17.9323" />
                              <Key frame="69" value="17.9275" />
                              <Key frame="87" value="-13.362" />
                              <Key frame="104" value="18.1033" />
                              <Key frame="127" value="18.1033" />
                              <Key frame="148" value="-10.3736" />
                              <Key frame="163" value="-20.2175" />
                              <Key frame="178" value="-20.2175" />
                              <Key frame="191" value="-13.4498" />
                              <Key frame="209" value="12.1267" />
                              <Key frame="227" value="30.6718" />
                              <Key frame="260" value="17.6638" />
                              <Key frame="292" value="1.40386" />
                              <Key frame="319" value="-15.2956" />
                              <Key frame="341" value="31.5507" />
                              <Key frame="360" value="-6.85796" />
                              <Key frame="378" value="28.7382" />
                              <Key frame="400" value="-27.0731" />
                              <Key frame="432" value="-0.00240423" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="5.53478" />
                              <Key frame="49" value="5.53478" />
                              <Key frame="69" value="5.44688" />
                              <Key frame="87" value="5.44688" />
                              <Key frame="104" value="5.53478" />
                              <Key frame="127" value="5.53478" />
                              <Key frame="148" value="5.44688" />
                              <Key frame="260" value="5.53478" />
                              <Key frame="292" value="5.62267" />
                              <Key frame="319" value="5.53478" />
                              <Key frame="341" value="5.53478" />
                              <Key frame="360" value="5.53478" />
                              <Key frame="378" value="-10.901" />
                              <Key frame="400" value="-28.0399" />
                              <Key frame="432" value="5.62267" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="-6.67737" />
                              <Key frame="49" value="-6.67737" />
                              <Key frame="69" value="-6.67737" />
                              <Key frame="87" value="-6.67737" />
                              <Key frame="104" value="-6.67737" />
                              <Key frame="127" value="-6.67737" />
                              <Key frame="148" value="-6.67737" />
                              <Key frame="260" value="-6.67737" />
                              <Key frame="292" value="-6.58948" />
                              <Key frame="319" value="-6.67737" />
                              <Key frame="341" value="-6.67737" />
                              <Key frame="360" value="-14.4118" />
                              <Key frame="378" value="3.34228" />
                              <Key frame="400" value="-12.1267" />
                              <Key frame="432" value="-6.58948" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-22.41" />
                              <Key frame="49" value="-22.41" />
                              <Key frame="69" value="-23.2889" />
                              <Key frame="87" value="-23.2889" />
                              <Key frame="104" value="-23.2889" />
                              <Key frame="116" value="-23.2889" />
                              <Key frame="127" value="-23.2889" />
                              <Key frame="138" value="-58.094" />
                              <Key frame="148" value="-53.1721" />
                              <Key frame="163" value="-53.5237" />
                              <Key frame="178" value="-53.5237" />
                              <Key frame="191" value="-53.5237" />
                              <Key frame="209" value="-44.8224" />
                              <Key frame="227" value="-82.7037" />
                              <Key frame="260" value="-82.7037" />
                              <Key frame="292" value="-24.6073" />
                              <Key frame="319" value="-24.9589" />
                              <Key frame="332" value="-58.2698" />
                              <Key frame="341" value="-80.1549" />
                              <Key frame="360" value="-81.4732" />
                              <Key frame="378" value="-81.4732" />
                              <Key frame="400" value="-87.6256" />
                              <Key frame="417" value="-23.7284" />
                              <Key frame="432" value="-23.9041" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-69.8763" />
                              <Key frame="49" value="-69.8763" />
                              <Key frame="69" value="-69.0853" />
                              <Key frame="87" value="-69.0853" />
                              <Key frame="104" value="-82.2691" />
                              <Key frame="116" value="-82.2691" />
                              <Key frame="127" value="-82.2691" />
                              <Key frame="138" value="-71.0189" />
                              <Key frame="148" value="-0.705531" />
                              <Key frame="163" value="-0.353968" />
                              <Key frame="178" value="-0.353968" />
                              <Key frame="191" value="-0.61764" />
                              <Key frame="209" value="-77.1713" />
                              <Key frame="227" value="-56.341" />
                              <Key frame="260" value="-56.341" />
                              <Key frame="292" value="12.3024" />
                              <Key frame="319" value="11.7751" />
                              <Key frame="332" value="4.30429" />
                              <Key frame="341" value="-0.00240423" />
                              <Key frame="360" value="-0.969218" />
                              <Key frame="378" value="-0.969218" />
                              <Key frame="400" value="-13.6256" />
                              <Key frame="417" value="-73.4799" />
                              <Key frame="432" value="-67.9427" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.3056" />
                              <Key frame="49" value="0.3056" />
                              <Key frame="69" value="0.8488" />
                              <Key frame="87" value="0.8484" />
                              <Key frame="104" value="0.8484" />
                              <Key frame="116" value="0.8484" />
                              <Key frame="127" value="0.8488" />
                              <Key frame="138" value="0.8484" />
                              <Key frame="148" value="0.8488" />
                              <Key frame="163" value="0.8488" />
                              <Key frame="178" value="0.8488" />
                              <Key frame="191" value="0.8488" />
                              <Key frame="209" value="0.8484" />
                              <Key frame="227" value="0.8484" />
                              <Key frame="260" value="0.8488" />
                              <Key frame="292" value="0.8484" />
                              <Key frame="319" value="0.8468" />
                              <Key frame="332" value="0.8468" />
                              <Key frame="341" value="0.8468" />
                              <Key frame="360" value="0.8484" />
                              <Key frame="378" value="0.8484" />
                              <Key frame="400" value="0.8472" />
                              <Key frame="417" value="0.3056" />
                              <Key frame="432" value="0.3056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="25" value="7.82477" />
                              <Key frame="49" value="7.73688" />
                              <Key frame="69" value="7.64898" />
                              <Key frame="87" value="7.82477" />
                              <Key frame="104" value="7.73688" />
                              <Key frame="127" value="7.73688" />
                              <Key frame="148" value="7.73688" />
                              <Key frame="260" value="7.73688" />
                              <Key frame="292" value="7.73688" />
                              <Key frame="319" value="7.82477" />
                              <Key frame="341" value="7.82477" />
                              <Key frame="360" value="9.31893" />
                              <Key frame="378" value="2.46338" />
                              <Key frame="400" value="-30.6718" />
                              <Key frame="432" value="8.08845" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="25" value="6.59429" />
                              <Key frame="49" value="6.59429" />
                              <Key frame="69" value="6.59429" />
                              <Key frame="87" value="6.59429" />
                              <Key frame="104" value="6.59429" />
                              <Key frame="127" value="6.59429" />
                              <Key frame="148" value="6.59429" />
                              <Key frame="260" value="6.59429" />
                              <Key frame="292" value="6.59429" />
                              <Key frame="319" value="6.59429" />
                              <Key frame="341" value="6.59429" />
                              <Key frame="360" value="17.9323" />
                              <Key frame="378" value="-14.9392" />
                              <Key frame="400" value="24.7" />
                              <Key frame="432" value="6.5064" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-9.92936" />
                              <Key frame="49" value="-9.92936" />
                              <Key frame="69" value="-9.92936" />
                              <Key frame="87" value="-10.0173" />
                              <Key frame="104" value="-10.0173" />
                              <Key frame="127" value="-9.92936" />
                              <Key frame="148" value="-9.92936" />
                              <Key frame="260" value="-9.92936" />
                              <Key frame="292" value="-9.92936" />
                              <Key frame="319" value="-9.92936" />
                              <Key frame="341" value="-9.92936" />
                              <Key frame="360" value="-9.84147" />
                              <Key frame="378" value="-13.7966" />
                              <Key frame="400" value="-33.0449" />
                              <Key frame="432" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="25" value="-5.18802" />
                              <Key frame="49" value="-5.18802" />
                              <Key frame="69" value="-5.27591" />
                              <Key frame="87" value="-5.29" />
                              <Key frame="104" value="-5.27591" />
                              <Key frame="127" value="-5.27591" />
                              <Key frame="148" value="-5.27591" />
                              <Key frame="260" value="-5.18802" />
                              <Key frame="292" value="-5.18802" />
                              <Key frame="319" value="-5.10013" />
                              <Key frame="341" value="-5.18802" />
                              <Key frame="360" value="-5.27591" />
                              <Key frame="378" value="24.2557" />
                              <Key frame="400" value="76.5513" />
                              <Key frame="432" value="-5.27591" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.5163" />
                              <Key frame="49" value="85.5163" />
                              <Key frame="69" value="22.7616" />
                              <Key frame="87" value="22.7616" />
                              <Key frame="104" value="24.7831" />
                              <Key frame="116" value="24.7831" />
                              <Key frame="127" value="24.871" />
                              <Key frame="138" value="13.7087" />
                              <Key frame="148" value="4.12851" />
                              <Key frame="163" value="7.46839" />
                              <Key frame="178" value="9.05044" />
                              <Key frame="191" value="5.44688" />
                              <Key frame="209" value="12.8298" />
                              <Key frame="227" value="-39.5537" />
                              <Key frame="260" value="-39.5537" />
                              <Key frame="292" value="35.6816" />
                              <Key frame="319" value="37.9668" />
                              <Key frame="332" value="52.7326" />
                              <Key frame="341" value="81.9127" />
                              <Key frame="360" value="81.2974" />
                              <Key frame="378" value="81.3853" />
                              <Key frame="400" value="65.4769" />
                              <Key frame="417" value="82.0885" />
                              <Key frame="432" value="86.2194" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="7.46839" />
                              <Key frame="49" value="7.46839" />
                              <Key frame="69" value="0.788627" />
                              <Key frame="87" value="0.788627" />
                              <Key frame="104" value="0.612832" />
                              <Key frame="116" value="0.612832" />
                              <Key frame="127" value="0.612832" />
                              <Key frame="138" value="-8.44001" />
                              <Key frame="148" value="-15.9987" />
                              <Key frame="163" value="-14.153" />
                              <Key frame="178" value="-14.2409" />
                              <Key frame="191" value="-14.153" />
                              <Key frame="209" value="-4.04543" />
                              <Key frame="227" value="17.4002" />
                              <Key frame="260" value="17.3123" />
                              <Key frame="292" value="-18" />
                              <Key frame="319" value="-15.2956" />
                              <Key frame="332" value="21.5311" />
                              <Key frame="341" value="42.4493" />
                              <Key frame="360" value="44.7345" />
                              <Key frame="378" value="44.2071" />
                              <Key frame="400" value="38.9336" />
                              <Key frame="417" value="19.3338" />
                              <Key frame="432" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="8.4352" />
                              <Key frame="49" value="8.25942" />
                              <Key frame="69" value="65.6527" />
                              <Key frame="87" value="65.6527" />
                              <Key frame="104" value="-101.342" />
                              <Key frame="116" value="-101.342" />
                              <Key frame="127" value="-101.254" />
                              <Key frame="138" value="-44.5635" />
                              <Key frame="148" value="-15.9108" />
                              <Key frame="163" value="-17.7565" />
                              <Key frame="178" value="-17.6686" />
                              <Key frame="191" value="-17.6686" />
                              <Key frame="209" value="-17.3171" />
                              <Key frame="227" value="-48.5186" />
                              <Key frame="260" value="-48.5186" />
                              <Key frame="292" value="-26.4578" />
                              <Key frame="319" value="-27.8641" />
                              <Key frame="332" value="-41.9268" />
                              <Key frame="341" value="-51.6827" />
                              <Key frame="360" value="-52.7374" />
                              <Key frame="378" value="-52.7374" />
                              <Key frame="400" value="-22.1511" />
                              <Key frame="417" value="5.2711" />
                              <Key frame="432" value="5.09532" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="5.89115" />
                              <Key frame="49" value="5.89115" />
                              <Key frame="69" value="5.80326" />
                              <Key frame="87" value="5.80326" />
                              <Key frame="104" value="5.80326" />
                              <Key frame="127" value="5.89115" />
                              <Key frame="148" value="5.89115" />
                              <Key frame="260" value="5.80326" />
                              <Key frame="292" value="5.97904" />
                              <Key frame="319" value="5.89115" />
                              <Key frame="341" value="5.89115" />
                              <Key frame="360" value="-5.44688" />
                              <Key frame="378" value="-21.0037" />
                              <Key frame="400" value="-37.4395" />
                              <Key frame="432" value="6.06693" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="4.22121" />
                              <Key frame="49" value="4.3091" />
                              <Key frame="69" value="4.22121" />
                              <Key frame="87" value="4.3091" />
                              <Key frame="104" value="4.3091" />
                              <Key frame="127" value="4.22121" />
                              <Key frame="148" value="4.3091" />
                              <Key frame="260" value="4.22121" />
                              <Key frame="292" value="4.13332" />
                              <Key frame="319" value="4.22121" />
                              <Key frame="341" value="4.22121" />
                              <Key frame="360" value="0.441859" />
                              <Key frame="378" value="22.4148" />
                              <Key frame="400" value="1.23289" />
                              <Key frame="432" value="4.13332" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="22.3269" />
                              <Key frame="49" value="23.03" />
                              <Key frame="69" value="23.03" />
                              <Key frame="87" value="23.9968" />
                              <Key frame="104" value="23.9968" />
                              <Key frame="116" value="70.14" />
                              <Key frame="127" value="68.9974" />
                              <Key frame="138" value="64.8665" />
                              <Key frame="148" value="64.7786" />
                              <Key frame="163" value="17.1413" />
                              <Key frame="178" value="39.2021" />
                              <Key frame="191" value="88.4215" />
                              <Key frame="209" value="87.8941" />
                              <Key frame="227" value="87.8062" />
                              <Key frame="260" value="39.0263" />
                              <Key frame="292" value="39.0263" />
                              <Key frame="319" value="77.2592" />
                              <Key frame="332" value="73.4799" />
                              <Key frame="341" value="73.5678" />
                              <Key frame="360" value="74.2709" />
                              <Key frame="378" value="74.183" />
                              <Key frame="400" value="72.7768" />
                              <Key frame="417" value="23.909" />
                              <Key frame="432" value="23.9968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="67.4106" />
                              <Key frame="49" value="66.1801" />
                              <Key frame="69" value="66.1801" />
                              <Key frame="87" value="105.028" />
                              <Key frame="104" value="104.94" />
                              <Key frame="116" value="72.4204" />
                              <Key frame="127" value="8.08364" />
                              <Key frame="138" value="-0.881327" />
                              <Key frame="148" value="-0.881327" />
                              <Key frame="163" value="-41.2236" />
                              <Key frame="178" value="76.5513" />
                              <Key frame="191" value="62.2249" />
                              <Key frame="209" value="62.5765" />
                              <Key frame="227" value="62.5765" />
                              <Key frame="260" value="-5.27591" />
                              <Key frame="292" value="-5.27591" />
                              <Key frame="319" value="-16.4382" />
                              <Key frame="332" value="-14.4166" />
                              <Key frame="341" value="-13.7135" />
                              <Key frame="360" value="-12.483" />
                              <Key frame="378" value="-12.7467" />
                              <Key frame="400" value="-11.0768" />
                              <Key frame="417" value="67.4984" />
                              <Key frame="432" value="66.6195" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.31" />
                              <Key frame="49" value="0.9304" />
                              <Key frame="69" value="0.9304" />
                              <Key frame="87" value="0.9304" />
                              <Key frame="104" value="0.9304" />
                              <Key frame="116" value="0.9304" />
                              <Key frame="127" value="0.9304" />
                              <Key frame="138" value="0.9304" />
                              <Key frame="148" value="0.9304" />
                              <Key frame="163" value="0.9304" />
                              <Key frame="178" value="0.9304" />
                              <Key frame="191" value="0.9304" />
                              <Key frame="209" value="0.9304" />
                              <Key frame="227" value="0.9304" />
                              <Key frame="260" value="0.9304" />
                              <Key frame="292" value="0.9304" />
                              <Key frame="319" value="0.9284" />
                              <Key frame="332" value="0.9284" />
                              <Key frame="341" value="0.9284" />
                              <Key frame="360" value="0.9304" />
                              <Key frame="378" value="0.9304" />
                              <Key frame="400" value="0.9284" />
                              <Key frame="417" value="0.3096" />
                              <Key frame="432" value="0.3064" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="25" value="7.55628" />
                              <Key frame="49" value="7.55628" />
                              <Key frame="69" value="7.46839" />
                              <Key frame="87" value="7.55628" />
                              <Key frame="104" value="7.55628" />
                              <Key frame="127" value="7.55628" />
                              <Key frame="148" value="7.3805" />
                              <Key frame="260" value="7.46839" />
                              <Key frame="292" value="7.55628" />
                              <Key frame="319" value="7.55628" />
                              <Key frame="341" value="7.55628" />
                              <Key frame="360" value="7.64417" />
                              <Key frame="378" value="7.55628" />
                              <Key frame="400" value="-4.39699" />
                              <Key frame="432" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="25" value="-3.68905" />
                              <Key frame="49" value="-3.68905" />
                              <Key frame="69" value="-3.68905" />
                              <Key frame="87" value="-3.68905" />
                              <Key frame="104" value="-3.68905" />
                              <Key frame="127" value="-3.68905" />
                              <Key frame="148" value="-3.68905" />
                              <Key frame="260" value="-3.68905" />
                              <Key frame="292" value="-3.68905" />
                              <Key frame="319" value="-3.68905" />
                              <Key frame="341" value="-3.68905" />
                              <Key frame="360" value="2.63916" />
                              <Key frame="378" value="-38.4942" />
                              <Key frame="400" value="4.39699" />
                              <Key frame="432" value="-3.77694" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-9.92936" />
                              <Key frame="49" value="-9.92936" />
                              <Key frame="69" value="-9.92936" />
                              <Key frame="87" value="-10.0173" />
                              <Key frame="104" value="-10.0173" />
                              <Key frame="127" value="-9.92936" />
                              <Key frame="148" value="-9.92936" />
                              <Key frame="260" value="-9.92936" />
                              <Key frame="292" value="-9.92936" />
                              <Key frame="319" value="-9.92936" />
                              <Key frame="341" value="-9.92936" />
                              <Key frame="360" value="-9.84147" />
                              <Key frame="378" value="-13.7966" />
                              <Key frame="400" value="-33.0449" />
                              <Key frame="432" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="25" value="-5.2711" />
                              <Key frame="49" value="-5.2711" />
                              <Key frame="69" value="-5.29" />
                              <Key frame="87" value="-5.29" />
                              <Key frame="104" value="-5.29" />
                              <Key frame="127" value="-5.29" />
                              <Key frame="148" value="-5.2711" />
                              <Key frame="260" value="-5.2711" />
                              <Key frame="292" value="-5.2711" />
                              <Key frame="319" value="-5.2711" />
                              <Key frame="341" value="-5.2711" />
                              <Key frame="360" value="7.56109" />
                              <Key frame="378" value="26.1063" />
                              <Key frame="400" value="66.8001" />
                              <Key frame="432" value="-5.29" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="85.6968" />
                              <Key frame="49" value="26.6336" />
                              <Key frame="69" value="26.7215" />
                              <Key frame="87" value="26.5457" />
                              <Key frame="104" value="26.5457" />
                              <Key frame="116" value="25.6668" />
                              <Key frame="127" value="19.8659" />
                              <Key frame="138" value="29.7098" />
                              <Key frame="148" value="31.9071" />
                              <Key frame="163" value="37.6201" />
                              <Key frame="178" value="28.2156" />
                              <Key frame="191" value="-35.5937" />
                              <Key frame="209" value="-32.8691" />
                              <Key frame="227" value="-32.8691" />
                              <Key frame="260" value="58.4504" />
                              <Key frame="292" value="58.5383" />
                              <Key frame="319" value="62.4055" />
                              <Key frame="332" value="62.2297" />
                              <Key frame="341" value="67.2396" />
                              <Key frame="360" value="67.679" />
                              <Key frame="378" value="67.679" />
                              <Key frame="400" value="66.4486" />
                              <Key frame="417" value="79.0171" />
                              <Key frame="432" value="85.2574" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-5.45169" />
                              <Key frame="49" value="4.39218" />
                              <Key frame="69" value="4.39218" />
                              <Key frame="87" value="9.48991" />
                              <Key frame="104" value="9.48991" />
                              <Key frame="116" value="18" />
                              <Key frame="127" value="18" />
                              <Key frame="138" value="18" />
                              <Key frame="148" value="18" />
                              <Key frame="163" value="-9.23104" />
                              <Key frame="178" value="-13.6256" />
                              <Key frame="191" value="-14.944" />
                              <Key frame="209" value="-14.5924" />
                              <Key frame="227" value="-14.944" />
                              <Key frame="260" value="17.5759" />
                              <Key frame="292" value="17.4002" />
                              <Key frame="319" value="-34.8954" />
                              <Key frame="332" value="-34.9833" />
                              <Key frame="341" value="-34.9833" />
                              <Key frame="360" value="-36.5654" />
                              <Key frame="378" value="-36.6533" />
                              <Key frame="400" value="-36.1259" />
                              <Key frame="417" value="-18.2839" />
                              <Key frame="432" value="-5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="3.33748" />
                              <Key frame="49" value="-66.3607" />
                              <Key frame="69" value="-66.3607" />
                              <Key frame="87" value="68.5531" />
                              <Key frame="104" value="68.5531" />
                              <Key frame="116" value="32.166" />
                              <Key frame="127" value="4.48007" />
                              <Key frame="138" value="1.49175" />
                              <Key frame="148" value="1.57965" />
                              <Key frame="163" value="36.0332" />
                              <Key frame="178" value="-20.1296" />
                              <Key frame="191" value="55.9846" />
                              <Key frame="209" value="55.0178" />
                              <Key frame="227" value="55.0178" />
                              <Key frame="260" value="39.8125" />
                              <Key frame="292" value="39.8125" />
                              <Key frame="319" value="54.1389" />
                              <Key frame="332" value="48.6017" />
                              <Key frame="341" value="48.5138" />
                              <Key frame="360" value="47.2834" />
                              <Key frame="378" value="47.2834" />
                              <Key frame="400" value="46.5802" />
                              <Key frame="417" value="2.28279" />
                              <Key frame="432" value="7.55628" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="_迪斯可手四次" id="23" localization="8" tooltip="ID : #04B 0002&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Disco" x="1042" y="931">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Animation starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Animation stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when animation is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="398">
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="42" value="-42.7" />
                              <Key frame="62" value="16.6" />
                              <Key frame="85" value="-42.7" />
                              <Key frame="105" value="16.6" />
                              <Key frame="127" value="-42.7" />
                              <Key frame="147" value="16.6" />
                              <Key frame="170" value="-42.7" />
                              <Key frame="190" value="16.6" />
                              <Key frame="217" value="42.7" />
                              <Key frame="237" value="-16.6" />
                              <Key frame="260" value="42.7" />
                              <Key frame="280" value="-16.6" />
                              <Key frame="301" value="42.7" />
                              <Key frame="321" value="-16.6" />
                              <Key frame="343" value="42.7" />
                              <Key frame="363" value="-16.6" />
                              <Key frame="396" value="0.524941" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="42" value="-27.3" />
                              <Key frame="62" value="19.4" />
                              <Key frame="85" value="-27.3" />
                              <Key frame="105" value="19.4" />
                              <Key frame="127" value="-27.3" />
                              <Key frame="147" value="19.4" />
                              <Key frame="170" value="-27.3" />
                              <Key frame="190" value="19.4" />
                              <Key frame="217" value="-27.3" />
                              <Key frame="237" value="19.4" />
                              <Key frame="260" value="-27.3" />
                              <Key frame="280" value="19.4" />
                              <Key frame="301" value="-27.3" />
                              <Key frame="321" value="19.4" />
                              <Key frame="343" value="-27.3" />
                              <Key frame="363" value="19.4" />
                              <Key frame="396" value="-9.84628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="21" value="36.6484" />
                              <Key frame="42" value="100.106" />
                              <Key frame="62" value="106.347" />
                              <Key frame="85" value="100.106" />
                              <Key frame="105" value="106.347" />
                              <Key frame="127" value="100.106" />
                              <Key frame="147" value="106.347" />
                              <Key frame="170" value="100.106" />
                              <Key frame="190" value="106.347" />
                              <Key frame="204" value="69.6" />
                              <Key frame="219" value="-68.2895" />
                              <Key frame="239" value="57.0441" />
                              <Key frame="262" value="-68.2895" />
                              <Key frame="282" value="57.0441" />
                              <Key frame="303" value="-68.2895" />
                              <Key frame="323" value="57.0441" />
                              <Key frame="345" value="-68.2895" />
                              <Key frame="365" value="57.0441" />
                              <Key frame="385" value="61" />
                              <Key frame="398" value="84.2858" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="21" value="19.5096" />
                              <Key frame="42" value="13.8845" />
                              <Key frame="62" value="11.2477" />
                              <Key frame="85" value="13.8845" />
                              <Key frame="105" value="11.2477" />
                              <Key frame="127" value="13.8845" />
                              <Key frame="147" value="11.2477" />
                              <Key frame="170" value="13.8845" />
                              <Key frame="190" value="11.2477" />
                              <Key frame="204" value="9.5" />
                              <Key frame="219" value="18.8112" />
                              <Key frame="229" value="34.1" />
                              <Key frame="239" value="-18" />
                              <Key frame="251" value="34.1" />
                              <Key frame="262" value="18.8112" />
                              <Key frame="272" value="34.1" />
                              <Key frame="282" value="-18" />
                              <Key frame="294" value="34.1" />
                              <Key frame="303" value="18.8112" />
                              <Key frame="313" value="34.1" />
                              <Key frame="323" value="-18" />
                              <Key frame="335" value="34.1" />
                              <Key frame="345" value="18.8112" />
                              <Key frame="355" value="34.1" />
                              <Key frame="365" value="-18" />
                              <Key frame="377" value="34.1" />
                              <Key frame="398" value="8.78677" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="21" value="-37.5322" />
                              <Key frame="32" value="-101.1" />
                              <Key frame="42" value="-21.7996" />
                              <Key frame="62" value="-35.4228" />
                              <Key frame="85" value="-21.7996" />
                              <Key frame="105" value="-35.4228" />
                              <Key frame="127" value="-21.7996" />
                              <Key frame="147" value="-35.4228" />
                              <Key frame="170" value="-21.7996" />
                              <Key frame="190" value="-35.4228" />
                              <Key frame="204" value="-94.9" />
                              <Key frame="219" value="48.7823" />
                              <Key frame="229" value="4.3" />
                              <Key frame="239" value="0.090296" />
                              <Key frame="251" value="26.4" />
                              <Key frame="262" value="48.7823" />
                              <Key frame="272" value="4.3" />
                              <Key frame="282" value="0.090296" />
                              <Key frame="294" value="26.4" />
                              <Key frame="303" value="48.7823" />
                              <Key frame="313" value="4.3" />
                              <Key frame="323" value="0.090296" />
                              <Key frame="335" value="26.4" />
                              <Key frame="345" value="48.7823" />
                              <Key frame="355" value="4.3" />
                              <Key frame="365" value="0.090296" />
                              <Key frame="377" value="-39.1" />
                              <Key frame="398" value="-69.349" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="21" value="-78.6607" />
                              <Key frame="32" value="-64.7" />
                              <Key frame="42" value="-21.1795" />
                              <Key frame="62" value="-11.5993" />
                              <Key frame="85" value="-21.1795" />
                              <Key frame="105" value="-11.5993" />
                              <Key frame="127" value="-21.1795" />
                              <Key frame="147" value="-11.5993" />
                              <Key frame="170" value="-21.1795" />
                              <Key frame="190" value="-11.5993" />
                              <Key frame="204" value="-88.5" />
                              <Key frame="219" value="-7.91266" />
                              <Key frame="229" value="-75" />
                              <Key frame="239" value="-14.7682" />
                              <Key frame="251" value="-83.6" />
                              <Key frame="262" value="-7.91266" />
                              <Key frame="272" value="-75" />
                              <Key frame="282" value="-14.7682" />
                              <Key frame="294" value="-83.6" />
                              <Key frame="303" value="-7.91266" />
                              <Key frame="313" value="-75" />
                              <Key frame="323" value="-14.7682" />
                              <Key frame="335" value="-83.6" />
                              <Key frame="345" value="-7.91266" />
                              <Key frame="355" value="-75" />
                              <Key frame="365" value="-14.7682" />
                              <Key frame="377" value="-83.6" />
                              <Key frame="398" value="-24.3436" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="21" value="6.85315" />
                              <Key frame="32" value="-83.1" />
                              <Key frame="42" value="-22.6785" />
                              <Key frame="62" value="-24.0847" />
                              <Key frame="85" value="-22.6785" />
                              <Key frame="105" value="-24.0847" />
                              <Key frame="127" value="-22.6785" />
                              <Key frame="147" value="-24.0847" />
                              <Key frame="170" value="-22.6785" />
                              <Key frame="190" value="-24.0847" />
                              <Key frame="219" value="-6.15002" />
                              <Key frame="239" value="-22.9373" />
                              <Key frame="262" value="-6.15002" />
                              <Key frame="282" value="-22.9373" />
                              <Key frame="303" value="-6.15002" />
                              <Key frame="323" value="-22.9373" />
                              <Key frame="345" value="-6.15002" />
                              <Key frame="365" value="-22.9373" />
                              <Key frame="398" value="4.74374" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="21" value="0.2" />
                              <Key frame="32" value="0.6" />
                              <Key frame="42" value="0.2648" />
                              <Key frame="62" value="0.264" />
                              <Key frame="85" value="0.2648" />
                              <Key frame="105" value="0.264" />
                              <Key frame="127" value="0.2648" />
                              <Key frame="147" value="0.264" />
                              <Key frame="170" value="0.2648" />
                              <Key frame="190" value="0.264" />
                              <Key frame="204" value="0.13" />
                              <Key frame="219" value="0.678" />
                              <Key frame="229" value="0.3" />
                              <Key frame="239" value="0.6784" />
                              <Key frame="251" value="0.3" />
                              <Key frame="262" value="0.678" />
                              <Key frame="272" value="0.3" />
                              <Key frame="282" value="0.6784" />
                              <Key frame="294" value="0.3" />
                              <Key frame="303" value="0.678" />
                              <Key frame="313" value="0.3" />
                              <Key frame="323" value="0.6784" />
                              <Key frame="335" value="0.3" />
                              <Key frame="345" value="0.678" />
                              <Key frame="355" value="0.3" />
                              <Key frame="365" value="0.6784" />
                              <Key frame="377" value="0.3" />
                              <Key frame="398" value="0.2968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="23" value="52.4738" />
                              <Key frame="44" value="-68.2895" />
                              <Key frame="64" value="57.0441" />
                              <Key frame="87" value="-68.2895" />
                              <Key frame="107" value="57.0441" />
                              <Key frame="129" value="-68.2895" />
                              <Key frame="149" value="57.0441" />
                              <Key frame="172" value="-68.2895" />
                              <Key frame="192" value="57.0441" />
                              <Key frame="204" value="69.6" />
                              <Key frame="217" value="100.106" />
                              <Key frame="237" value="106.347" />
                              <Key frame="260" value="100.106" />
                              <Key frame="280" value="106.347" />
                              <Key frame="301" value="100.106" />
                              <Key frame="321" value="106.347" />
                              <Key frame="343" value="100.106" />
                              <Key frame="363" value="106.347" />
                              <Key frame="386" value="67.9" />
                              <Key frame="396" value="84.3785" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="23" value="-15.2956" />
                              <Key frame="34" value="-38.4" />
                              <Key frame="44" value="-18.8112" />
                              <Key frame="54" value="-34.1" />
                              <Key frame="64" value="18" />
                              <Key frame="76" value="-34.1" />
                              <Key frame="87" value="-18.8112" />
                              <Key frame="97" value="-34.1" />
                              <Key frame="107" value="18" />
                              <Key frame="119" value="-34.1" />
                              <Key frame="129" value="-18.8112" />
                              <Key frame="139" value="-34.1" />
                              <Key frame="149" value="18" />
                              <Key frame="161" value="-34.1" />
                              <Key frame="172" value="-18.8112" />
                              <Key frame="182" value="-34.1" />
                              <Key frame="192" value="18" />
                              <Key frame="204" value="-9.5" />
                              <Key frame="217" value="-13.8845" />
                              <Key frame="237" value="-11.2477" />
                              <Key frame="260" value="-13.8845" />
                              <Key frame="280" value="-11.2477" />
                              <Key frame="301" value="-13.8845" />
                              <Key frame="321" value="-11.2477" />
                              <Key frame="343" value="-13.8845" />
                              <Key frame="363" value="-11.2477" />
                              <Key frame="378" value="-26.1" />
                              <Key frame="396" value="-9.40682" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="23" value="34.0996" />
                              <Key frame="34" value="32.5" />
                              <Key frame="44" value="-48.7823" />
                              <Key frame="54" value="-4.3" />
                              <Key frame="64" value="-0.090296" />
                              <Key frame="76" value="-26.4" />
                              <Key frame="87" value="-48.7823" />
                              <Key frame="97" value="-4.3" />
                              <Key frame="107" value="-0.090296" />
                              <Key frame="119" value="-26.4" />
                              <Key frame="129" value="-48.7823" />
                              <Key frame="139" value="-4.3" />
                              <Key frame="149" value="-0.090296" />
                              <Key frame="161" value="-26.4" />
                              <Key frame="172" value="-48.7823" />
                              <Key frame="182" value="-4.3" />
                              <Key frame="192" value="-0.090296" />
                              <Key frame="204" value="94.9" />
                              <Key frame="217" value="21.7996" />
                              <Key frame="237" value="35.4228" />
                              <Key frame="260" value="21.7996" />
                              <Key frame="280" value="35.4228" />
                              <Key frame="301" value="21.7996" />
                              <Key frame="321" value="35.4228" />
                              <Key frame="343" value="21.7996" />
                              <Key frame="363" value="35.4228" />
                              <Key frame="378" value="90.5" />
                              <Key frame="386" value="59.2" />
                              <Key frame="396" value="69.3442" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="23" value="77.1713" />
                              <Key frame="34" value="64.2" />
                              <Key frame="44" value="7.91266" />
                              <Key frame="54" value="75" />
                              <Key frame="64" value="14.7682" />
                              <Key frame="76" value="83.6" />
                              <Key frame="87" value="7.91266" />
                              <Key frame="97" value="75" />
                              <Key frame="107" value="14.7682" />
                              <Key frame="119" value="83.6" />
                              <Key frame="129" value="7.91266" />
                              <Key frame="139" value="75" />
                              <Key frame="149" value="14.7682" />
                              <Key frame="161" value="83.6" />
                              <Key frame="172" value="7.91266" />
                              <Key frame="182" value="75" />
                              <Key frame="192" value="14.7682" />
                              <Key frame="204" value="88.5" />
                              <Key frame="217" value="21.1795" />
                              <Key frame="237" value="11.5993" />
                              <Key frame="260" value="21.1795" />
                              <Key frame="280" value="11.5993" />
                              <Key frame="301" value="21.1795" />
                              <Key frame="321" value="11.5993" />
                              <Key frame="343" value="21.1795" />
                              <Key frame="363" value="11.5993" />
                              <Key frame="378" value="47.1" />
                              <Key frame="386" value="50.8" />
                              <Key frame="396" value="24.6121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="23" value="-23.03" />
                              <Key frame="34" value="79.8" />
                              <Key frame="44" value="6.15002" />
                              <Key frame="64" value="22.9373" />
                              <Key frame="87" value="6.15002" />
                              <Key frame="107" value="22.9373" />
                              <Key frame="129" value="6.15002" />
                              <Key frame="149" value="22.9373" />
                              <Key frame="172" value="6.15002" />
                              <Key frame="192" value="22.9373" />
                              <Key frame="217" value="22.6785" />
                              <Key frame="237" value="24.0847" />
                              <Key frame="260" value="22.6785" />
                              <Key frame="280" value="24.0847" />
                              <Key frame="301" value="22.6785" />
                              <Key frame="321" value="24.0847" />
                              <Key frame="343" value="22.6785" />
                              <Key frame="363" value="24.0847" />
                              <Key frame="396" value="6.2379" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="23" value="0.2" />
                              <Key frame="34" value="0.5" />
                              <Key frame="44" value="0.678" />
                              <Key frame="54" value="0.3" />
                              <Key frame="64" value="0.6784" />
                              <Key frame="76" value="0.3" />
                              <Key frame="87" value="0.678" />
                              <Key frame="97" value="0.3" />
                              <Key frame="107" value="0.6784" />
                              <Key frame="119" value="0.3" />
                              <Key frame="129" value="0.678" />
                              <Key frame="139" value="0.3" />
                              <Key frame="149" value="0.6784" />
                              <Key frame="161" value="0.3" />
                              <Key frame="172" value="0.678" />
                              <Key frame="182" value="0.3" />
                              <Key frame="192" value="0.6784" />
                              <Key frame="204" value="0.13" />
                              <Key frame="217" value="0.2648" />
                              <Key frame="237" value="0.264" />
                              <Key frame="260" value="0.2648" />
                              <Key frame="280" value="0.264" />
                              <Key frame="301" value="0.2648" />
                              <Key frame="321" value="0.264" />
                              <Key frame="343" value="0.2648" />
                              <Key frame="363" value="0.264" />
                              <Key frame="386" value="0.24" />
                              <Key frame="396" value="0.2976" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="18" value="-25.3983" />
                              <Key frame="40" value="-21.3553" />
                              <Key frame="60" value="-20.4764" />
                              <Key frame="83" value="-21.3553" />
                              <Key frame="103" value="-20.4764" />
                              <Key frame="125" value="-21.3553" />
                              <Key frame="145" value="-20.4764" />
                              <Key frame="168" value="-21.3553" />
                              <Key frame="188" value="-20.4764" />
                              <Key frame="215" value="-21.3553" />
                              <Key frame="235" value="-20.4764" />
                              <Key frame="258" value="-21.3553" />
                              <Key frame="278" value="-20.4764" />
                              <Key frame="299" value="-21.3553" />
                              <Key frame="319" value="-20.4764" />
                              <Key frame="341" value="-21.3553" />
                              <Key frame="361" value="-20.4764" />
                              <Key frame="394" value="-9.75358" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="18" value="0.266079" />
                              <Key frame="40" value="-8.25942" />
                              <Key frame="60" value="18.8991" />
                              <Key frame="83" value="-8.25942" />
                              <Key frame="103" value="18.8991" />
                              <Key frame="125" value="-8.25942" />
                              <Key frame="145" value="18.8991" />
                              <Key frame="168" value="-8.25942" />
                              <Key frame="188" value="18.8991" />
                              <Key frame="215" value="17.0486" />
                              <Key frame="235" value="-8.08844" />
                              <Key frame="258" value="17.0486" />
                              <Key frame="278" value="-8.08844" />
                              <Key frame="299" value="17.0486" />
                              <Key frame="319" value="-8.08844" />
                              <Key frame="341" value="17.0486" />
                              <Key frame="361" value="-8.08844" />
                              <Key frame="394" value="5.89115" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="18" value="-8.78677" />
                              <Key frame="40" value="10.6373" />
                              <Key frame="60" value="8.44001" />
                              <Key frame="83" value="10.6373" />
                              <Key frame="103" value="8.44001" />
                              <Key frame="125" value="10.6373" />
                              <Key frame="145" value="8.44001" />
                              <Key frame="168" value="10.6373" />
                              <Key frame="188" value="8.44001" />
                              <Key frame="215" value="5.79845" />
                              <Key frame="235" value="14.8513" />
                              <Key frame="258" value="5.79845" />
                              <Key frame="278" value="14.8513" />
                              <Key frame="299" value="5.79845" />
                              <Key frame="319" value="14.8513" />
                              <Key frame="341" value="5.79845" />
                              <Key frame="361" value="14.8513" />
                              <Key frame="394" value="8.00056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="18" value="23.201" />
                              <Key frame="40" value="-5.18802" />
                              <Key frame="60" value="-4.57277" />
                              <Key frame="83" value="-5.18802" />
                              <Key frame="103" value="-4.57277" />
                              <Key frame="125" value="-5.18802" />
                              <Key frame="145" value="-4.57277" />
                              <Key frame="168" value="-5.18802" />
                              <Key frame="188" value="-4.57277" />
                              <Key frame="215" value="-5.18321" />
                              <Key frame="235" value="-5.18321" />
                              <Key frame="258" value="-5.18321" />
                              <Key frame="278" value="-5.18321" />
                              <Key frame="299" value="-5.18321" />
                              <Key frame="319" value="-5.18321" />
                              <Key frame="341" value="-5.18321" />
                              <Key frame="361" value="-5.18321" />
                              <Key frame="394" value="-4.48488" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="18" value="-2.63916" />
                              <Key frame="40" value="2.54646" />
                              <Key frame="60" value="9.22623" />
                              <Key frame="83" value="2.54646" />
                              <Key frame="103" value="9.22623" />
                              <Key frame="125" value="2.54646" />
                              <Key frame="145" value="9.22623" />
                              <Key frame="168" value="2.54646" />
                              <Key frame="188" value="9.22623" />
                              <Key frame="215" value="5.27591" />
                              <Key frame="235" value="4.74856" />
                              <Key frame="258" value="5.27591" />
                              <Key frame="278" value="4.74856" />
                              <Key frame="299" value="5.27591" />
                              <Key frame="319" value="4.74856" />
                              <Key frame="341" value="5.27591" />
                              <Key frame="361" value="4.74856" />
                              <Key frame="394" value="5.00743" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="18" value="-1.0523" />
                              <Key frame="40" value="3.60597" />
                              <Key frame="60" value="-14.2361" />
                              <Key frame="83" value="3.60597" />
                              <Key frame="103" value="-14.2361" />
                              <Key frame="125" value="3.60597" />
                              <Key frame="145" value="-14.2361" />
                              <Key frame="168" value="3.60597" />
                              <Key frame="188" value="-14.2361" />
                              <Key frame="215" value="-15.1198" />
                              <Key frame="235" value="5.18321" />
                              <Key frame="258" value="-15.1198" />
                              <Key frame="278" value="5.18321" />
                              <Key frame="299" value="-15.1198" />
                              <Key frame="319" value="5.18321" />
                              <Key frame="341" value="-15.1198" />
                              <Key frame="361" value="5.18321" />
                              <Key frame="394" value="-6.94104" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="18" value="-6.85315" />
                              <Key frame="40" value="-17.0486" />
                              <Key frame="60" value="8.08844" />
                              <Key frame="83" value="-17.0486" />
                              <Key frame="103" value="8.08844" />
                              <Key frame="125" value="-17.0486" />
                              <Key frame="145" value="8.08844" />
                              <Key frame="168" value="-17.0486" />
                              <Key frame="188" value="8.08844" />
                              <Key frame="215" value="8.25942" />
                              <Key frame="235" value="-18.8991" />
                              <Key frame="258" value="8.25942" />
                              <Key frame="278" value="-18.8991" />
                              <Key frame="299" value="8.25942" />
                              <Key frame="319" value="-18.8991" />
                              <Key frame="341" value="8.25942" />
                              <Key frame="361" value="-18.8991" />
                              <Key frame="394" value="-5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="18" value="-10.1978" />
                              <Key frame="40" value="5.79845" />
                              <Key frame="60" value="14.8513" />
                              <Key frame="83" value="5.79845" />
                              <Key frame="103" value="14.8513" />
                              <Key frame="125" value="5.79845" />
                              <Key frame="145" value="14.8513" />
                              <Key frame="168" value="5.79845" />
                              <Key frame="188" value="14.8513" />
                              <Key frame="215" value="10.6373" />
                              <Key frame="235" value="8.44001" />
                              <Key frame="258" value="10.6373" />
                              <Key frame="278" value="8.44001" />
                              <Key frame="299" value="10.6373" />
                              <Key frame="319" value="8.44001" />
                              <Key frame="341" value="10.6373" />
                              <Key frame="361" value="8.44001" />
                              <Key frame="394" value="7.55628" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="18" value="24.4363" />
                              <Key frame="40" value="-5.18321" />
                              <Key frame="60" value="-5.18321" />
                              <Key frame="83" value="-5.18321" />
                              <Key frame="103" value="-5.18321" />
                              <Key frame="125" value="-5.18321" />
                              <Key frame="145" value="-5.18321" />
                              <Key frame="168" value="-5.18321" />
                              <Key frame="188" value="-5.18321" />
                              <Key frame="215" value="-5.18802" />
                              <Key frame="235" value="-4.57277" />
                              <Key frame="258" value="-5.18802" />
                              <Key frame="278" value="-4.57277" />
                              <Key frame="299" value="-5.18802" />
                              <Key frame="319" value="-4.57277" />
                              <Key frame="341" value="-5.18802" />
                              <Key frame="361" value="-4.57277" />
                              <Key frame="394" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="18" value="-2.98591" />
                              <Key frame="40" value="5.27591" />
                              <Key frame="60" value="4.74856" />
                              <Key frame="83" value="5.27591" />
                              <Key frame="103" value="4.74856" />
                              <Key frame="125" value="5.27591" />
                              <Key frame="145" value="4.74856" />
                              <Key frame="168" value="5.27591" />
                              <Key frame="188" value="4.74856" />
                              <Key frame="215" value="2.54646" />
                              <Key frame="235" value="9.22623" />
                              <Key frame="258" value="2.54646" />
                              <Key frame="278" value="9.22623" />
                              <Key frame="299" value="2.54646" />
                              <Key frame="319" value="9.22623" />
                              <Key frame="341" value="2.54646" />
                              <Key frame="361" value="9.22623" />
                              <Key frame="394" value="5.3638" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="18" value="5.53958" />
                              <Key frame="40" value="15.1198" />
                              <Key frame="60" value="-5.18321" />
                              <Key frame="83" value="15.1198" />
                              <Key frame="103" value="-5.18321" />
                              <Key frame="125" value="15.1198" />
                              <Key frame="145" value="-5.18321" />
                              <Key frame="168" value="15.1198" />
                              <Key frame="188" value="-5.18321" />
                              <Key frame="215" value="-3.60597" />
                              <Key frame="235" value="14.2361" />
                              <Key frame="258" value="-3.60597" />
                              <Key frame="278" value="14.2361" />
                              <Key frame="299" value="-3.60597" />
                              <Key frame="319" value="14.2361" />
                              <Key frame="341" value="-3.60597" />
                              <Key frame="361" value="14.2361" />
                              <Key frame="394" value="6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="40" value="-21.3553" />
                              <Key frame="83" value="-21.3553" />
                              <Key frame="125" value="-21.3553" />
                              <Key frame="168" value="-21.3553" />
                              <Key frame="215" value="-21.3553" />
                              <Key frame="258" value="-21.3553" />
                              <Key frame="299" value="-21.3553" />
                              <Key frame="341" value="-21.3553" />
                              <Key frame="394" value="-9.75358" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Box name="_甩手臂" id="16" localization="8" tooltip="" x="376" y="965">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="D甩左手" id="13" localization="8" tooltip="This box is empty (contains a single motion layer with no motors defined in it) and should be used to create any movement you&apos;d like." x="385" y="54">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
	def __init__(self):
		GeneratedClass.__init__(self)

	def onUnload(self):
		#puts code for box cleanup here
		""

	def onInput_onStart(self):
		#self.onStopped() # activate output of the box
		""

	def onInput_onStop(self):
		""]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="15" start_frame="1" end_frame="-1" size="65">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="-1">
                                        <Key frame="19" value="0.437054" />
                                        <Key frame="53" value="0.437054" />
                                        <Key frame="65" value="0.437054" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="-1">
                                        <Key frame="19" value="-0.705538" />
                                        <Key frame="53" value="0.349163" />
                                        <Key frame="65" value="0.349163" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="87.7135" />
                                        <Key frame="41" value="10.2809" />
                                        <Key frame="53" value="97.8211" />
                                        <Key frame="65" value="97.8211" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="2.28278" />
                                        <Key frame="41" value="0" />
                                        <Key frame="53" value="77.6939" />
                                        <Key frame="65" value="76.9908" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-98.4411" />
                                        <Key frame="41" value="-74.2709" />
                                        <Key frame="53" value="-12.3951" />
                                        <Key frame="65" value="-12.3951" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-84.6373" />
                                        <Key frame="41" value="-89.2077" />
                                        <Key frame="53" value="-0.612838" />
                                        <Key frame="65" value="-0.612838" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="-1">
                                        <Key frame="19" value="-15.9108" />
                                        <Key frame="53" value="-16.6139" />
                                        <Key frame="65" value="-16.6139" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="-1">
                                        <Key frame="19" value="0.997114" />
                                        <Key frame="53" value="0.995296" />
                                        <Key frame="65" value="0.995296" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="-1">
                                        <Key frame="19" value="0.266079" />
                                        <Key frame="41" value="118.744" />
                                        <Key frame="53" value="89.8278" />
                                        <Key frame="65" value="89.8278" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-6.77007" />
                                        <Key frame="41" value="-8.87947" />
                                        <Key frame="53" value="-10.4615" />
                                        <Key frame="65" value="-10.4615" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="-1">
                                        <Key frame="19" value="87.0983" />
                                        <Key frame="41" value="82.7916" />
                                        <Key frame="53" value="95.0086" />
                                        <Key frame="65" value="94.9207" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="-1">
                                        <Key frame="19" value="83.8511" />
                                        <Key frame="41" value="89.5641" />
                                        <Key frame="53" value="88.3336" />
                                        <Key frame="65" value="88.3336" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="-1">
                                        <Key frame="19" value="23.3768" />
                                        <Key frame="53" value="23.5526" />
                                        <Key frame="65" value="23.5526" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="-1">
                                        <Key frame="19" value="1" />
                                        <Key frame="53" value="1" />
                                        <Key frame="65" value="1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="-1">
                                        <Key frame="19" value="-41.839" />
                                        <Key frame="30" value="-42.3663" />
                                        <Key frame="53" value="-27.9521" />
                                        <Key frame="65" value="-27.9521" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="-1">
                                        <Key frame="19" value="3.32888" />
                                        <Key frame="30" value="4.2078" />
                                        <Key frame="53" value="-8.36072" />
                                        <Key frame="65" value="-8.36072" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.2706" />
                                        <Key frame="30" value="9.30383" />
                                        <Key frame="53" value="-13.8117" />
                                        <Key frame="65" value="-13.8117" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.6166" />
                                        <Key frame="30" value="9.73765" />
                                        <Key frame="53" value="9.56187" />
                                        <Key frame="65" value="9.56187" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="-1">
                                        <Key frame="19" value="10.9765" />
                                        <Key frame="30" value="11.7676" />
                                        <Key frame="53" value="10.5371" />
                                        <Key frame="65" value="10.5371" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="-1">
                                        <Key frame="19" value="3.78051" />
                                        <Key frame="30" value="3.51684" />
                                        <Key frame="53" value="-0.614074" />
                                        <Key frame="65" value="-0.614074" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="-1">
                                        <Key frame="19" value="-8.52433" />
                                        <Key frame="30" value="-8.788" />
                                        <Key frame="53" value="-14.7646" />
                                        <Key frame="65" value="-14.7646" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="-1">
                                        <Key frame="19" value="28.0342" />
                                        <Key frame="30" value="28.1221" />
                                        <Key frame="53" value="-15.9996" />
                                        <Key frame="65" value="-15.9996" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="-1">
                                        <Key frame="19" value="27.3106" />
                                        <Key frame="30" value="26.0801" />
                                        <Key frame="53" value="1.11886" />
                                        <Key frame="65" value="1.11886" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="-1">
                                        <Key frame="19" value="-23.5565" />
                                        <Key frame="30" value="-23.0292" />
                                        <Key frame="53" value="20.2135" />
                                        <Key frame="65" value="20.2135" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="-1">
                                        <Key frame="19" value="1.848" />
                                        <Key frame="30" value="1.93589" />
                                        <Key frame="53" value="14.2407" />
                                        <Key frame="65" value="14.2407" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                </Box>
                                <Box name="S抬手臂" id="11" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="262" y="53">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="StandZero" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Box name="S站" id="12" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="131" y="43">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Box name="GoToStance_Exclamation_Center" id="24" localization="8" tooltip="ID : #01F 9991&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Transition&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="513" y="53">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="26">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="11" value="0" />
                                        <Key frame="24" value="-8.61579" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="24" value="-2.90283" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="11" value="-5.2" />
                                        <Key frame="24" value="3.3" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="24" value="-7.11683" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="12" value="-54.5" />
                                        <Key frame="23" value="-84.8" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="12" value="-103.9" />
                                        <Key frame="23" value="-92.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="12" value="0.83" />
                                        <Key frame="23" value="0.01" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="11" value="-12.4782" />
                                        <Key frame="24" value="8.26423" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="24" value="5.3638" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="11" value="-11.072" />
                                        <Key frame="24" value="-9.48991" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="11" value="23.992" />
                                        <Key frame="24" value="-4.92435" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="12" value="62.8" />
                                        <Key frame="23" value="97.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="12" value="15.3" />
                                        <Key frame="23" value="-2.2" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="12" value="-71.3" />
                                        <Key frame="23" value="-79.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="11" value="-5.2" />
                                        <Key frame="24" value="3.3" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="24" value="6.77007" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="10" value="54.5" />
                                        <Key frame="26" value="84.8" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="10" value="103.9" />
                                        <Key frame="26" value="92.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="10" value="0.83" />
                                        <Key frame="26" value="0.01" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="11" value="-15.3835" />
                                        <Key frame="24" value="7.46839" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="24" value="-5.2711" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="11" value="-11.072" />
                                        <Key frame="24" value="-9.48991" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="11" value="24.8758" />
                                        <Key frame="24" value="-5.00743" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="10" value="64.5" />
                                        <Key frame="26" value="97.1" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="10" value="-15.3" />
                                        <Key frame="26" value="2.2" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="10" value="71.3" />
                                        <Key frame="26" value="79.1" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="13" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="24" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="12" indexofoutput="4" />
                                <Link inputowner="12" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="24" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_叉腰" id="19" localization="8" tooltip="" x="818" y="945">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="0">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram>
                                <Box name="WideHorizontalRightArm_LeanLeft_HeadShake_01" id="20" localization="8" tooltip="ID : #01D 0015&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Nope&#x0A;- Never&#x0A;- Negative&#x0A;- Forbiden&#x0A;- Oppose&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : RightArmOnHip&#x0A;End stance : LeanLeft" x="711" y="35">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="69">
                                    <ActuatorList model="nao">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="14" value="-4.74855" />
                                        <Key frame="57" value="5.97423" />
                                        <Key frame="65" value="-4.22121" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="14" value="12.3903" />
                                        <Key frame="18" value="-13.1" />
                                        <Key frame="22" value="20.1" />
                                        <Key frame="27" value="-13.1" />
                                        <Key frame="34" value="20.1" />
                                        <Key frame="41" value="-13.1" />
                                        <Key frame="50" value="20.1" />
                                        <Key frame="57" value="8.4352" />
                                        <Key frame="65" value="11.072" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="16" value="0.261268" />
                                        <Key frame="45" value="-7.29742" />
                                        <Key frame="56" value="-6.59429" />
                                        <Key frame="67" value="-0.178186" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="16" value="-2.54646" />
                                        <Key frame="45" value="-19.158" />
                                        <Key frame="67" value="0.0902951" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="18" value="-82.7037" />
                                        <Key frame="33" value="-82.7037" />
                                        <Key frame="49" value="-87.2741" />
                                        <Key frame="58" value="-77.1946" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-2.83595" ordinateParam="-3.80419" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.46616" ordinateParam="4.64955" />
                                        </Key>
                                        <Key frame="69" value="-35.2422" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="18" value="-30.5008" />
                                        <Key frame="33" value="-30.5008" />
                                        <Key frame="49" value="-30.9403" />
                                        <Key frame="58" value="-83.5874" />
                                        <Key frame="69" value="-78.6655" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="18" value="0.0224" />
                                        <Key frame="33" value="0.0224" />
                                        <Key frame="49" value="0.034" />
                                        <Key frame="58" value="0.1008" />
                                        <Key frame="69" value="0.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="16" value="10.9889" />
                                        <Key frame="45" value="-0.261268" />
                                        <Key frame="56" value="-3.33748" />
                                        <Key frame="67" value="19.3386" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="16" value="1.32078" />
                                        <Key frame="45" value="25.491" />
                                        <Key frame="67" value="-1.0523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="16" value="-13.8845" />
                                        <Key frame="45" value="-14.9392" />
                                        <Key frame="56" value="-16.9607" />
                                        <Key frame="67" value="-15.115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="16" value="0.700723" />
                                        <Key frame="45" value="17.9275" />
                                        <Key frame="56" value="18.4549" />
                                        <Key frame="67" value="-5.29" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="18" value="118.651" />
                                        <Key frame="33" value="118.651" />
                                        <Key frame="49" value="119.179" />
                                        <Key frame="58" value="100.546" />
                                        <Key frame="69" value="98.7879" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="18" value="43.6798" />
                                        <Key frame="33" value="43.6798" />
                                        <Key frame="49" value="47.1076" />
                                        <Key frame="69" value="7.29261" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="18" value="50.6232" />
                                        <Key frame="33" value="50.6232" />
                                        <Key frame="49" value="64.9496" />
                                        <Key frame="58" value="-38.4111" />
                                        <Key frame="69" value="-6.06693" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="16" value="-0.964409" />
                                        <Key frame="45" value="-2.37068" />
                                        <Key frame="56" value="-6.50159" />
                                        <Key frame="67" value="-1.57965" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="16" value="7.4732" />
                                        <Key frame="45" value="-7.73207" />
                                        <Key frame="67" value="10.6373" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="16" value="77.4" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-6.03465" ordinateParam="8.78744" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="5.65748" ordinateParam="-8.23822" />
                                        </Key>
                                        <Key frame="31" value="18.3" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-5.70131" ordinateParam="14.2542" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="6.0814" ordinateParam="-15.2045" />
                                        </Key>
                                        <Key frame="47" value="2.55127" />
                                        <Key frame="56" value="55.1984" />
                                        <Key frame="67" value="33.7528" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="16" value="39.1" />
                                        <Key frame="47" value="37.791" />
                                        <Key frame="56" value="63.5433" />
                                        <Key frame="67" value="69.7836" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="16" value="0.86" />
                                        <Key frame="31" value="0.862" />
                                        <Key frame="47" value="0.8492" />
                                        <Key frame="56" value="0.0968" />
                                        <Key frame="67" value="0.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="16" value="8.4352" />
                                        <Key frame="45" value="9.22623" />
                                        <Key frame="56" value="-2.63916" />
                                        <Key frame="67" value="10.1051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="16" value="-6.94104" />
                                        <Key frame="45" value="15.735" />
                                        <Key frame="67" value="-10.2809" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="16" value="-13.8845" />
                                        <Key frame="45" value="-14.9392" />
                                        <Key frame="56" value="-16.9607" />
                                        <Key frame="67" value="-15.115" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="16" value="4.13332" />
                                        <Key frame="45" value="4.3091" />
                                        <Key frame="56" value="18.1081" />
                                        <Key frame="67" value="4.13332" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="16" value="37" />
                                        <Key frame="31" value="30.1" />
                                        <Key frame="67" value="91.1461" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="16" value="14.7" />
                                        <Key frame="47" value="-22.4148" />
                                        <Key frame="56" value="-12.2194" />
                                        <Key frame="67" value="-8.17634" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="16" value="-26.4" />
                                        <Key frame="31" value="-25.4031" />
                                        <Key frame="47" value="7.02893" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-5.03277" ordinateParam="-15.5454" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="2.83093" ordinateParam="8.7443" />
                                        </Key>
                                        <Key frame="56" value="32.6933" />
                                        <Key frame="67" value="14.3239" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="OpenArmInFrontWithBump_01" id="13" localization="8" tooltip="ID : #01B 0005&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- You&#x0A;- Yourslef&#x0A;- Yours&#x0A;- Everybody&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="310" y="29">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="12" value="1.2" />
                                        <Key frame="21" value="-8.9" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="21" value="0" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-5.01224" />
                                        <Key frame="25" value="4.8735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="-7.02893" />
                                        <Key frame="25" value="-6.95974" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="14" value="-57.303" />
                                        <Key frame="23" value="-23.7372" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="14" value="-73.8315" />
                                        <Key frame="23" value="-94.6534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="14" value="0.3168" />
                                        <Key frame="23" value="0.72" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-3.42537" />
                                        <Key frame="25" value="7.07525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="5.3638" />
                                        <Key frame="25" value="5.66523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.654" />
                                        <Key frame="25" value="-9.74028" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="14.6755" />
                                        <Key frame="25" value="-4.64829" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="14" value="52.6447" />
                                        <Key frame="23" value="45.9525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="14" value="8.17153" />
                                        <Key frame="23" value="14.4939" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="14" value="-53.7042" />
                                        <Key frame="23" value="-70.0963" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="14" value="-2.98591" />
                                        <Key frame="25" value="4.8735" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="14" value="6.3306" />
                                        <Key frame="25" value="6.95974" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="12" value="62.4055" />
                                        <Key frame="21" value="23.8086" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="12" value="83.5826" />
                                        <Key frame="21" value="94.6534" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="12" value="0.024" />
                                        <Key frame="21" value="0.72" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="14" value="-4.66066" />
                                        <Key frame="25" value="7.07525" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="14" value="-5.97423" />
                                        <Key frame="25" value="-5.66523" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="14" value="-12.654" />
                                        <Key frame="25" value="-9.74028" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="14" value="14.8561" />
                                        <Key frame="25" value="-4.64829" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="12" value="32.6981" />
                                        <Key frame="21" value="27.9395" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="12" value="-4.13332" />
                                        <Key frame="21" value="-14.4939" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="12" value="45.4376" />
                                        <Key frame="21" value="70.1928" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="PointAtSelfRightArm_01" id="11" localization="8" tooltip="ID : #01B 0007&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- Myself&#x0A;- I&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Flex&#x0A;End stance : Center" x="480" y="37">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram />
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="13" value="12.1267" />
                                        <Key frame="23" value="-6.85796" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                                        <Key frame="12" value="-9.58261" />
                                        <Key frame="22" value="-5.27591" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                                        <Key frame="12" value="-4.56796" />
                                        <Key frame="22" value="-4.2164" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="15" value="-53.3" />
                                        <Key frame="25" value="-27.6835" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="15" value="-70.4" />
                                        <Key frame="25" value="-73.392" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="15" value="0.19" />
                                        <Key frame="25" value="0.6624" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                                        <Key frame="12" value="-3.95273" />
                                        <Key frame="22" value="2.72705" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                                        <Key frame="12" value="6.68218" />
                                        <Key frame="22" value="4.83644" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                                        <Key frame="12" value="-11.6872" />
                                        <Key frame="22" value="-9.66569" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                                        <Key frame="12" value="24.6073" />
                                        <Key frame="22" value="12.4782" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="15" value="76.5" />
                                        <Key frame="25" value="86.5709" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="15" value="12.8" />
                                        <Key frame="25" value="11.1598" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="15" value="-45.7061" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.7632" ordinateParam="-15.8836" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.17547" ordinateParam="10.5891" />
                                        </Key>
                                        <Key frame="25" value="-21.7117" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.30702" ordinateParam="-5.02698" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                        </Key>
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                                        <Key frame="12" value="-5.79845" />
                                        <Key frame="22" value="2.02391" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                                        <Key frame="12" value="3.43018" />
                                        <Key frame="22" value="-0.0854867" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="13" value="49.3" />
                                        <Key frame="23" value="88.5" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="13" value="61.346" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.21391" ordinateParam="20.6006" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="2.47225" ordinateParam="-15.8466" />
                                        </Key>
                                        <Key frame="23" value="21.5311" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="13" value="1" />
                                        <Key frame="23" value="0.45" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                                        <Key frame="12" value="1.93121" />
                                        <Key frame="22" value="10.9841" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                                        <Key frame="12" value="-0.173378" />
                                        <Key frame="22" value="2.37549" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                                        <Key frame="12" value="-11.6872" />
                                        <Key frame="22" value="-9.66569" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                                        <Key frame="12" value="15.1198" />
                                        <Key frame="22" value="-2.28279" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="13" value="55.9894" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.96019" ordinateParam="7.95114" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.0463" ordinateParam="-6.11625" />
                                        </Key>
                                        <Key frame="23" value="40.8721" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="13" value="-2.11181" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.33333" ordinateParam="-6.39629" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="4.92023" />
                                        </Key>
                                        <Key frame="23" value="9.31412" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="13" value="60.2913" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-4.24005" ordinateParam="7.72419" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="3.26158" ordinateParam="-5.94168" />
                                        </Key>
                                        <Key frame="23" value="48.338" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Box name="BothHandsBumpWithBump_01" id="18" localization="8" tooltip="ID : #01B 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- You&#x0A;- Yourself&#x0A;- Yours&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="128" y="26">
                                  <bitmap>media/images/box/movement/move.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                                  <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="29">
                                    <ActuatorList model="">
                                      <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                                        <Key frame="10" value="-14.153" />
                                        <Key frame="16" value="6.5" />
                                        <Key frame="25" value="-14.153" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                                        <Key frame="10" value="-10.1978" />
                                        <Key frame="25" value="-10.1978" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                                        <Key frame="11" value="-68.5" />
                                        <Key frame="19" value="-53" />
                                        <Key frame="29" value="-56.8635" smooth="1" symmetrical="1">
                                          <Tangent side="left" interpType="bezier" abscissaParam="-3.287" ordinateParam="3.82525" />
                                          <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                                        </Key>
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                                        <Key frame="29" value="-52.3859" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                                        <Key frame="11" value="0.19" />
                                        <Key frame="19" value="0.55" />
                                        <Key frame="29" value="0.1956" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                                        <Key frame="29" value="71.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                                        <Key frame="19" value="5.3" />
                                        <Key frame="29" value="-4.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                                        <Key frame="19" value="-51.8" />
                                        <Key frame="29" value="0.788627" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                                        <Key frame="11" value="68.5" />
                                        <Key frame="19" value="53" />
                                        <Key frame="29" value="59.5051" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                                        <Key frame="29" value="44.5587" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                                        <Key frame="11" value="0.19" />
                                        <Key frame="19" value="0.55" />
                                        <Key frame="29" value="0.2052" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                                        <Key frame="29" value="71.4" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                                        <Key frame="19" value="-5.3" />
                                        <Key frame="29" value="4.7" />
                                      </ActuatorCurve>
                                      <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                                        <Key frame="19" value="51.8" />
                                        <Key frame="29" value="17.6638" />
                                      </ActuatorCurve>
                                    </ActuatorList>
                                  </Timeline>
                                  <Resource name="Standing" type="Lock" timeout="1" />
                                  <Resource name="All motors" type="Lock" timeout="1" />
                                </Box>
                                <Link inputowner="13" indexofinput="2" outputowner="18" indexofoutput="4" />
                                <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="4" />
                                <Link inputowner="20" indexofinput="2" outputowner="11" indexofoutput="4" />
                                <Link inputowner="18" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="20" indexofoutput="4" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                      </Box>
                      <Box name="_锻炼动作组" id="11" localization="8" tooltip="This box is empty (contains a single motion layer with no motor position&#x0A;defined in it) and should be used to create any animation you would like." x="177" y="964">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="401">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe3" index="3">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="nao">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="25" value="-8.96736" />
                              <Key frame="44" value="-7.82477" />
                              <Key frame="73" value="-7.82477" />
                              <Key frame="96" value="-7.82477" />
                              <Key frame="114" value="-7.82477" />
                              <Key frame="128" value="-7.82477" />
                              <Key frame="143" value="-7.82477" />
                              <Key frame="158" value="-7.82477" />
                              <Key frame="187" value="-7.82477" />
                              <Key frame="213" value="-7.82477" />
                              <Key frame="236" value="-7.82477" />
                              <Key frame="253" value="-7.82477" />
                              <Key frame="282" value="-7.82477" />
                              <Key frame="308" value="-7.82477" />
                              <Key frame="338" value="-7.82477" />
                              <Key frame="364" value="-7.82477" />
                              <Key frame="401" value="-7.82477" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="25" value="-1.145" />
                              <Key frame="44" value="-0.353968" />
                              <Key frame="73" value="-0.266077" />
                              <Key frame="96" value="-0.353968" />
                              <Key frame="114" value="-0.266077" />
                              <Key frame="128" value="-0.266077" />
                              <Key frame="143" value="-0.353968" />
                              <Key frame="158" value="-0.353968" />
                              <Key frame="187" value="-0.266077" />
                              <Key frame="213" value="-0.353968" />
                              <Key frame="236" value="-0.353968" />
                              <Key frame="253" value="-0.353968" />
                              <Key frame="282" value="-0.353968" />
                              <Key frame="308" value="-0.353968" />
                              <Key frame="338" value="-0.353968" />
                              <Key frame="364" value="-0.353968" />
                              <Key frame="401" value="-0.353968" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-68.15" />
                              <Key frame="44" value="-68.1185" />
                              <Key frame="73" value="5.44688" />
                              <Key frame="96" value="5.44688" />
                              <Key frame="114" value="5.53478" />
                              <Key frame="128" value="5.44688" />
                              <Key frame="143" value="5.53478" />
                              <Key frame="158" value="5.53478" />
                              <Key frame="187" value="5.53478" />
                              <Key frame="213" value="5.53478" />
                              <Key frame="236" value="5.53478" />
                              <Key frame="253" value="5.44688" />
                              <Key frame="282" value="5.53478" />
                              <Key frame="308" value="5.53478" />
                              <Key frame="338" value="-68.1185" />
                              <Key frame="364" value="-68.15" />
                              <Key frame="401" value="5.53478" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="-2.89802" />
                              <Key frame="44" value="-2.81013" />
                              <Key frame="73" value="-6.58948" />
                              <Key frame="96" value="-6.58948" />
                              <Key frame="114" value="-6.67737" />
                              <Key frame="128" value="-6.67737" />
                              <Key frame="143" value="-6.67737" />
                              <Key frame="158" value="-6.67737" />
                              <Key frame="187" value="-6.67737" />
                              <Key frame="213" value="-6.58948" />
                              <Key frame="236" value="-6.58948" />
                              <Key frame="253" value="-6.67737" />
                              <Key frame="282" value="-6.67737" />
                              <Key frame="308" value="-6.58948" />
                              <Key frame="338" value="-2.81013" />
                              <Key frame="364" value="-2.89802" />
                              <Key frame="401" value="-6.67737" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="-22.7616" />
                              <Key frame="44" value="-22.8494" />
                              <Key frame="73" value="-22.0584" />
                              <Key frame="96" value="-87.6256" />
                              <Key frame="114" value="-22.7616" />
                              <Key frame="128" value="-87.6256" />
                              <Key frame="143" value="-13.6208" />
                              <Key frame="158" value="-79.8033" />
                              <Key frame="187" value="-21.3553" />
                              <Key frame="213" value="-53.26" />
                              <Key frame="236" value="-10.0173" />
                              <Key frame="253" value="-78.7486" />
                              <Key frame="282" value="-78.3091" />
                              <Key frame="308" value="-25.3104" />
                              <Key frame="338" value="-25.4862" />
                              <Key frame="364" value="-25.4862" />
                              <Key frame="401" value="-23.992" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="-77.3471" />
                              <Key frame="44" value="-78.5776" />
                              <Key frame="73" value="-98.7048" />
                              <Key frame="96" value="-87.191" />
                              <Key frame="114" value="-83.8511" />
                              <Key frame="128" value="-83.4117" />
                              <Key frame="143" value="-81.7417" />
                              <Key frame="158" value="-84.2906" />
                              <Key frame="187" value="-7.12163" />
                              <Key frame="213" value="-7.38531" />
                              <Key frame="236" value="-4.13332" />
                              <Key frame="253" value="-92.7282" />
                              <Key frame="282" value="-92.0251" />
                              <Key frame="308" value="-95.9802" />
                              <Key frame="338" value="-95.9802" />
                              <Key frame="364" value="-95.9802" />
                              <Key frame="401" value="-69.349" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="25" value="0.9576" />
                              <Key frame="44" value="0.0352" />
                              <Key frame="73" value="0.016" />
                              <Key frame="96" value="0.0268" />
                              <Key frame="114" value="0.0268" />
                              <Key frame="128" value="0.0268" />
                              <Key frame="143" value="0.0268" />
                              <Key frame="158" value="0.0268" />
                              <Key frame="187" value="0.0268" />
                              <Key frame="213" value="0.0268" />
                              <Key frame="236" value="0.0268" />
                              <Key frame="253" value="0.0268" />
                              <Key frame="282" value="0.0316" />
                              <Key frame="308" value="0.0316" />
                              <Key frame="338" value="0.0316" />
                              <Key frame="364" value="0.9616" />
                              <Key frame="401" value="0.6208" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.0781" />
                              <Key frame="44" value="-32.0781" />
                              <Key frame="73" value="7.73688" />
                              <Key frame="96" value="7.73688" />
                              <Key frame="114" value="7.73688" />
                              <Key frame="128" value="7.73688" />
                              <Key frame="143" value="7.73688" />
                              <Key frame="158" value="7.73688" />
                              <Key frame="187" value="7.73688" />
                              <Key frame="213" value="7.73688" />
                              <Key frame="236" value="7.73688" />
                              <Key frame="253" value="7.73688" />
                              <Key frame="282" value="7.73688" />
                              <Key frame="308" value="7.73688" />
                              <Key frame="338" value="-35.5059" />
                              <Key frame="364" value="-35.418" />
                              <Key frame="401" value="7.73688" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="25" value="9.40682" />
                              <Key frame="44" value="9.40682" />
                              <Key frame="73" value="6.59429" />
                              <Key frame="96" value="6.59429" />
                              <Key frame="114" value="6.59429" />
                              <Key frame="128" value="6.59429" />
                              <Key frame="143" value="6.59429" />
                              <Key frame="158" value="6.59429" />
                              <Key frame="187" value="6.59429" />
                              <Key frame="213" value="6.59429" />
                              <Key frame="236" value="6.59429" />
                              <Key frame="253" value="6.59429" />
                              <Key frame="282" value="6.68218" />
                              <Key frame="308" value="6.68218" />
                              <Key frame="338" value="7.12163" />
                              <Key frame="364" value="7.12163" />
                              <Key frame="401" value="6.68218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.18802" />
                              <Key frame="96" value="-5.18802" />
                              <Key frame="114" value="-5.18802" />
                              <Key frame="128" value="-5.27591" />
                              <Key frame="143" value="-5.18802" />
                              <Key frame="158" value="-5.18802" />
                              <Key frame="187" value="-5.18802" />
                              <Key frame="213" value="-5.18802" />
                              <Key frame="236" value="-5.18802" />
                              <Key frame="253" value="-5.27591" />
                              <Key frame="282" value="-5.18802" />
                              <Key frame="308" value="-5.18802" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.18802" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="97.4695" />
                              <Key frame="44" value="106.962" />
                              <Key frame="73" value="98.5242" />
                              <Key frame="96" value="57.8304" />
                              <Key frame="114" value="85.6041" />
                              <Key frame="128" value="62.4886" />
                              <Key frame="143" value="78.1333" />
                              <Key frame="158" value="59.764" />
                              <Key frame="187" value="-88.9488" />
                              <Key frame="213" value="-88.5973" />
                              <Key frame="236" value="-87.982" />
                              <Key frame="253" value="-7.4732" />
                              <Key frame="282" value="87.6256" />
                              <Key frame="308" value="103.446" />
                              <Key frame="338" value="104.765" />
                              <Key frame="364" value="104.677" />
                              <Key frame="401" value="88.153" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="22.6737" />
                              <Key frame="44" value="16.7849" />
                              <Key frame="73" value="13.0935" />
                              <Key frame="96" value="-0.529749" />
                              <Key frame="114" value="0.524941" />
                              <Key frame="128" value="-0.441859" />
                              <Key frame="143" value="0.43705" />
                              <Key frame="158" value="-2.1997" />
                              <Key frame="187" value="20.0369" />
                              <Key frame="213" value="59.6761" />
                              <Key frame="236" value="4.48007" />
                              <Key frame="253" value="10.193" />
                              <Key frame="282" value="7.81997" />
                              <Key frame="308" value="11.863" />
                              <Key frame="338" value="11.2477" />
                              <Key frame="364" value="11.2477" />
                              <Key frame="401" value="7.81997" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="25" value="-20.2175" />
                              <Key frame="44" value="-23.4695" />
                              <Key frame="73" value="4.83163" />
                              <Key frame="96" value="-93.3434" />
                              <Key frame="114" value="-93.8708" />
                              <Key frame="128" value="-92.3766" />
                              <Key frame="143" value="-92.6403" />
                              <Key frame="158" value="-97.5622" />
                              <Key frame="187" value="-27.4246" />
                              <Key frame="213" value="-27.4246" />
                              <Key frame="236" value="-33.3134" />
                              <Key frame="253" value="1.22808" />
                              <Key frame="282" value="1.14019" />
                              <Key frame="308" value="1.31597" />
                              <Key frame="338" value="1.22808" />
                              <Key frame="364" value="1.31597" />
                              <Key frame="401" value="4.39218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="25" value="-67.85" />
                              <Key frame="44" value="-67.9379" />
                              <Key frame="73" value="5.80326" />
                              <Key frame="96" value="5.71537" />
                              <Key frame="114" value="5.80326" />
                              <Key frame="128" value="5.71537" />
                              <Key frame="143" value="5.80326" />
                              <Key frame="158" value="5.80326" />
                              <Key frame="187" value="5.89115" />
                              <Key frame="213" value="5.71537" />
                              <Key frame="236" value="5.80326" />
                              <Key frame="253" value="5.62747" />
                              <Key frame="282" value="5.80326" />
                              <Key frame="308" value="5.80326" />
                              <Key frame="338" value="-67.97" />
                              <Key frame="364" value="-67.97" />
                              <Key frame="401" value="5.80326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="25" value="2.46338" />
                              <Key frame="44" value="2.46338" />
                              <Key frame="73" value="4.22121" />
                              <Key frame="96" value="4.22121" />
                              <Key frame="114" value="4.22121" />
                              <Key frame="128" value="4.22121" />
                              <Key frame="143" value="4.22121" />
                              <Key frame="158" value="4.22121" />
                              <Key frame="187" value="4.22121" />
                              <Key frame="213" value="4.22121" />
                              <Key frame="236" value="4.22121" />
                              <Key frame="253" value="4.22121" />
                              <Key frame="282" value="4.22121" />
                              <Key frame="308" value="4.22121" />
                              <Key frame="338" value="2.99072" />
                              <Key frame="364" value="2.90283" />
                              <Key frame="401" value="4.22121" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="25" value="19.8659" />
                              <Key frame="44" value="25.3152" />
                              <Key frame="73" value="25.3152" />
                              <Key frame="96" value="87.2789" />
                              <Key frame="114" value="87.3668" />
                              <Key frame="128" value="9.14314" />
                              <Key frame="143" value="85.9605" />
                              <Key frame="158" value="85.9605" />
                              <Key frame="187" value="17.7565" />
                              <Key frame="213" value="61.7024" />
                              <Key frame="236" value="2.1997" />
                              <Key frame="253" value="85.9605" />
                              <Key frame="282" value="78.3139" />
                              <Key frame="308" value="13.0104" />
                              <Key frame="338" value="13.1862" />
                              <Key frame="364" value="13.274" />
                              <Key frame="401" value="22.3269" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="25" value="87.1862" />
                              <Key frame="44" value="88.5046" />
                              <Key frame="73" value="72.5962" />
                              <Key frame="96" value="74.7935" />
                              <Key frame="114" value="74.8813" />
                              <Key frame="128" value="92.6355" />
                              <Key frame="143" value="90.3503" />
                              <Key frame="158" value="90.3503" />
                              <Key frame="187" value="43.2403" />
                              <Key frame="213" value="16.1697" />
                              <Key frame="236" value="18.0154" />
                              <Key frame="253" value="89.9987" />
                              <Key frame="282" value="84.901" />
                              <Key frame="308" value="90.5261" />
                              <Key frame="338" value="90.614" />
                              <Key frame="364" value="90.8776" />
                              <Key frame="401" value="67.5863" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="25" value="0.9432" />
                              <Key frame="44" value="0.0176001" />
                              <Key frame="73" value="0.0172" />
                              <Key frame="96" value="0.1056" />
                              <Key frame="114" value="0.1056" />
                              <Key frame="128" value="0.1056" />
                              <Key frame="143" value="0.1056" />
                              <Key frame="158" value="0.1056" />
                              <Key frame="187" value="0.1056" />
                              <Key frame="213" value="0.1056" />
                              <Key frame="236" value="0.1056" />
                              <Key frame="253" value="0.1056" />
                              <Key frame="282" value="0.1056" />
                              <Key frame="308" value="0.1056" />
                              <Key frame="338" value="0" />
                              <Key frame="364" value="0.9484" />
                              <Key frame="401" value="0.4912" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="25" value="-32.3466" />
                              <Key frame="44" value="-33" />
                              <Key frame="73" value="7.55628" />
                              <Key frame="96" value="7.55628" />
                              <Key frame="114" value="7.55628" />
                              <Key frame="128" value="7.55628" />
                              <Key frame="143" value="7.46839" />
                              <Key frame="158" value="7.55628" />
                              <Key frame="187" value="7.55628" />
                              <Key frame="213" value="7.55628" />
                              <Key frame="236" value="7.55628" />
                              <Key frame="253" value="7.55628" />
                              <Key frame="282" value="7.55628" />
                              <Key frame="308" value="7.55628" />
                              <Key frame="338" value="-35.6864" />
                              <Key frame="364" value="-35.6864" />
                              <Key frame="401" value="7.46839" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="25" value="-6.58948" />
                              <Key frame="44" value="-6.67737" />
                              <Key frame="73" value="-3.68905" />
                              <Key frame="96" value="-3.68905" />
                              <Key frame="114" value="-3.68905" />
                              <Key frame="128" value="-3.68905" />
                              <Key frame="143" value="-3.68905" />
                              <Key frame="158" value="-3.68905" />
                              <Key frame="187" value="-3.68905" />
                              <Key frame="213" value="-3.68905" />
                              <Key frame="236" value="-3.68905" />
                              <Key frame="253" value="-3.68905" />
                              <Key frame="282" value="-3.68905" />
                              <Key frame="308" value="-3.68905" />
                              <Key frame="338" value="-6.85315" />
                              <Key frame="364" value="-6.94104" />
                              <Key frame="401" value="-3.68905" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="25" value="-28.914" />
                              <Key frame="44" value="-28.914" />
                              <Key frame="73" value="-9.92936" />
                              <Key frame="96" value="-9.92936" />
                              <Key frame="114" value="-9.92936" />
                              <Key frame="128" value="-10.0173" />
                              <Key frame="143" value="-9.92936" />
                              <Key frame="158" value="-9.92936" />
                              <Key frame="187" value="-9.92936" />
                              <Key frame="213" value="-9.92936" />
                              <Key frame="236" value="-9.92936" />
                              <Key frame="253" value="-9.92936" />
                              <Key frame="282" value="-9.92936" />
                              <Key frame="308" value="-9.92936" />
                              <Key frame="338" value="-23.3768" />
                              <Key frame="364" value="-23.3768" />
                              <Key frame="401" value="-9.92936" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="25" value="121.04" />
                              <Key frame="44" value="121.04" />
                              <Key frame="73" value="-5.2711" />
                              <Key frame="96" value="-5.2711" />
                              <Key frame="114" value="-5.29" />
                              <Key frame="128" value="-5.29" />
                              <Key frame="143" value="-5.29" />
                              <Key frame="158" value="-5.2711" />
                              <Key frame="187" value="-5.2711" />
                              <Key frame="213" value="-5.18321" />
                              <Key frame="236" value="-5.2711" />
                              <Key frame="253" value="-5.29" />
                              <Key frame="282" value="-5.2711" />
                              <Key frame="308" value="-5.2711" />
                              <Key frame="338" value="121.04" />
                              <Key frame="364" value="121.04" />
                              <Key frame="401" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="25" value="96.156" />
                              <Key frame="44" value="97.2986" />
                              <Key frame="73" value="89.3004" />
                              <Key frame="96" value="62.2297" />
                              <Key frame="114" value="62.3176" />
                              <Key frame="128" value="72.3373" />
                              <Key frame="143" value="63.8997" />
                              <Key frame="158" value="63.9876" />
                              <Key frame="187" value="-78.5728" />
                              <Key frame="213" value="-77.8697" />
                              <Key frame="236" value="-84.901" />
                              <Key frame="253" value="4.13332" />
                              <Key frame="282" value="86.9273" />
                              <Key frame="308" value="93.9586" />
                              <Key frame="338" value="93.6071" />
                              <Key frame="364" value="93.5192" />
                              <Key frame="401" value="87.982" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="25" value="-15.0319" />
                              <Key frame="44" value="-29.0067" />
                              <Key frame="73" value="-12.5709" />
                              <Key frame="96" value="10.0173" />
                              <Key frame="114" value="9.66569" />
                              <Key frame="128" value="3.77694" />
                              <Key frame="143" value="8.61098" />
                              <Key frame="158" value="8.61098" />
                              <Key frame="187" value="-13.5377" />
                              <Key frame="213" value="-62.9329" />
                              <Key frame="236" value="4.2164" />
                              <Key frame="253" value="-14.944" />
                              <Key frame="282" value="-6.24271" />
                              <Key frame="308" value="-9.40682" />
                              <Key frame="338" value="-9.31893" />
                              <Key frame="364" value="-9.40682" />
                              <Key frame="401" value="-5.97904" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="25" value="0.964409" />
                              <Key frame="44" value="8.69887" />
                              <Key frame="73" value="13.7087" />
                              <Key frame="96" value="90.7897" />
                              <Key frame="114" value="90.7897" />
                              <Key frame="128" value="93.4265" />
                              <Key frame="143" value="87.8893" />
                              <Key frame="158" value="87.8893" />
                              <Key frame="187" value="8.87466" />
                              <Key frame="213" value="8.87466" />
                              <Key frame="236" value="14.8513" />
                              <Key frame="253" value="26.1893" />
                              <Key frame="282" value="10.1051" />
                              <Key frame="308" value="-0.705531" />
                              <Key frame="338" value="2.89802" />
                              <Key frame="364" value="0.876518" />
                              <Key frame="401" value="4.2164" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                      </Box>
                      <Box name="_大猩猩" id="37" localization="8" tooltip="ID : #04A 0003&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Gorilla&#x0A;" x="111" y="172">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="268">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="8" value="-9.84929" />
                              <Key frame="26" value="-21.9" />
                              <Key frame="42" value="-38.5" />
                              <Key frame="54" value="-20.4812" />
                              <Key frame="71" value="-12.8346" />
                              <Key frame="82" value="-11.4283" />
                              <Key frame="93" value="-16.6" />
                              <Key frame="103" value="-13.3263" />
                              <Key frame="109" value="-16.6" />
                              <Key frame="115" value="-13.3263" />
                              <Key frame="120" value="-16.6" />
                              <Key frame="125" value="-13.3263" />
                              <Key frame="130" value="-16.6" />
                              <Key frame="135" value="-13.3263" />
                              <Key frame="140" value="-16.6" />
                              <Key frame="145" value="-13.3263" />
                              <Key frame="150" value="-16.6" />
                              <Key frame="157" value="-31.7712" />
                              <Key frame="172" value="-28.1" />
                              <Key frame="188" value="-38.5" />
                              <Key frame="198" value="-13.8893" />
                              <Key frame="211" value="-12.8346" />
                              <Key frame="229" value="4.7" />
                              <Key frame="250" value="-8.51502" />
                              <Key frame="268" value="-10.2843" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="8" value="0.524544" />
                              <Key frame="42" value="-0.266077" />
                              <Key frame="54" value="-0.266077" />
                              <Key frame="71" value="0.700723" />
                              <Key frame="82" value="0.700723" />
                              <Key frame="93" value="-0.0140832" />
                              <Key frame="103" value="0.626383" />
                              <Key frame="109" value="-0.0140832" />
                              <Key frame="115" value="0.626383" />
                              <Key frame="120" value="-0.0140832" />
                              <Key frame="125" value="0.626383" />
                              <Key frame="130" value="-0.0140832" />
                              <Key frame="135" value="0.626383" />
                              <Key frame="140" value="-0.0140832" />
                              <Key frame="145" value="0.626383" />
                              <Key frame="150" value="-0.0140832" />
                              <Key frame="157" value="0" />
                              <Key frame="172" value="-0.266077" />
                              <Key frame="188" value="-0.266077" />
                              <Key frame="198" value="-0.00240423" />
                              <Key frame="211" value="0.700723" />
                              <Key frame="250" value="-0.567633" />
                              <Key frame="268" value="-0.480661" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="8" value="5.15662" />
                              <Key frame="42" value="-47.6346" />
                              <Key frame="54" value="-50.5723" />
                              <Key frame="71" value="-15.9987" />
                              <Key frame="93" value="-5.80326" />
                              <Key frame="118" value="-17.3171" />
                              <Key frame="148" value="-17.3171" />
                              <Key frame="157" value="-21.5359" />
                              <Key frame="172" value="-50.7159" />
                              <Key frame="188" value="-50.7159" />
                              <Key frame="198" value="-15.9987" />
                              <Key frame="211" value="-11.1647" />
                              <Key frame="229" value="-2.63916" />
                              <Key frame="250" value="4.80387" />
                              <Key frame="268" value="5.11475" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="8" value="-7.82207" />
                              <Key frame="42" value="-1.33228" />
                              <Key frame="54" value="-0.295102" />
                              <Key frame="71" value="-4.30429" />
                              <Key frame="93" value="14.3288" />
                              <Key frame="118" value="13.6256" />
                              <Key frame="148" value="13.6256" />
                              <Key frame="157" value="12.1315" />
                              <Key frame="172" value="0" />
                              <Key frame="188" value="0" />
                              <Key frame="198" value="-4.30429" />
                              <Key frame="211" value="12.6588" />
                              <Key frame="229" value="-0.261268" />
                              <Key frame="250" value="-8.23111" />
                              <Key frame="268" value="-7.76345" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="8" value="-23.8756" />
                              <Key frame="26" value="-81.1" />
                              <Key frame="42" value="-12" />
                              <Key frame="54" value="-12.8091" />
                              <Key frame="71" value="-30.3" />
                              <Key frame="84" value="-52.5" />
                              <Key frame="95" value="-58.8535" />
                              <Key frame="103" value="-88.4547" />
                              <Key frame="109" value="-61.6441" />
                              <Key frame="115" value="-88.4406" />
                              <Key frame="120" value="-61.6441" />
                              <Key frame="125" value="-87.9664" />
                              <Key frame="130" value="-61.504" />
                              <Key frame="135" value="-88.322" />
                              <Key frame="140" value="-62.0779" />
                              <Key frame="145" value="-88.4406" />
                              <Key frame="150" value="-66.8289" />
                              <Key frame="159" value="-2.52888" />
                              <Key frame="172" value="-17.3" />
                              <Key frame="188" value="-10.5446" />
                              <Key frame="198" value="-10.4567" />
                              <Key frame="211" value="-36.4" />
                              <Key frame="229" value="-38.4321" />
                              <Key frame="250" value="-25.4784" />
                              <Key frame="268" value="-23.9847" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="8" value="-68.4559" />
                              <Key frame="26" value="-39.1" />
                              <Key frame="42" value="-88.2" />
                              <Key frame="54" value="-65.1716" />
                              <Key frame="71" value="-60.384" />
                              <Key frame="84" value="-60.0324" />
                              <Key frame="95" value="-33.0148" />
                              <Key frame="103" value="-15.8961" />
                              <Key frame="109" value="-15.8961" />
                              <Key frame="115" value="-15.8961" />
                              <Key frame="120" value="-15.8961" />
                              <Key frame="125" value="-15.8961" />
                              <Key frame="130" value="-15.8961" />
                              <Key frame="135" value="-15.8961" />
                              <Key frame="140" value="-15.8961" />
                              <Key frame="145" value="-15.8961" />
                              <Key frame="150" value="-15.8961" />
                              <Key frame="159" value="-36.2478" />
                              <Key frame="172" value="-60.2082" />
                              <Key frame="188" value="-60.2082" />
                              <Key frame="198" value="-61.0872" />
                              <Key frame="211" value="-32.4" />
                              <Key frame="229" value="-49.7814" />
                              <Key frame="250" value="-67.7115" />
                              <Key frame="268" value="-68.2723" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="8" value="0.2918" />
                              <Key frame="26" value="0" />
                              <Key frame="42" value="0.57" />
                              <Key frame="54" value="0" />
                              <Key frame="71" value="0.054" />
                              <Key frame="82" value="0.0552" />
                              <Key frame="93" value="0.01456" />
                              <Key frame="101" value="0.00396501" />
                              <Key frame="107" value="0.510166" />
                              <Key frame="113" value="0" />
                              <Key frame="118" value="0.510166" />
                              <Key frame="123" value="0.00607498" />
                              <Key frame="128" value="0.510166" />
                              <Key frame="133" value="0.00391997" />
                              <Key frame="138" value="0.510166" />
                              <Key frame="143" value="0.00728999" />
                              <Key frame="148" value="0.114844" />
                              <Key frame="157" value="0.304851" />
                              <Key frame="172" value="0.0492001" />
                              <Key frame="188" value="0.0492001" />
                              <Key frame="198" value="0.054" />
                              <Key frame="211" value="0.054" />
                              <Key frame="229" value="0.67" />
                              <Key frame="250" value="0.33889" />
                              <Key frame="268" value="0.294559" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="8" value="7.07452" />
                              <Key frame="42" value="-69.1403" />
                              <Key frame="54" value="-69.892" />
                              <Key frame="71" value="-88" />
                              <Key frame="93" value="-87.7135" />
                              <Key frame="118" value="-73.563" />
                              <Key frame="148" value="-73.563" />
                              <Key frame="157" value="-80.9459" />
                              <Key frame="172" value="-70.3989" />
                              <Key frame="188" value="-70.3989" />
                              <Key frame="198" value="-88" />
                              <Key frame="211" value="-87.4499" />
                              <Key frame="229" value="-32.2539" />
                              <Key frame="250" value="5.9767" />
                              <Key frame="268" value="7.39015" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="8" value="5.63552" />
                              <Key frame="42" value="-18.7117" />
                              <Key frame="54" value="-21.5989" />
                              <Key frame="71" value="-18.4549" />
                              <Key frame="93" value="-15.906" />
                              <Key frame="118" value="-14.4997" />
                              <Key frame="148" value="-14.4997" />
                              <Key frame="157" value="-16.0818" />
                              <Key frame="172" value="-21.74" />
                              <Key frame="188" value="-21.74" />
                              <Key frame="198" value="-18.4549" />
                              <Key frame="211" value="-18.367" />
                              <Key frame="229" value="-2.81013" />
                              <Key frame="250" value="6.20275" />
                              <Key frame="268" value="6.20348" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="8" value="-9.84409" />
                              <Key frame="42" value="-59.6158" />
                              <Key frame="54" value="-62.8575" />
                              <Key frame="71" value="-60.2913" />
                              <Key frame="93" value="-60.3792" />
                              <Key frame="118" value="-55.8967" />
                              <Key frame="148" value="-55.8967" />
                              <Key frame="157" value="-54.4026" />
                              <Key frame="172" value="-63.016" />
                              <Key frame="188" value="-63.016" />
                              <Key frame="198" value="-60.2913" />
                              <Key frame="211" value="-61.7855" />
                              <Key frame="229" value="-29.1777" />
                              <Key frame="250" value="-10.429" />
                              <Key frame="268" value="-10.1725" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="8" value="-4.79482" />
                              <Key frame="42" value="115.981" />
                              <Key frame="54" value="120.804" />
                              <Key frame="71" value="108.104" />
                              <Key frame="93" value="112.851" />
                              <Key frame="118" value="104.765" />
                              <Key frame="148" value="104.765" />
                              <Key frame="157" value="110.214" />
                              <Key frame="172" value="121.04" />
                              <Key frame="188" value="121.04" />
                              <Key frame="198" value="108.104" />
                              <Key frame="211" value="111.708" />
                              <Key frame="229" value="40.4278" />
                              <Key frame="250" value="-3.34525" />
                              <Key frame="268" value="-5.06757" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="8" value="84.3432" />
                              <Key frame="42" value="20.4571" />
                              <Key frame="54" value="15.7209" />
                              <Key frame="71" value="17.8986" />
                              <Key frame="82" value="18.3381" />
                              <Key frame="93" value="18.7871" />
                              <Key frame="101" value="-1.06845" />
                              <Key frame="107" value="19.3434" />
                              <Key frame="113" value="-1.05474" />
                              <Key frame="118" value="19.3434" />
                              <Key frame="123" value="-0.912421" />
                              <Key frame="128" value="19.2027" />
                              <Key frame="133" value="-1.24519" />
                              <Key frame="138" value="19.156" />
                              <Key frame="143" value="-0.993287" />
                              <Key frame="148" value="14.5825" />
                              <Key frame="157" value="30.3155" />
                              <Key frame="172" value="15.5255" />
                              <Key frame="188" value="15.5255" />
                              <Key frame="198" value="16.1408" />
                              <Key frame="211" value="17.8986" />
                              <Key frame="229" value="50.8976" />
                              <Key frame="250" value="80.0169" />
                              <Key frame="268" value="83.7803" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="8" value="10.4273" />
                              <Key frame="26" value="29.4" />
                              <Key frame="42" value="-1.93602" />
                              <Key frame="54" value="-1.48766" />
                              <Key frame="71" value="-3.34228" />
                              <Key frame="82" value="-4.39699" />
                              <Key frame="93" value="40.0449" />
                              <Key frame="101" value="26.1544" />
                              <Key frame="107" value="49.3442" />
                              <Key frame="113" value="26.6014" />
                              <Key frame="118" value="49.3442" />
                              <Key frame="123" value="26.4811" />
                              <Key frame="128" value="48.8986" />
                              <Key frame="133" value="26.1558" />
                              <Key frame="138" value="48.8986" />
                              <Key frame="143" value="26.6014" />
                              <Key frame="148" value="45.1993" />
                              <Key frame="157" value="5.45398" />
                              <Key frame="172" value="-1.93602" />
                              <Key frame="188" value="-1.93602" />
                              <Key frame="198" value="-3.1665" />
                              <Key frame="211" value="-3.34228" />
                              <Key frame="229" value="23.2414" />
                              <Key frame="250" value="12.7664" />
                              <Key frame="268" value="10.3043" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="8" value="5.88233" />
                              <Key frame="26" value="6.8" />
                              <Key frame="42" value="14.6" />
                              <Key frame="54" value="39.0438" />
                              <Key frame="71" value="43.0645" />
                              <Key frame="82" value="42.0098" />
                              <Key frame="93" value="-7.37445" />
                              <Key frame="101" value="-37.3321" />
                              <Key frame="107" value="-37.3321" />
                              <Key frame="113" value="-37.3321" />
                              <Key frame="118" value="-37.3321" />
                              <Key frame="123" value="-37.3321" />
                              <Key frame="128" value="-37.3321" />
                              <Key frame="133" value="-37.3321" />
                              <Key frame="138" value="-37.3321" />
                              <Key frame="143" value="-37.3321" />
                              <Key frame="148" value="-37.3321" />
                              <Key frame="157" value="14.7929" />
                              <Key frame="172" value="43.3282" />
                              <Key frame="188" value="43.3282" />
                              <Key frame="198" value="43.0645" />
                              <Key frame="211" value="43.0645" />
                              <Key frame="229" value="-77.2" />
                              <Key frame="250" value="-4.16376" />
                              <Key frame="268" value="5.4059" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="8" value="4.95848" />
                              <Key frame="42" value="-44.1003" />
                              <Key frame="54" value="-46.9675" />
                              <Key frame="71" value="-35.9453" />
                              <Key frame="93" value="-25.3983" />
                              <Key frame="118" value="-28.1229" />
                              <Key frame="148" value="-28.1229" />
                              <Key frame="157" value="-39.1973" />
                              <Key frame="172" value="-47.1076" />
                              <Key frame="188" value="-47.1076" />
                              <Key frame="198" value="-35.9453" />
                              <Key frame="211" value="-29.705" />
                              <Key frame="229" value="-8.61098" />
                              <Key frame="250" value="4.39472" />
                              <Key frame="268" value="4.73901" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="8" value="7.02546" />
                              <Key frame="42" value="0.244606" />
                              <Key frame="54" value="-0.740477" />
                              <Key frame="71" value="-1.57965" />
                              <Key frame="93" value="-5.53478" />
                              <Key frame="118" value="-5.00743" />
                              <Key frame="148" value="-5.00743" />
                              <Key frame="157" value="-4.65585" />
                              <Key frame="172" value="-0.788627" />
                              <Key frame="188" value="-0.788627" />
                              <Key frame="198" value="-1.57965" />
                              <Key frame="211" value="-3.95273" />
                              <Key frame="229" value="0.793436" />
                              <Key frame="250" value="6.959" />
                              <Key frame="268" value="7.34719" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="8" value="23.6032" />
                              <Key frame="26" value="81.1" />
                              <Key frame="42" value="12" />
                              <Key frame="54" value="5.20832" />
                              <Key frame="71" value="11.4283" />
                              <Key frame="84" value="2" />
                              <Key frame="95" value="47.0903" />
                              <Key frame="103" value="69.1978" />
                              <Key frame="109" value="88.4826" />
                              <Key frame="115" value="69.5741" />
                              <Key frame="120" value="88.4771" />
                              <Key frame="125" value="69.7061" />
                              <Key frame="130" value="88.0315" />
                              <Key frame="135" value="69.9346" />
                              <Key frame="140" value="88.0315" />
                              <Key frame="145" value="69.6311" />
                              <Key frame="150" value="75.7053" />
                              <Key frame="159" value="2.56215" />
                              <Key frame="172" value="7.9" />
                              <Key frame="188" value="2" />
                              <Key frame="198" value="2" />
                              <Key frame="211" value="11.4283" />
                              <Key frame="229" value="37.0093" />
                              <Key frame="250" value="24.119" />
                              <Key frame="268" value="23.7862" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="8" value="68.9325" />
                              <Key frame="26" value="39.1" />
                              <Key frame="42" value="88.2" />
                              <Key frame="54" value="87.0433" />
                              <Key frame="71" value="85.1647" />
                              <Key frame="84" value="84.11" />
                              <Key frame="95" value="16.2825" />
                              <Key frame="103" value="16.2825" />
                              <Key frame="109" value="16.2825" />
                              <Key frame="115" value="16.2825" />
                              <Key frame="120" value="16.2825" />
                              <Key frame="125" value="16.2825" />
                              <Key frame="130" value="16.2825" />
                              <Key frame="135" value="16.2825" />
                              <Key frame="140" value="16.2825" />
                              <Key frame="145" value="16.2825" />
                              <Key frame="150" value="16.2825" />
                              <Key frame="159" value="33.6513" />
                              <Key frame="172" value="85.2526" />
                              <Key frame="188" value="85.2526" />
                              <Key frame="198" value="84.2858" />
                              <Key frame="211" value="85.1647" />
                              <Key frame="229" value="49.7814" />
                              <Key frame="250" value="67.3553" />
                              <Key frame="268" value="68.2695" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="8" value="0.304283" />
                              <Key frame="26" value="0" />
                              <Key frame="42" value="0.57" />
                              <Key frame="54" value="0" />
                              <Key frame="71" value="0.07" />
                              <Key frame="82" value="0.3724" />
                              <Key frame="93" value="0.00387714" />
                              <Key frame="101" value="0.410699" />
                              <Key frame="107" value="0.00173999" />
                              <Key frame="113" value="0.410699" />
                              <Key frame="118" value="0.00101498" />
                              <Key frame="123" value="0.410699" />
                              <Key frame="128" value="0.00850497" />
                              <Key frame="133" value="0.410699" />
                              <Key frame="138" value="0" />
                              <Key frame="143" value="0.410699" />
                              <Key frame="148" value="0.0103306" />
                              <Key frame="157" value="0.157731" />
                              <Key frame="172" value="0.3744" />
                              <Key frame="188" value="0.3744" />
                              <Key frame="198" value="0.3644" />
                              <Key frame="211" value="0.826" />
                              <Key frame="229" value="0.67" />
                              <Key frame="250" value="0.349675" />
                              <Key frame="268" value="0.306788" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="8" value="7.0775" />
                              <Key frame="42" value="-74.0462" />
                              <Key frame="54" value="-74.8103" />
                              <Key frame="71" value="-87.3668" />
                              <Key frame="93" value="-73.8315" />
                              <Key frame="118" value="-57.8352" />
                              <Key frame="148" value="-57.8352" />
                              <Key frame="157" value="-63.2844" />
                              <Key frame="172" value="-75.3256" />
                              <Key frame="188" value="-75.3256" />
                              <Key frame="198" value="-87.3668" />
                              <Key frame="211" value="-76.9956" />
                              <Key frame="229" value="-32.4345" />
                              <Key frame="250" value="5.88244" />
                              <Key frame="268" value="7.36624" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="8" value="-5.72958" />
                              <Key frame="42" value="17.907" />
                              <Key frame="54" value="19.911" />
                              <Key frame="71" value="15.735" />
                              <Key frame="93" value="14.7682" />
                              <Key frame="118" value="15.735" />
                              <Key frame="148" value="15.735" />
                              <Key frame="157" value="15.3835" />
                              <Key frame="172" value="20.4812" />
                              <Key frame="188" value="20.4812" />
                              <Key frame="198" value="15.735" />
                              <Key frame="211" value="15.1198" />
                              <Key frame="229" value="2.72705" />
                              <Key frame="250" value="-5.47326" />
                              <Key frame="268" value="-5.72363" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="8" value="-9.84409" />
                              <Key frame="42" value="-59.6158" />
                              <Key frame="54" value="-62.8575" />
                              <Key frame="71" value="-60.2913" />
                              <Key frame="93" value="-60.3792" />
                              <Key frame="118" value="-55.8967" />
                              <Key frame="148" value="-55.8967" />
                              <Key frame="157" value="-54.4026" />
                              <Key frame="172" value="-63.016" />
                              <Key frame="188" value="-63.016" />
                              <Key frame="198" value="-60.2913" />
                              <Key frame="211" value="-61.7855" />
                              <Key frame="229" value="-29.1777" />
                              <Key frame="250" value="-10.429" />
                              <Key frame="268" value="-10.1725" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="8" value="-4.69973" />
                              <Key frame="42" value="116.022" />
                              <Key frame="54" value="120.806" />
                              <Key frame="71" value="120.59" />
                              <Key frame="93" value="120.502" />
                              <Key frame="118" value="104.945" />
                              <Key frame="148" value="104.945" />
                              <Key frame="157" value="111.976" />
                              <Key frame="172" value="121.04" />
                              <Key frame="188" value="121.04" />
                              <Key frame="198" value="120.59" />
                              <Key frame="211" value="116.635" />
                              <Key frame="229" value="44.6514" />
                              <Key frame="250" value="-3.23065" />
                              <Key frame="268" value="-5.06046" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="8" value="84.1835" />
                              <Key frame="42" value="22.2417" />
                              <Key frame="54" value="22.3605" />
                              <Key frame="71" value="41.6631" />
                              <Key frame="82" value="36.829" />
                              <Key frame="93" value="15.1635" />
                              <Key frame="101" value="35.0191" />
                              <Key frame="107" value="14.6072" />
                              <Key frame="113" value="35.0054" />
                              <Key frame="118" value="14.6072" />
                              <Key frame="123" value="34.8631" />
                              <Key frame="128" value="14.7479" />
                              <Key frame="133" value="35.1958" />
                              <Key frame="138" value="14.7946" />
                              <Key frame="143" value="34.9439" />
                              <Key frame="148" value="18.314" />
                              <Key frame="157" value="29.4286" />
                              <Key frame="172" value="22.5027" />
                              <Key frame="188" value="22.5027" />
                              <Key frame="198" value="23.9968" />
                              <Key frame="211" value="41.6631" />
                              <Key frame="229" value="75.9202" />
                              <Key frame="250" value="82.2838" />
                              <Key frame="268" value="83.8255" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="8" value="-10.4935" />
                              <Key frame="26" value="-29.4" />
                              <Key frame="42" value="2.98591" />
                              <Key frame="54" value="2.83221" />
                              <Key frame="71" value="14.1482" />
                              <Key frame="82" value="-0.793436" />
                              <Key frame="93" value="-24.2349" />
                              <Key frame="101" value="-48.8999" />
                              <Key frame="107" value="-26.1558" />
                              <Key frame="113" value="-48.8986" />
                              <Key frame="118" value="-26.1558" />
                              <Key frame="123" value="-49.0189" />
                              <Key frame="128" value="-26.6014" />
                              <Key frame="133" value="-49.3442" />
                              <Key frame="138" value="-26.6014" />
                              <Key frame="143" value="-48.8986" />
                              <Key frame="148" value="-30.3007" />
                              <Key frame="157" value="3.86583" />
                              <Key frame="172" value="2.98591" />
                              <Key frame="188" value="2.98591" />
                              <Key frame="198" value="3.68905" />
                              <Key frame="211" value="14.1482" />
                              <Key frame="229" value="-37.6671" />
                              <Key frame="250" value="-14.6104" />
                              <Key frame="268" value="-10.6301" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="8" value="5.67181" />
                              <Key frame="26" value="-6.8" />
                              <Key frame="42" value="-14.6" />
                              <Key frame="54" value="-52.918" />
                              <Key frame="71" value="-59.593" />
                              <Key frame="82" value="-67.5033" />
                              <Key frame="93" value="37.1888" />
                              <Key frame="101" value="37.1888" />
                              <Key frame="107" value="37.1888" />
                              <Key frame="113" value="37.1888" />
                              <Key frame="118" value="37.1888" />
                              <Key frame="123" value="37.1888" />
                              <Key frame="128" value="37.1888" />
                              <Key frame="133" value="37.1888" />
                              <Key frame="138" value="37.1888" />
                              <Key frame="143" value="37.1888" />
                              <Key frame="148" value="37.1888" />
                              <Key frame="157" value="-20.1526" />
                              <Key frame="172" value="-59.593" />
                              <Key frame="188" value="-59.593" />
                              <Key frame="198" value="-59.7688" />
                              <Key frame="211" value="-59.593" />
                              <Key frame="229" value="77.2" />
                              <Key frame="250" value="13.6644" />
                              <Key frame="268" value="5.33957" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Box name="_躺下" id="14" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="427" y="176">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LyingBack" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_趴下" id="15" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="582" y="176">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="LyingBelly" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Box name="Saxophone" id="22" localization="8" tooltip="ID : #04D 0001&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Saxophone" x="270" y="172">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="247">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe25" index="25">
                              <Diagram>
                                <Box name="Play Sound" id="1" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="156" y="75">
                                  <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" />
                                  <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" />
                                  <Parameter name="File name" inherits_from_parent="0" content_type="4" value="/epicsax.ogg" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" />
                                  <Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" />
                                  <Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" />
                                  <Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" />
                                  <Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" />
                                  <Timeline enable="0">
                                    <BehaviorLayer name="behavior_layer1">
                                      <BehaviorKeyframe name="keyframe1" index="1">
                                        <Diagram>
                                          <Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70">
                                            <bitmap>media/images/box/interaction/play_music.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.player = self.session().service('ALAudioPlayer')
        self.playerStop = self.session().service('ALAudioPlayer') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.pCall("playFileInLoop",p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.pCall("playFileFromPosition",p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
                                            <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
                                            <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
                                            <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
                                            <Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" />
                                            <Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" />
                                            <Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" />
                                            <Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" />
                                          </Box>
                                          <Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71">
                                            <bitmap>media/images/box/folder.png</bitmap>
                                            <script language="4">
                                              <content>
                                                <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]>
                                              </content>
                                            </script>
                                            <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                            <Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" />
                                            <Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" />
                                            <Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" />
                                          </Box>
                                          <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                                          <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" />
                                          <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" />
                                        </Diagram>
                                      </BehaviorKeyframe>
                                    </BehaviorLayer>
                                  </Timeline>
                                  <Resource name="Audio player" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="11" value="-29.9735" />
                              <Key frame="23" value="-17.3872" />
                              <Key frame="29" value="-1.73009" />
                              <Key frame="35" value="-17.3872" />
                              <Key frame="41" value="-1.73009" />
                              <Key frame="47" value="-17.3872" />
                              <Key frame="53" value="-1.73009" />
                              <Key frame="59" value="-17.3872" />
                              <Key frame="65" value="-1.73009" />
                              <Key frame="71" value="-17.3872" />
                              <Key frame="77" value="-1.73009" />
                              <Key frame="83" value="-17.3872" />
                              <Key frame="89" value="-1.73009" />
                              <Key frame="95" value="-17.3872" />
                              <Key frame="101" value="-1.73009" />
                              <Key frame="107" value="-17.3872" />
                              <Key frame="113" value="-1.73009" />
                              <Key frame="119" value="-17.3872" />
                              <Key frame="125" value="-1.73009" />
                              <Key frame="131" value="-17.3872" />
                              <Key frame="137" value="-1.73009" />
                              <Key frame="143" value="-17.3872" />
                              <Key frame="149" value="-1.73009" />
                              <Key frame="155" value="-17.3872" />
                              <Key frame="161" value="-1.73009" />
                              <Key frame="167" value="-17.3872" />
                              <Key frame="173" value="-1.73009" />
                              <Key frame="179" value="-17.3872" />
                              <Key frame="185" value="-1.73009" />
                              <Key frame="191" value="-17.3872" />
                              <Key frame="197" value="-1.73009" />
                              <Key frame="203" value="-17.3872" />
                              <Key frame="210" value="-1.73009" />
                              <Key frame="247" value="-10.901" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="11" value="-7.38531" />
                              <Key frame="23" value="-10.7012" />
                              <Key frame="29" value="-10.7012" />
                              <Key frame="35" value="-10.7012" />
                              <Key frame="41" value="-10.7012" />
                              <Key frame="47" value="-10.7012" />
                              <Key frame="53" value="-10.7012" />
                              <Key frame="59" value="-10.7012" />
                              <Key frame="65" value="-10.7012" />
                              <Key frame="71" value="-10.7012" />
                              <Key frame="77" value="-10.7012" />
                              <Key frame="83" value="-10.7012" />
                              <Key frame="89" value="-10.7012" />
                              <Key frame="95" value="-10.7012" />
                              <Key frame="101" value="-10.7012" />
                              <Key frame="107" value="-10.7012" />
                              <Key frame="113" value="-10.7012" />
                              <Key frame="119" value="-10.7012" />
                              <Key frame="125" value="-10.7012" />
                              <Key frame="131" value="-10.7012" />
                              <Key frame="137" value="-10.7012" />
                              <Key frame="143" value="-10.7012" />
                              <Key frame="149" value="-10.7012" />
                              <Key frame="155" value="-10.7012" />
                              <Key frame="161" value="-10.7012" />
                              <Key frame="167" value="-10.7012" />
                              <Key frame="173" value="-10.7012" />
                              <Key frame="179" value="-10.7012" />
                              <Key frame="185" value="-10.7012" />
                              <Key frame="191" value="-10.7012" />
                              <Key frame="197" value="-10.7012" />
                              <Key frame="203" value="-10.7012" />
                              <Key frame="210" value="-10.7012" />
                              <Key frame="247" value="-0.705531" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="11" value="-7.38531" />
                              <Key frame="23" value="-18.987" />
                              <Key frame="29" value="-20.9206" />
                              <Key frame="35" value="-18.987" />
                              <Key frame="41" value="-20.9206" />
                              <Key frame="47" value="-18.987" />
                              <Key frame="53" value="-20.9206" />
                              <Key frame="59" value="-18.987" />
                              <Key frame="65" value="-20.9206" />
                              <Key frame="71" value="-18.987" />
                              <Key frame="77" value="-20.9206" />
                              <Key frame="83" value="-18.987" />
                              <Key frame="89" value="-20.9206" />
                              <Key frame="95" value="-18.987" />
                              <Key frame="101" value="-20.9206" />
                              <Key frame="113" value="-8.35212" />
                              <Key frame="125" value="22.9421" />
                              <Key frame="131" value="15.8229" />
                              <Key frame="137" value="22.9421" />
                              <Key frame="143" value="15.8229" />
                              <Key frame="149" value="22.9421" />
                              <Key frame="155" value="15.8229" />
                              <Key frame="161" value="22.9421" />
                              <Key frame="167" value="15.8229" />
                              <Key frame="173" value="22.9421" />
                              <Key frame="179" value="15.8229" />
                              <Key frame="185" value="22.9421" />
                              <Key frame="191" value="15.8229" />
                              <Key frame="197" value="22.9421" />
                              <Key frame="203" value="15.8229" />
                              <Key frame="210" value="22.9421" />
                              <Key frame="230" value="-7.38531" />
                              <Key frame="247" value="5.71056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="11" value="-5.18321" />
                              <Key frame="23" value="7.4732" />
                              <Key frame="29" value="1.49656" />
                              <Key frame="35" value="7.4732" />
                              <Key frame="41" value="1.49656" />
                              <Key frame="47" value="7.4732" />
                              <Key frame="53" value="1.49656" />
                              <Key frame="59" value="7.4732" />
                              <Key frame="65" value="1.49656" />
                              <Key frame="71" value="7.4732" />
                              <Key frame="77" value="1.49656" />
                              <Key frame="83" value="7.4732" />
                              <Key frame="89" value="1.49656" />
                              <Key frame="95" value="7.4732" />
                              <Key frame="101" value="1.49656" />
                              <Key frame="113" value="-13.7087" />
                              <Key frame="125" value="-18.987" />
                              <Key frame="131" value="-19.6023" />
                              <Key frame="137" value="-18.987" />
                              <Key frame="143" value="-19.6023" />
                              <Key frame="149" value="-18.987" />
                              <Key frame="155" value="-19.6023" />
                              <Key frame="161" value="-18.987" />
                              <Key frame="167" value="-19.6023" />
                              <Key frame="173" value="-18.987" />
                              <Key frame="179" value="-19.6023" />
                              <Key frame="185" value="-18.987" />
                              <Key frame="191" value="-19.6023" />
                              <Key frame="197" value="-18.987" />
                              <Key frame="203" value="-19.6023" />
                              <Key frame="210" value="-18.987" />
                              <Key frame="230" value="-5.18321" />
                              <Key frame="247" value="-7.3805" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="11" value="-67.1469" />
                              <Key frame="23" value="-69.0474" />
                              <Key frame="29" value="-69.0474" />
                              <Key frame="35" value="-69.0474" />
                              <Key frame="41" value="-69.0474" />
                              <Key frame="47" value="-69.0474" />
                              <Key frame="53" value="-69.0474" />
                              <Key frame="59" value="-69.0474" />
                              <Key frame="65" value="-69.0474" />
                              <Key frame="71" value="-69.0474" />
                              <Key frame="77" value="-69.0474" />
                              <Key frame="83" value="-69.0474" />
                              <Key frame="89" value="-69.0474" />
                              <Key frame="95" value="-69.0474" />
                              <Key frame="101" value="-69.0474" />
                              <Key frame="107" value="-69.0474" />
                              <Key frame="113" value="-69.0474" />
                              <Key frame="119" value="-69.0474" />
                              <Key frame="125" value="-69.0474" />
                              <Key frame="131" value="-69.0474" />
                              <Key frame="137" value="-69.0474" />
                              <Key frame="143" value="-69.0474" />
                              <Key frame="149" value="-69.0474" />
                              <Key frame="155" value="-69.0474" />
                              <Key frame="161" value="-69.0474" />
                              <Key frame="167" value="-69.0474" />
                              <Key frame="173" value="-69.0474" />
                              <Key frame="179" value="-69.0474" />
                              <Key frame="185" value="-69.0474" />
                              <Key frame="191" value="-69.0474" />
                              <Key frame="197" value="-69.0474" />
                              <Key frame="203" value="-69.0474" />
                              <Key frame="210" value="-69.0474" />
                              <Key frame="247" value="-25.0467" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="11" value="-66.3607" />
                              <Key frame="23" value="-26.7222" />
                              <Key frame="29" value="-15.2352" />
                              <Key frame="35" value="-26.7222" />
                              <Key frame="41" value="-15.2352" />
                              <Key frame="47" value="-26.7222" />
                              <Key frame="53" value="-15.2352" />
                              <Key frame="59" value="-26.7222" />
                              <Key frame="65" value="-15.2352" />
                              <Key frame="71" value="-26.7222" />
                              <Key frame="77" value="-15.2352" />
                              <Key frame="83" value="-26.7222" />
                              <Key frame="89" value="-15.2352" />
                              <Key frame="95" value="-26.7222" />
                              <Key frame="101" value="-15.2352" />
                              <Key frame="107" value="-26.7222" />
                              <Key frame="113" value="-15.2352" />
                              <Key frame="119" value="-26.7222" />
                              <Key frame="125" value="-15.2352" />
                              <Key frame="131" value="-26.7222" />
                              <Key frame="137" value="-15.2352" />
                              <Key frame="143" value="-26.7222" />
                              <Key frame="149" value="-15.2352" />
                              <Key frame="155" value="-26.7222" />
                              <Key frame="161" value="-15.2352" />
                              <Key frame="167" value="-26.7222" />
                              <Key frame="173" value="-15.2352" />
                              <Key frame="179" value="-26.7222" />
                              <Key frame="185" value="-15.2352" />
                              <Key frame="191" value="-26.7222" />
                              <Key frame="197" value="-15.2352" />
                              <Key frame="203" value="-26.7222" />
                              <Key frame="210" value="-15.2352" />
                              <Key frame="247" value="-66.4486" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="11" value="0.8" />
                              <Key frame="23" value="0.41" />
                              <Key frame="29" value="0.2" />
                              <Key frame="35" value="0.41" />
                              <Key frame="41" value="0.2" />
                              <Key frame="47" value="0.41" />
                              <Key frame="53" value="0.2" />
                              <Key frame="59" value="0.41" />
                              <Key frame="65" value="0.2" />
                              <Key frame="71" value="0.41" />
                              <Key frame="77" value="0.2" />
                              <Key frame="83" value="0.41" />
                              <Key frame="89" value="0.2" />
                              <Key frame="95" value="0.41" />
                              <Key frame="101" value="0.2" />
                              <Key frame="107" value="0.41" />
                              <Key frame="113" value="0.2" />
                              <Key frame="119" value="0.41" />
                              <Key frame="125" value="0.2" />
                              <Key frame="131" value="0.41" />
                              <Key frame="137" value="0.2" />
                              <Key frame="143" value="0.41" />
                              <Key frame="149" value="0.2" />
                              <Key frame="155" value="0.41" />
                              <Key frame="161" value="0.2" />
                              <Key frame="167" value="0.41" />
                              <Key frame="173" value="0.2" />
                              <Key frame="179" value="0.41" />
                              <Key frame="185" value="0.2" />
                              <Key frame="191" value="0.41" />
                              <Key frame="197" value="0.2" />
                              <Key frame="203" value="0.41" />
                              <Key frame="210" value="0.2" />
                              <Key frame="247" value="0.3136" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="11" value="-27.1561" />
                              <Key frame="23" value="3.69386" />
                              <Key frame="29" value="8.79157" />
                              <Key frame="35" value="3.69386" />
                              <Key frame="41" value="8.79157" />
                              <Key frame="47" value="3.69386" />
                              <Key frame="53" value="8.79157" />
                              <Key frame="59" value="3.69386" />
                              <Key frame="65" value="8.79157" />
                              <Key frame="71" value="3.69386" />
                              <Key frame="77" value="8.79157" />
                              <Key frame="83" value="3.69386" />
                              <Key frame="89" value="8.79157" />
                              <Key frame="95" value="3.69386" />
                              <Key frame="101" value="8.79157" />
                              <Key frame="113" value="-32.2539" />
                              <Key frame="125" value="1.14019" />
                              <Key frame="131" value="13.1813" />
                              <Key frame="137" value="1.14019" />
                              <Key frame="143" value="13.1813" />
                              <Key frame="149" value="1.14019" />
                              <Key frame="155" value="13.1813" />
                              <Key frame="161" value="1.14019" />
                              <Key frame="167" value="13.1813" />
                              <Key frame="173" value="1.14019" />
                              <Key frame="179" value="13.1813" />
                              <Key frame="185" value="1.14019" />
                              <Key frame="191" value="13.1813" />
                              <Key frame="197" value="1.14019" />
                              <Key frame="203" value="13.1813" />
                              <Key frame="210" value="1.14019" />
                              <Key frame="230" value="-27.1561" />
                              <Key frame="247" value="8.00056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="11" value="4.04543" />
                              <Key frame="23" value="-10.4567" />
                              <Key frame="29" value="-1.0523" />
                              <Key frame="35" value="-10.4567" />
                              <Key frame="41" value="-1.0523" />
                              <Key frame="47" value="-10.4567" />
                              <Key frame="53" value="-1.0523" />
                              <Key frame="59" value="-10.4567" />
                              <Key frame="65" value="-1.0523" />
                              <Key frame="71" value="-10.4567" />
                              <Key frame="77" value="-1.0523" />
                              <Key frame="83" value="-10.4567" />
                              <Key frame="89" value="-1.0523" />
                              <Key frame="95" value="-10.4567" />
                              <Key frame="101" value="-1.0523" />
                              <Key frame="113" value="14.6803" />
                              <Key frame="125" value="25.7499" />
                              <Key frame="131" value="25.7499" />
                              <Key frame="137" value="25.7499" />
                              <Key frame="143" value="25.7499" />
                              <Key frame="149" value="25.7499" />
                              <Key frame="155" value="25.7499" />
                              <Key frame="161" value="25.7499" />
                              <Key frame="167" value="25.7499" />
                              <Key frame="173" value="25.7499" />
                              <Key frame="179" value="25.7499" />
                              <Key frame="185" value="25.7499" />
                              <Key frame="191" value="25.7499" />
                              <Key frame="197" value="25.7499" />
                              <Key frame="203" value="25.7499" />
                              <Key frame="210" value="25.7499" />
                              <Key frame="230" value="4.04543" />
                              <Key frame="247" value="6.68218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="11" value="-12.8298" />
                              <Key frame="23" value="-29.6171" />
                              <Key frame="29" value="-27.0682" />
                              <Key frame="35" value="-29.6171" />
                              <Key frame="41" value="-27.0682" />
                              <Key frame="47" value="-29.6171" />
                              <Key frame="53" value="-27.0682" />
                              <Key frame="59" value="-29.6171" />
                              <Key frame="65" value="-27.0682" />
                              <Key frame="71" value="-29.6171" />
                              <Key frame="77" value="-27.0682" />
                              <Key frame="83" value="-29.6171" />
                              <Key frame="89" value="-27.0682" />
                              <Key frame="95" value="-29.6171" />
                              <Key frame="101" value="-27.0682" />
                              <Key frame="113" value="-13.7087" />
                              <Key frame="125" value="-29.6171" />
                              <Key frame="131" value="-27.0682" />
                              <Key frame="137" value="-29.6171" />
                              <Key frame="143" value="-27.0682" />
                              <Key frame="149" value="-29.6171" />
                              <Key frame="155" value="-27.0682" />
                              <Key frame="161" value="-29.6171" />
                              <Key frame="167" value="-27.0682" />
                              <Key frame="173" value="-29.6171" />
                              <Key frame="179" value="-27.0682" />
                              <Key frame="185" value="-29.6171" />
                              <Key frame="191" value="-27.0682" />
                              <Key frame="197" value="-29.6171" />
                              <Key frame="203" value="-27.0682" />
                              <Key frame="210" value="-29.6171" />
                              <Key frame="230" value="-12.8298" />
                              <Key frame="247" value="-9.66569" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="11" value="33.3965" />
                              <Key frame="23" value="36.5606" />
                              <Key frame="29" value="36.3848" />
                              <Key frame="35" value="36.5606" />
                              <Key frame="41" value="36.3848" />
                              <Key frame="47" value="36.5606" />
                              <Key frame="53" value="36.3848" />
                              <Key frame="59" value="36.5606" />
                              <Key frame="65" value="36.3848" />
                              <Key frame="71" value="36.5606" />
                              <Key frame="77" value="36.3848" />
                              <Key frame="83" value="36.5606" />
                              <Key frame="89" value="36.3848" />
                              <Key frame="95" value="36.5606" />
                              <Key frame="101" value="36.3848" />
                              <Key frame="113" value="37.791" />
                              <Key frame="125" value="-5.18321" />
                              <Key frame="131" value="-5.18321" />
                              <Key frame="137" value="-5.18321" />
                              <Key frame="143" value="-5.18321" />
                              <Key frame="149" value="-5.18321" />
                              <Key frame="155" value="-5.18321" />
                              <Key frame="161" value="-5.18321" />
                              <Key frame="167" value="-5.18321" />
                              <Key frame="173" value="-5.18321" />
                              <Key frame="179" value="-5.18321" />
                              <Key frame="185" value="-5.18321" />
                              <Key frame="191" value="-5.18321" />
                              <Key frame="197" value="-5.18321" />
                              <Key frame="203" value="-5.18321" />
                              <Key frame="210" value="-5.18321" />
                              <Key frame="230" value="33.3965" />
                              <Key frame="247" value="-5.01224" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="11" value="26.2772" />
                              <Key frame="23" value="-1.04575" />
                              <Key frame="29" value="15.4084" />
                              <Key frame="35" value="-1.04575" />
                              <Key frame="41" value="15.4084" />
                              <Key frame="47" value="-1.04575" />
                              <Key frame="53" value="15.4084" />
                              <Key frame="59" value="-1.04575" />
                              <Key frame="65" value="15.4084" />
                              <Key frame="71" value="-1.04575" />
                              <Key frame="77" value="15.4084" />
                              <Key frame="83" value="-1.04575" />
                              <Key frame="89" value="15.4084" />
                              <Key frame="95" value="-1.04575" />
                              <Key frame="101" value="15.4084" />
                              <Key frame="107" value="-1.04575" />
                              <Key frame="113" value="15.4084" />
                              <Key frame="119" value="-1.04575" />
                              <Key frame="125" value="15.4084" />
                              <Key frame="131" value="-1.04575" />
                              <Key frame="137" value="15.4084" />
                              <Key frame="143" value="-1.04575" />
                              <Key frame="149" value="15.4084" />
                              <Key frame="155" value="-1.04575" />
                              <Key frame="161" value="15.4084" />
                              <Key frame="167" value="-1.04575" />
                              <Key frame="173" value="15.4084" />
                              <Key frame="179" value="-1.04575" />
                              <Key frame="185" value="15.4084" />
                              <Key frame="191" value="-1.04575" />
                              <Key frame="197" value="15.4084" />
                              <Key frame="203" value="-1.04575" />
                              <Key frame="210" value="15.4084" />
                              <Key frame="247" value="82.6158" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="11" value="16.697" />
                              <Key frame="23" value="-5.38779" />
                              <Key frame="29" value="-5.38779" />
                              <Key frame="35" value="-5.38779" />
                              <Key frame="41" value="-5.38779" />
                              <Key frame="47" value="-5.38779" />
                              <Key frame="53" value="-5.38779" />
                              <Key frame="59" value="-5.38779" />
                              <Key frame="65" value="-5.38779" />
                              <Key frame="71" value="-5.38779" />
                              <Key frame="77" value="-5.38779" />
                              <Key frame="83" value="-5.38779" />
                              <Key frame="89" value="-5.38779" />
                              <Key frame="95" value="-5.38779" />
                              <Key frame="101" value="-5.38779" />
                              <Key frame="107" value="-5.38779" />
                              <Key frame="113" value="-5.38779" />
                              <Key frame="119" value="-5.38779" />
                              <Key frame="125" value="-5.38779" />
                              <Key frame="131" value="-5.38779" />
                              <Key frame="137" value="-5.38779" />
                              <Key frame="143" value="-5.38779" />
                              <Key frame="149" value="-5.38779" />
                              <Key frame="155" value="-5.38779" />
                              <Key frame="161" value="-5.38779" />
                              <Key frame="167" value="-5.38779" />
                              <Key frame="173" value="-5.38779" />
                              <Key frame="179" value="-5.38779" />
                              <Key frame="185" value="-5.38779" />
                              <Key frame="191" value="-5.38779" />
                              <Key frame="197" value="-5.38779" />
                              <Key frame="203" value="-5.38779" />
                              <Key frame="210" value="-5.38779" />
                              <Key frame="247" value="5.71056" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="11" value="-70.2279" />
                              <Key frame="23" value="-66.4386" />
                              <Key frame="29" value="-66.4386" />
                              <Key frame="35" value="-66.4386" />
                              <Key frame="41" value="-66.4386" />
                              <Key frame="47" value="-66.4386" />
                              <Key frame="53" value="-66.4386" />
                              <Key frame="59" value="-66.4386" />
                              <Key frame="65" value="-66.4386" />
                              <Key frame="71" value="-66.4386" />
                              <Key frame="77" value="-66.4386" />
                              <Key frame="83" value="-66.4386" />
                              <Key frame="89" value="-66.4386" />
                              <Key frame="95" value="-66.4386" />
                              <Key frame="101" value="-66.4386" />
                              <Key frame="107" value="-66.4386" />
                              <Key frame="113" value="-66.4386" />
                              <Key frame="119" value="-66.4386" />
                              <Key frame="125" value="-66.4386" />
                              <Key frame="131" value="-66.4386" />
                              <Key frame="137" value="-66.4386" />
                              <Key frame="143" value="-66.4386" />
                              <Key frame="149" value="-66.4386" />
                              <Key frame="155" value="-66.4386" />
                              <Key frame="161" value="-66.4386" />
                              <Key frame="167" value="-66.4386" />
                              <Key frame="173" value="-66.4386" />
                              <Key frame="179" value="-66.4386" />
                              <Key frame="185" value="-66.4386" />
                              <Key frame="191" value="-66.4386" />
                              <Key frame="197" value="-66.4386" />
                              <Key frame="203" value="-66.4386" />
                              <Key frame="210" value="-66.4386" />
                              <Key frame="247" value="3.51326" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="11" value="-5.53478" />
                              <Key frame="23" value="22.9421" />
                              <Key frame="29" value="15.8229" />
                              <Key frame="35" value="22.9421" />
                              <Key frame="41" value="15.8229" />
                              <Key frame="47" value="22.9421" />
                              <Key frame="53" value="15.8229" />
                              <Key frame="59" value="22.9421" />
                              <Key frame="65" value="15.8229" />
                              <Key frame="71" value="22.9421" />
                              <Key frame="77" value="15.8229" />
                              <Key frame="83" value="22.9421" />
                              <Key frame="89" value="15.8229" />
                              <Key frame="95" value="22.9421" />
                              <Key frame="101" value="15.8229" />
                              <Key frame="113" value="-8.08364" />
                              <Key frame="125" value="-18.987" />
                              <Key frame="131" value="-20.9206" />
                              <Key frame="137" value="-18.987" />
                              <Key frame="143" value="-20.9206" />
                              <Key frame="149" value="-18.987" />
                              <Key frame="155" value="-20.9206" />
                              <Key frame="161" value="-18.987" />
                              <Key frame="167" value="-20.9206" />
                              <Key frame="173" value="-18.987" />
                              <Key frame="179" value="-20.9206" />
                              <Key frame="185" value="-18.987" />
                              <Key frame="191" value="-20.9206" />
                              <Key frame="197" value="-18.987" />
                              <Key frame="203" value="-20.9206" />
                              <Key frame="210" value="-18.987" />
                              <Key frame="230" value="-5.53478" />
                              <Key frame="247" value="5.97904" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="11" value="6.24271" />
                              <Key frame="23" value="18.987" />
                              <Key frame="29" value="19.6023" />
                              <Key frame="35" value="18.987" />
                              <Key frame="41" value="19.6023" />
                              <Key frame="47" value="18.987" />
                              <Key frame="53" value="19.6023" />
                              <Key frame="59" value="18.987" />
                              <Key frame="65" value="19.6023" />
                              <Key frame="71" value="18.987" />
                              <Key frame="77" value="19.6023" />
                              <Key frame="83" value="18.987" />
                              <Key frame="89" value="19.6023" />
                              <Key frame="95" value="18.987" />
                              <Key frame="101" value="19.6023" />
                              <Key frame="113" value="10.8131" />
                              <Key frame="125" value="-7.4732" />
                              <Key frame="131" value="-1.49656" />
                              <Key frame="137" value="-7.4732" />
                              <Key frame="143" value="-1.49656" />
                              <Key frame="149" value="-7.4732" />
                              <Key frame="155" value="-1.49656" />
                              <Key frame="161" value="-7.4732" />
                              <Key frame="167" value="-1.49656" />
                              <Key frame="173" value="-7.4732" />
                              <Key frame="179" value="-1.49656" />
                              <Key frame="185" value="-7.4732" />
                              <Key frame="191" value="-1.49656" />
                              <Key frame="197" value="-7.4732" />
                              <Key frame="203" value="-1.49656" />
                              <Key frame="210" value="-7.4732" />
                              <Key frame="230" value="6.24271" />
                              <Key frame="247" value="7.03374" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="11" value="71.4584" />
                              <Key frame="23" value="78.2778" />
                              <Key frame="29" value="67.3" />
                              <Key frame="35" value="78.2778" />
                              <Key frame="41" value="67.3" />
                              <Key frame="47" value="78.2778" />
                              <Key frame="53" value="67.3" />
                              <Key frame="59" value="78.2778" />
                              <Key frame="65" value="67.3" />
                              <Key frame="71" value="78.2778" />
                              <Key frame="77" value="67.3" />
                              <Key frame="83" value="78.2778" />
                              <Key frame="89" value="67.3" />
                              <Key frame="95" value="78.2778" />
                              <Key frame="101" value="67.3" />
                              <Key frame="107" value="78.2778" />
                              <Key frame="113" value="67.3" />
                              <Key frame="119" value="78.2778" />
                              <Key frame="125" value="67.3" />
                              <Key frame="131" value="78.2778" />
                              <Key frame="137" value="67.3" />
                              <Key frame="143" value="78.2778" />
                              <Key frame="149" value="67.3" />
                              <Key frame="155" value="78.2778" />
                              <Key frame="161" value="67.3" />
                              <Key frame="167" value="78.2778" />
                              <Key frame="173" value="67.3" />
                              <Key frame="179" value="78.2778" />
                              <Key frame="185" value="67.3" />
                              <Key frame="191" value="78.2778" />
                              <Key frame="197" value="67.3" />
                              <Key frame="203" value="78.2778" />
                              <Key frame="210" value="67.3" />
                              <Key frame="247" value="25.491" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="11" value="68.641" />
                              <Key frame="23" value="71.274" />
                              <Key frame="29" value="71.274" />
                              <Key frame="35" value="71.274" />
                              <Key frame="41" value="71.274" />
                              <Key frame="47" value="71.274" />
                              <Key frame="53" value="71.274" />
                              <Key frame="59" value="71.274" />
                              <Key frame="65" value="71.274" />
                              <Key frame="71" value="71.274" />
                              <Key frame="77" value="71.274" />
                              <Key frame="83" value="71.274" />
                              <Key frame="89" value="71.274" />
                              <Key frame="95" value="71.274" />
                              <Key frame="101" value="71.274" />
                              <Key frame="107" value="71.274" />
                              <Key frame="113" value="71.274" />
                              <Key frame="119" value="71.274" />
                              <Key frame="125" value="71.274" />
                              <Key frame="131" value="71.274" />
                              <Key frame="137" value="71.274" />
                              <Key frame="143" value="71.274" />
                              <Key frame="149" value="71.274" />
                              <Key frame="155" value="71.274" />
                              <Key frame="161" value="71.274" />
                              <Key frame="167" value="71.274" />
                              <Key frame="173" value="71.274" />
                              <Key frame="179" value="71.274" />
                              <Key frame="185" value="71.274" />
                              <Key frame="191" value="71.274" />
                              <Key frame="197" value="71.274" />
                              <Key frame="203" value="71.274" />
                              <Key frame="210" value="71.274" />
                              <Key frame="247" value="68.9047" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="11" value="0.8" />
                              <Key frame="23" value="0.54" />
                              <Key frame="29" value="0.66" />
                              <Key frame="35" value="0.54" />
                              <Key frame="41" value="0.66" />
                              <Key frame="47" value="0.54" />
                              <Key frame="53" value="0.66" />
                              <Key frame="59" value="0.54" />
                              <Key frame="65" value="0.66" />
                              <Key frame="71" value="0.54" />
                              <Key frame="77" value="0.66" />
                              <Key frame="83" value="0.54" />
                              <Key frame="89" value="0.66" />
                              <Key frame="95" value="0.54" />
                              <Key frame="101" value="0.66" />
                              <Key frame="107" value="0.54" />
                              <Key frame="113" value="0.66" />
                              <Key frame="119" value="0.54" />
                              <Key frame="125" value="0.66" />
                              <Key frame="131" value="0.54" />
                              <Key frame="137" value="0.66" />
                              <Key frame="143" value="0.54" />
                              <Key frame="149" value="0.66" />
                              <Key frame="155" value="0.54" />
                              <Key frame="161" value="0.66" />
                              <Key frame="167" value="0.54" />
                              <Key frame="173" value="0.66" />
                              <Key frame="179" value="0.54" />
                              <Key frame="185" value="0.66" />
                              <Key frame="191" value="0.54" />
                              <Key frame="197" value="0.66" />
                              <Key frame="203" value="0.54" />
                              <Key frame="210" value="0.66" />
                              <Key frame="247" value="0.3096" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="11" value="-28.1278" />
                              <Key frame="23" value="1.14019" />
                              <Key frame="29" value="13.1813" />
                              <Key frame="35" value="1.14019" />
                              <Key frame="41" value="13.1813" />
                              <Key frame="47" value="1.14019" />
                              <Key frame="53" value="13.1813" />
                              <Key frame="59" value="1.14019" />
                              <Key frame="65" value="13.1813" />
                              <Key frame="71" value="1.14019" />
                              <Key frame="77" value="13.1813" />
                              <Key frame="83" value="1.14019" />
                              <Key frame="89" value="13.1813" />
                              <Key frame="95" value="1.14019" />
                              <Key frame="101" value="13.1813" />
                              <Key frame="113" value="-29.8856" />
                              <Key frame="125" value="3.69386" />
                              <Key frame="131" value="8.79157" />
                              <Key frame="137" value="3.69386" />
                              <Key frame="143" value="8.79157" />
                              <Key frame="149" value="3.69386" />
                              <Key frame="155" value="8.79157" />
                              <Key frame="161" value="3.69386" />
                              <Key frame="167" value="8.79157" />
                              <Key frame="173" value="3.69386" />
                              <Key frame="179" value="8.79157" />
                              <Key frame="185" value="3.69386" />
                              <Key frame="191" value="8.79157" />
                              <Key frame="197" value="3.69386" />
                              <Key frame="203" value="8.79157" />
                              <Key frame="210" value="3.69386" />
                              <Key frame="230" value="-28.1278" />
                              <Key frame="247" value="7.73207" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="11" value="-3.86484" />
                              <Key frame="23" value="-25.7499" />
                              <Key frame="29" value="-25.7499" />
                              <Key frame="35" value="-25.7499" />
                              <Key frame="41" value="-25.7499" />
                              <Key frame="47" value="-25.7499" />
                              <Key frame="53" value="-25.7499" />
                              <Key frame="59" value="-25.7499" />
                              <Key frame="65" value="-25.7499" />
                              <Key frame="71" value="-25.7499" />
                              <Key frame="77" value="-25.7499" />
                              <Key frame="83" value="-25.7499" />
                              <Key frame="89" value="-25.7499" />
                              <Key frame="95" value="-25.7499" />
                              <Key frame="101" value="-25.7499" />
                              <Key frame="113" value="-7.99575" />
                              <Key frame="125" value="10.4567" />
                              <Key frame="131" value="1.0523" />
                              <Key frame="137" value="10.4567" />
                              <Key frame="143" value="1.0523" />
                              <Key frame="149" value="10.4567" />
                              <Key frame="155" value="1.0523" />
                              <Key frame="161" value="10.4567" />
                              <Key frame="167" value="1.0523" />
                              <Key frame="173" value="10.4567" />
                              <Key frame="179" value="1.0523" />
                              <Key frame="185" value="10.4567" />
                              <Key frame="191" value="1.0523" />
                              <Key frame="197" value="10.4567" />
                              <Key frame="203" value="1.0523" />
                              <Key frame="210" value="10.4567" />
                              <Key frame="230" value="-3.86484" />
                              <Key frame="247" value="-5.79845" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="11" value="-12.8298" />
                              <Key frame="23" value="-29.6171" />
                              <Key frame="29" value="-27.0682" />
                              <Key frame="35" value="-29.6171" />
                              <Key frame="41" value="-27.0682" />
                              <Key frame="47" value="-29.6171" />
                              <Key frame="53" value="-27.0682" />
                              <Key frame="59" value="-29.6171" />
                              <Key frame="65" value="-27.0682" />
                              <Key frame="71" value="-29.6171" />
                              <Key frame="77" value="-27.0682" />
                              <Key frame="83" value="-29.6171" />
                              <Key frame="89" value="-27.0682" />
                              <Key frame="95" value="-29.6171" />
                              <Key frame="101" value="-27.0682" />
                              <Key frame="113" value="-13.7087" />
                              <Key frame="125" value="-29.6171" />
                              <Key frame="131" value="-27.0682" />
                              <Key frame="137" value="-29.6171" />
                              <Key frame="143" value="-27.0682" />
                              <Key frame="149" value="-29.6171" />
                              <Key frame="155" value="-27.0682" />
                              <Key frame="161" value="-29.6171" />
                              <Key frame="167" value="-27.0682" />
                              <Key frame="173" value="-29.6171" />
                              <Key frame="179" value="-27.0682" />
                              <Key frame="185" value="-29.6171" />
                              <Key frame="191" value="-27.0682" />
                              <Key frame="197" value="-29.6171" />
                              <Key frame="203" value="-27.0682" />
                              <Key frame="210" value="-29.6171" />
                              <Key frame="230" value="-12.8298" />
                              <Key frame="247" value="-9.66569" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="11" value="30.7645" />
                              <Key frame="23" value="-5.18321" />
                              <Key frame="29" value="-5.18321" />
                              <Key frame="35" value="-5.18321" />
                              <Key frame="41" value="-5.18321" />
                              <Key frame="47" value="-5.18321" />
                              <Key frame="53" value="-5.18321" />
                              <Key frame="59" value="-5.18321" />
                              <Key frame="65" value="-5.18321" />
                              <Key frame="71" value="-5.18321" />
                              <Key frame="77" value="-5.18321" />
                              <Key frame="83" value="-5.18321" />
                              <Key frame="89" value="-5.18321" />
                              <Key frame="95" value="-5.18321" />
                              <Key frame="101" value="-5.18321" />
                              <Key frame="113" value="36.038" />
                              <Key frame="125" value="36.5606" />
                              <Key frame="131" value="36.3848" />
                              <Key frame="137" value="36.5606" />
                              <Key frame="143" value="36.3848" />
                              <Key frame="149" value="36.5606" />
                              <Key frame="155" value="36.3848" />
                              <Key frame="161" value="36.5606" />
                              <Key frame="167" value="36.3848" />
                              <Key frame="173" value="36.5606" />
                              <Key frame="179" value="36.3848" />
                              <Key frame="185" value="36.5606" />
                              <Key frame="191" value="36.3848" />
                              <Key frame="197" value="36.5606" />
                              <Key frame="203" value="36.3848" />
                              <Key frame="210" value="36.5606" />
                              <Key frame="230" value="30.7645" />
                              <Key frame="247" value="-5.2711" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="11" value="65.0423" />
                              <Key frame="23" value="66.5162" />
                              <Key frame="29" value="77.9407" />
                              <Key frame="35" value="66.5162" />
                              <Key frame="41" value="77.9407" />
                              <Key frame="47" value="66.5162" />
                              <Key frame="53" value="77.9407" />
                              <Key frame="59" value="66.5162" />
                              <Key frame="65" value="77.9407" />
                              <Key frame="71" value="66.5162" />
                              <Key frame="77" value="77.9407" />
                              <Key frame="83" value="66.5162" />
                              <Key frame="89" value="77.9407" />
                              <Key frame="95" value="66.5162" />
                              <Key frame="101" value="77.9407" />
                              <Key frame="107" value="66.5162" />
                              <Key frame="113" value="77.9407" />
                              <Key frame="119" value="66.5162" />
                              <Key frame="125" value="77.9407" />
                              <Key frame="131" value="66.5162" />
                              <Key frame="137" value="77.9407" />
                              <Key frame="143" value="66.5162" />
                              <Key frame="149" value="77.9407" />
                              <Key frame="155" value="66.5162" />
                              <Key frame="161" value="77.9407" />
                              <Key frame="167" value="66.5162" />
                              <Key frame="173" value="77.9407" />
                              <Key frame="179" value="66.5162" />
                              <Key frame="185" value="77.9407" />
                              <Key frame="191" value="66.5162" />
                              <Key frame="197" value="77.9407" />
                              <Key frame="203" value="66.5162" />
                              <Key frame="210" value="77.9407" />
                              <Key frame="247" value="84.4664" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="11" value="-11.2525" />
                              <Key frame="23" value="5.24635" />
                              <Key frame="29" value="5.24635" />
                              <Key frame="35" value="5.24635" />
                              <Key frame="41" value="5.24635" />
                              <Key frame="47" value="5.24635" />
                              <Key frame="53" value="5.24635" />
                              <Key frame="59" value="5.24635" />
                              <Key frame="65" value="5.24635" />
                              <Key frame="71" value="5.24635" />
                              <Key frame="77" value="5.24635" />
                              <Key frame="83" value="5.24635" />
                              <Key frame="89" value="5.24635" />
                              <Key frame="95" value="5.24635" />
                              <Key frame="101" value="5.24635" />
                              <Key frame="107" value="5.24635" />
                              <Key frame="113" value="5.24635" />
                              <Key frame="119" value="5.24635" />
                              <Key frame="125" value="5.24635" />
                              <Key frame="131" value="5.24635" />
                              <Key frame="137" value="5.24635" />
                              <Key frame="143" value="5.24635" />
                              <Key frame="149" value="5.24635" />
                              <Key frame="155" value="5.24635" />
                              <Key frame="161" value="5.24635" />
                              <Key frame="167" value="5.24635" />
                              <Key frame="173" value="5.24635" />
                              <Key frame="179" value="5.24635" />
                              <Key frame="185" value="5.24635" />
                              <Key frame="191" value="5.24635" />
                              <Key frame="197" value="5.24635" />
                              <Key frame="203" value="5.24635" />
                              <Key frame="210" value="5.24635" />
                              <Key frame="247" value="-6.59429" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="11" value="41.3067" />
                              <Key frame="23" value="0" />
                              <Key frame="29" value="0" />
                              <Key frame="35" value="0" />
                              <Key frame="41" value="0" />
                              <Key frame="47" value="0" />
                              <Key frame="53" value="0" />
                              <Key frame="59" value="0" />
                              <Key frame="65" value="0" />
                              <Key frame="71" value="0" />
                              <Key frame="77" value="0" />
                              <Key frame="83" value="0" />
                              <Key frame="89" value="0" />
                              <Key frame="95" value="0" />
                              <Key frame="101" value="0" />
                              <Key frame="107" value="0" />
                              <Key frame="113" value="0" />
                              <Key frame="119" value="0" />
                              <Key frame="125" value="0" />
                              <Key frame="131" value="0" />
                              <Key frame="137" value="0" />
                              <Key frame="143" value="0" />
                              <Key frame="149" value="0" />
                              <Key frame="155" value="0" />
                              <Key frame="161" value="0" />
                              <Key frame="167" value="0" />
                              <Key frame="173" value="0" />
                              <Key frame="179" value="0" />
                              <Key frame="185" value="0" />
                              <Key frame="191" value="0" />
                              <Key frame="197" value="0" />
                              <Key frame="203" value="0" />
                              <Key frame="210" value="0" />
                              <Key frame="247" value="5.09532" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                        <Resource name="Speakers" type="Lock" timeout="1" />
                      </Box>
                      <Box name="Sit Down" id="10" localization="8" tooltip="the robot tries to sit down from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="765" y="182">
                        <bitmap>media/images/box/movement/sit_ground.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in sitting down." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to sit down after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
                        <Timeline enable="0">
                          <BehaviorLayer name="SitDownBehavior">
                            <BehaviorKeyframe name="DetectRobotPose" index="1">
                              <Diagram>
                                <Box name="Goto Posture" id="7" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="371" y="101">
                                  <bitmap>media/images/box/box-diagram.png</bitmap>
                                  <script language="4">
                                    <content>
                                      <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                                    </content>
                                  </script>
                                  <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                                  <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                                  <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                                  <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                                  <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                                  <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Sit" default_value="Sit" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                                    <Choice value="Crouch" />
                                    <Choice value="LyingBack" />
                                    <Choice value="LyingBelly" />
                                    <Choice value="Sit" />
                                    <Choice value="SitRelax" />
                                    <Choice value="StandInit" />
                                    <Choice value="Stand" />
                                    <Choice value="StandZero" />
                                  </Parameter>
                                  <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="100" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                                  <Resource name="All motors" type="Lock" timeout="0" />
                                  <Resource name="Stiffness" type="Lock" timeout="0" />
                                </Box>
                                <Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="2" />
                                <Link inputowner="0" indexofinput="4" outputowner="7" indexofoutput="4" />
                                <Link inputowner="0" indexofinput="5" outputowner="7" indexofoutput="5" />
                              </Diagram>
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                        </Timeline>
                        <Resource name="All motors" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_屈膝" id="17" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="384" y="321">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="StandInit" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Box name="ShowFarDistanceLeft_01" id="12" localization="8" tooltip="ID : #01A 0015&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- There&#x0A;- Future&#x0A;- Left&#x0A;- Far&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : LeanRight&#x0A;End stance : LeanRight" x="563" y="313">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49">
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="20" value="16.697" />
                              <Key frame="40" value="-7.91266" />
                              <Key frame="48" value="-5.10013" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0">
                              <Key frame="20" value="19.2459" />
                              <Key frame="40" value="17.6638" />
                              <Key frame="48" value="17.8396" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="19" value="-10.2857" />
                              <Key frame="38" value="-0.441859" />
                              <Key frame="46" value="-0.969218" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="19" value="-6.58948" />
                              <Key frame="38" value="-0.612832" />
                              <Key frame="46" value="-1.0523" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="22" value="-88.5" />
                              <Key frame="41" value="-24.1678" />
                              <Key frame="49" value="-34.4511" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="22" value="-59.4172" />
                              <Key frame="41" value="-102.484" />
                              <Key frame="49" value="-96.5954" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="22" value="0" />
                              <Key frame="41" value="0.84" />
                              <Key frame="49" value="0.68" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="19" value="-17.5759" />
                              <Key frame="38" value="22.3269" />
                              <Key frame="46" value="15.0319" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="19" value="2.81494" />
                              <Key frame="38" value="-2.45857" />
                              <Key frame="46" value="-2.63435" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="19" value="-15.6423" />
                              <Key frame="38" value="-14.1482" />
                              <Key frame="46" value="-13.7966" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="19" value="35.5059" />
                              <Key frame="38" value="-3.95753" />
                              <Key frame="46" value="2.1949" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="22" value="-10.2857" />
                              <Key frame="41" value="20.6522" />
                              <Key frame="49" value="18.7185" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="22" value="20.6522" />
                              <Key frame="41" value="35.6816" />
                              <Key frame="49" value="33.5722" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="22" value="-0.529749" />
                              <Key frame="41" value="-32.0829" />
                              <Key frame="49" value="-28.743" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="19" value="-19.949" />
                              <Key frame="38" value="-3.68905" />
                              <Key frame="46" value="-4.74374" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="19" value="6.41851" />
                              <Key frame="38" value="14.5924" />
                              <Key frame="46" value="14.2409" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="18" value="84.9058" />
                              <Key frame="39" value="62.054" />
                              <Key frame="47" value="64.2513" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="18" value="59.5882" />
                              <Key frame="39" value="61.6097" />
                              <Key frame="47" value="60.2913" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="18" value="0" />
                              <Key frame="39" value="0.84" />
                              <Key frame="47" value="0.68" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="19" value="-21.3601" />
                              <Key frame="38" value="23.8163" />
                              <Key frame="46" value="16.2576" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="19" value="-9.05044" />
                              <Key frame="38" value="-20.4764" />
                              <Key frame="46" value="-18.8943" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="19" value="-15.6423" />
                              <Key frame="38" value="-14.1482" />
                              <Key frame="46" value="-13.7966" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="19" value="46.2335" />
                              <Key frame="38" value="-3.24959" />
                              <Key frame="46" value="4.04543" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="18" value="85.0816" />
                              <Key frame="39" value="83.6753" />
                              <Key frame="47" value="87.191" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="18" value="3.68905" />
                              <Key frame="39" value="9.92936" />
                              <Key frame="47" value="8.17153" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="18" value="26.6288" />
                              <Key frame="39" value="25.0467" />
                              <Key frame="47" value="25.7499" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Box name="PointAtSelfRightArm_01" id="48" localization="8" tooltip="ID : #01B 0007&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Me&#x0A;- Myself&#x0A;- I&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : No&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Flex&#x0A;End stance : Center" x="958" y="175">
                        <bitmap>media/images/box/movement/move.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" />
                        <Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="25">
                          <BehaviorLayer name="behavior_layer1">
                            <BehaviorKeyframe name="keyframe1" index="1">
                              <Diagram />
                            </BehaviorKeyframe>
                          </BehaviorLayer>
                          <ActuatorList model="">
                            <ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0">
                              <Key frame="13" value="12.1267" />
                              <Key frame="23" value="-6.85796" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnklePitch" mute="0" unit="0">
                              <Key frame="12" value="-9.58261" />
                              <Key frame="22" value="-5.27591" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LAnkleRoll" mute="0" unit="0">
                              <Key frame="12" value="-4.56796" />
                              <Key frame="22" value="-4.2164" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0">
                              <Key frame="15" value="-53.3" />
                              <Key frame="25" value="-27.6835" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0">
                              <Key frame="15" value="-70.4" />
                              <Key frame="25" value="-73.392" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHand" mute="0" unit="1">
                              <Key frame="15" value="0.19" />
                              <Key frame="25" value="0.6624" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipPitch" mute="0" unit="0">
                              <Key frame="12" value="-3.95273" />
                              <Key frame="22" value="2.72705" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipRoll" mute="0" unit="0">
                              <Key frame="12" value="6.68218" />
                              <Key frame="22" value="4.83644" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LHipYawPitch" mute="0" unit="0">
                              <Key frame="12" value="-11.6872" />
                              <Key frame="22" value="-9.66569" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LKneePitch" mute="0" unit="0">
                              <Key frame="12" value="24.6073" />
                              <Key frame="22" value="12.4782" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0">
                              <Key frame="15" value="76.5" />
                              <Key frame="25" value="86.5709" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0">
                              <Key frame="15" value="12.8" />
                              <Key frame="25" value="11.1598" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0">
                              <Key frame="15" value="-45.7061" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-4.7632" ordinateParam="-15.8836" />
                                <Tangent side="right" interpType="bezier" abscissaParam="3.17547" ordinateParam="10.5891" />
                              </Key>
                              <Key frame="25" value="-21.7117" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-3.30702" ordinateParam="-5.02698" />
                                <Tangent side="right" interpType="bezier" abscissaParam="0" ordinateParam="0" />
                              </Key>
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnklePitch" mute="0" unit="0">
                              <Key frame="12" value="-5.79845" />
                              <Key frame="22" value="2.02391" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RAnkleRoll" mute="0" unit="0">
                              <Key frame="12" value="3.43018" />
                              <Key frame="22" value="-0.0854867" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0">
                              <Key frame="13" value="49.3" />
                              <Key frame="23" value="88.5" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0">
                              <Key frame="13" value="61.346" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-3.21391" ordinateParam="20.6006" />
                                <Tangent side="right" interpType="bezier" abscissaParam="2.47225" ordinateParam="-15.8466" />
                              </Key>
                              <Key frame="23" value="21.5311" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHand" mute="0" unit="1">
                              <Key frame="13" value="1" />
                              <Key frame="23" value="0.45" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipPitch" mute="0" unit="0">
                              <Key frame="12" value="1.93121" />
                              <Key frame="22" value="10.9841" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipRoll" mute="0" unit="0">
                              <Key frame="12" value="-0.173378" />
                              <Key frame="22" value="2.37549" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RHipYawPitch" mute="0" unit="0">
                              <Key frame="12" value="-11.6872" />
                              <Key frame="22" value="-9.66569" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RKneePitch" mute="0" unit="0">
                              <Key frame="12" value="15.1198" />
                              <Key frame="22" value="-2.28279" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0">
                              <Key frame="13" value="55.9894" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-3.96019" ordinateParam="7.95114" />
                                <Tangent side="right" interpType="bezier" abscissaParam="3.0463" ordinateParam="-6.11625" />
                              </Key>
                              <Key frame="23" value="40.8721" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0">
                              <Key frame="13" value="-2.11181" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-4.33333" ordinateParam="-6.39629" />
                                <Tangent side="right" interpType="bezier" abscissaParam="3.33333" ordinateParam="4.92023" />
                              </Key>
                              <Key frame="23" value="9.31412" />
                            </ActuatorCurve>
                            <ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0">
                              <Key frame="13" value="60.2913" smooth="1" symmetrical="1">
                                <Tangent side="left" interpType="bezier" abscissaParam="-4.24005" ordinateParam="7.72419" />
                                <Tangent side="right" interpType="bezier" abscissaParam="3.26158" ordinateParam="-5.94168" />
                              </Key>
                              <Key frame="23" value="48.338" />
                            </ActuatorCurve>
                          </ActuatorList>
                        </Timeline>
                        <Resource name="Standing" type="Lock" timeout="1" />
                        <Resource name="All motors" type="Lock" timeout="1" />
                      </Box>
                      <Box name="Goto Posture" id="8" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="179" y="318">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="1" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Box name="_暂停四秒" id="13" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="73" y="591">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_暂停四秒" id="1" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="271" y="595">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_暂停四秒" id="2" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="492" y="589">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_暂停四秒" id="3" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="714" y="590">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Box name="_暂停四秒" id="4" localization="8" tooltip="Wait a moment before sending a signal on the output. &#x0A;Can be stopped anytime. &#x0A;Stimulating the input again before output is activated restarts the waiting period.&#x0A;" x="921" y="596">
                        <bitmap>media/images/box/wait.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.waiting = None

    def onUnload(self):
        self.cancelWaiting()

    def triggerOutput(self):
        self.timerOutput()

    def cancelWaiting(self):
        if self.waiting:
            self.waiting.cancel()
        self.waiting = None

    def onInput_onStart(self):
        self.cancelWaiting()
        import qi
        self.waiting = qi.async(self.triggerOutput, delay=int(self.getParameter("Timeout (s)") * 1000 * 1000))

    def onInput_onStop(self):
        if self.getParameter("Trigger timerOutput if cancelled") and self.waiting and self.waiting.isRunning():
            self.timerOutput()
        self.onUnload()]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Start the Wait box with the configured timeout value." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stop the wait and stimulate the output." id="3" />
                        <Output name="timerOutput" type="1" type_size="1" nature="1" inner="0" tooltip="Send a bang once time set in parameters is elapsed, or if the box is stopped and the appropriate parameter is set." id="4" />
                        <Parameter name="Timeout (s)" inherits_from_parent="0" content_type="2" value="4" default_value="1" min="0" max="5000" tooltip="Duration the box waits before stimulating the output." id="5" />
                        <Parameter name="Trigger timerOutput if cancelled" inherits_from_parent="0" content_type="0" value="0" default_value="1" tooltip="If the box is currently waiting and cancelled, output will be stimulated." id="6" />
                      </Box>
                      <Link inputowner="11" indexofinput="2" outputowner="13" indexofoutput="4" />
                      <Link inputowner="1" indexofinput="2" outputowner="11" indexofoutput="4" />
                      <Link inputowner="16" indexofinput="2" outputowner="1" indexofoutput="4" />
                      <Link inputowner="2" indexofinput="2" outputowner="16" indexofoutput="4" />
                      <Link inputowner="7" indexofinput="2" outputowner="2" indexofoutput="4" />
                      <Link inputowner="3" indexofinput="2" outputowner="7" indexofoutput="4" />
                      <Link inputowner="19" indexofinput="2" outputowner="3" indexofoutput="4" />
                      <Link inputowner="4" indexofinput="2" outputowner="19" indexofoutput="4" />
                      <Link inputowner="23" indexofinput="2" outputowner="4" indexofoutput="4" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
            </Box>
            <Box name="_请调整位置" id="6" localization="8" tooltip="Say some text with animations. The text can be localized." x="347" y="1135">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="不好意思，NAO看不到你了！你可以帮我调整一下位置吗？" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_请继续" id="13" localization="8" tooltip="Say some text with animations. The text can be localized." x="574" y="1136">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="谢谢你！我们可以继续了！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_大声一点" id="15" localization="8" tooltip="Say some text with animations. The text can be localized." x="143" y="1140">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请大声一点！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_再说一次" id="17" localization="8" tooltip="Say some text with animations. The text can be localized." x="139" y="982">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="对不起，我好像没有听清楚！请再说一次！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/Gestures/Hey_1" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_站起" id="23" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="789" y="1138">
              <bitmap>media/images/box/movement/stand.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
              <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
              <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
              <Timeline enable="0">
                <BehaviorLayer name="StandUpBehavior">
                  <BehaviorKeyframe name="DetectRobotPose" index="1">
                    <Diagram>
                      <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="All motors" type="Lock" timeout="0" />
            </Box>
            <Box name="_继续加油努力" id="24" localization="8" tooltip="Say some text with animations. The text can be localized." x="350" y="978">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALAnimatedSpeech')
        self.ttsStop = self.session().service('ALAnimatedSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self):
        self.bIsRunning = True
        try:
            movement = self.getParameter("Speaking movement mode")
            textParam = self.getParameter("Text")
            if movement == "disabled":
                textParam = "^start({0}) {1} ^wait({0})".format(self.getParameter("Animation"), textParam)
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += textParam
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence), {"speakingMovementMode":movement})
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Parameter name="Text" inherits_from_parent="0" content_type="5" value="别害羞，再做一次看看！要认真一点喔！" default_value="" tooltip="The text you want to say. Don&apos;t forget to translate it!" id="7" />
              <Parameter name="Speaking movement mode" inherits_from_parent="0" content_type="3" value="contextual" default_value="contextual" custom_choice="0" tooltip="Change the body language mode during the speech.&#x0A;disabled: The robot will only play the animations given by the user through the animation parameter.&#x0A;random: During time the robot has no animation to play, he will launch random neutral animations.&#x0A;contextual: During time the robot has no animation to play, he will try to launch a new one accordingly to the saying text. Every time the robot can&apos;t find a contextual animation he will launch a random neutral animation." id="8">
                <Choice value="disabled" />
                <Choice value="random" />
                <Choice value="contextual" />
              </Parameter>
              <Parameter name="Animation" inherits_from_parent="0" content_type="3" value="Stand/BodyTalk/BodyTalk_2" default_value="" custom_choice="0" tooltip="The animation to play" id="9" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_说串文字" id="26" localization="8" tooltip="Say the text received on its input." x="567" y="977">
              <bitmap>media/images/box/interaction/say.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.tts = self.session().service('ALTextToSpeech')
        self.ttsStop = self.session().service('ALTextToSpeech') #Create another service as wait is blocking if audioout is remote
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.ttsStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            sentence = "\RSPD="+ str( self.getParameter("Speed (%)") ) + "\ "
            sentence += "\VCT="+ str( self.getParameter("Voice shaping (%)") ) + "\ "
            sentence += str(p)
            sentence +=  "\RST\ "
            id = self.tts.pCall("say",str(sentence))
            self.ids.append(id)
            self.tts.wait(id)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" />
              <Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" />
              <Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" />
              <Parameter name="Voice shaping (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="150" tooltip='Used to modify at runtime the voice feature (tone, speed). In a slighty&#x0A;different way than pitch and speed, it gives a kind of &quot;gender or age&#x0A;modification&quot; effect.&#x0A;&#x0A;For instance, a quite good male derivation of female voice can be&#x0A;obtained setting this parameter to 78%.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the&#x0A;speed parameter. For example, if you want to decrease by 20% the voice&#x0A;shaping, you will have to increase by 20% the speed to keep a constant&#x0A;average speed.' id="5" />
              <Parameter name="Speed (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="50" max="200" tooltip="Changes the speed of the voice.&#x0A;&#x0A;Note: For a better effect, you can compensate this parameter with the voice&#x0A;shaping parameter. For example, if you want to increase by 20% the speed, you&#x0A;will have to decrease by 20% the voice shaping to keep a constant average&#x0A;speed." id="6" />
              <Resource name="Speech" type="Lock" timeout="0" />
            </Box>
            <Box name="_启动" id="25" localization="8" tooltip="Stiffen or loosen all motors. Does not work on Pepper, use wakeUp / rest boxes instead." x="41" y="4">
              <bitmap>media/images/box/movement/stiffness.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.motion = self.session().service("ALMotion")

    def onUnload(self):
        pass

    def onInput_onSet(self):
        if( self.getParameter("Action") == "On" ):
            stiffness = 1
        else:
            stiffness = 0
        self.motion.stiffnessInterpolation("Body", stiffness, 0.1, _async=True)
        time.sleep(0.1)
        self.onReady() #~ activate output of the box]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onSet" type="1" type_size="1" nature="1" inner="0" tooltip="When this input is stimulated, all motors are stiffened or loosened." id="2" />
              <Output name="onReady" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when it is done." id="3" />
              <Parameter name="Action" inherits_from_parent="0" content_type="3" value="On" default_value="On" custom_choice="0" tooltip="Choose if you want to stiffen (On) or loosen (Off) all motors." id="4">
                <Choice value="Off" />
                <Choice value="On" />
              </Parameter>
              <Resource name="All motors" type="Lock" timeout="0" />
            </Box>
            <Box name="_站起" id="27" localization="8" tooltip="the robot tries to stand up from any position for a number of tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." x="172" y="9">
              <bitmap>media/images/box/movement/stand.png</bitmap>
              <script language="4">
                <content>
                  <![CDATA[]]>
                </content>
              </script>
              <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
              <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
              <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
              <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated when the robot succeed in standing up." id="4" />
              <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when the robot failed to stand up after n tries.&#x0A;&#x0A;Note: The number of tries can be set in parameters." id="5" />
              <Parameter name="Maximum of tries" inherits_from_parent="0" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of stand up before stimulating the failure output." id="6" />
              <Timeline enable="0">
                <BehaviorLayer name="StandUpBehavior">
                  <BehaviorKeyframe name="DetectRobotPose" index="1">
                    <Diagram>
                      <Box name="Goto Posture" id="2" localization="8" tooltip="The robot goes from its current postition to the asked posture." x="331" y="92">
                        <bitmap>media/images/box/box-diagram.png</bitmap>
                        <script language="4">
                          <content>
                            <![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.nTries = 0
        self.postureService = self.session().service("ALRobotPosture")
        pass

    def onUnload(self):
        self.postureService.stopMove()

    def onInput_onStart(self):
        if(self.nTries != self.getParameter("Maximum of tries")):
            self.nTries = self.getParameter("Maximum of tries")
            self.postureService.setMaxTryNumber(self.nTries)

        result = self.postureService.goToPosture(self.getParameter("Name"), self.getParameter("Speed (%)")/100.)
        if(result):
            self.success()
        else:
            self.failure()
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method, as the code written in onUnload is used to stop the box as well
        pass]]>
                          </content>
                        </script>
                        <Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" />
                        <Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" />
                        <Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" />
                        <Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" />
                        <Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" />
                        <Parameter name="Name" inherits_from_parent="0" content_type="3" value="Stand" default_value="Stand" custom_choice="1" tooltip="Name of the posture to go to." id="6">
                          <Choice value="Crouch" />
                          <Choice value="LyingBack" />
                          <Choice value="LyingBelly" />
                          <Choice value="Sit" />
                          <Choice value="SitRelax" />
                          <Choice value="StandInit" />
                          <Choice value="Stand" />
                          <Choice value="StandZero" />
                        </Parameter>
                        <Parameter name="Speed (%)" inherits_from_parent="0" content_type="1" value="80" default_value="80" min="0" max="100" tooltip="Speed to go to the posture." id="7" />
                        <Parameter name="Maximum of tries" inherits_from_parent="1" content_type="1" value="3" default_value="3" min="0" max="10" tooltip="The maximum number of fails of go to posture before stimulating the failure output." id="8" />
                        <Resource name="All motors" type="Lock" timeout="0" />
                        <Resource name="Stiffness" type="Lock" timeout="0" />
                      </Box>
                      <Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="2" />
                      <Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" />
                      <Link inputowner="0" indexofinput="5" outputowner="2" indexofoutput="5" />
                    </Diagram>
                  </BehaviorKeyframe>
                </BehaviorLayer>
              </Timeline>
              <Resource name="All motors" type="Lock" timeout="0" />
            </Box>
            <Link inputowner="1" indexofinput="2" outputowner="14" indexofoutput="4" />
            <Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="4" />
            <Link inputowner="10" indexofinput="2" outputowner="18" indexofoutput="4" />
            <Link inputowner="20" indexofinput="2" outputowner="9" indexofoutput="4" />
            <Link inputowner="21" indexofinput="2" outputowner="12" indexofoutput="4" />
            <Link inputowner="22" indexofinput="2" outputowner="16" indexofoutput="4" />
            <Link inputowner="27" indexofinput="2" outputowner="25" indexofoutput="3" />
            <Link inputowner="25" indexofinput="2" outputowner="0" indexofoutput="2" />
            <Link inputowner="19" indexofinput="2" outputowner="2" indexofoutput="4" />
            <Link inputowner="4" indexofinput="2" outputowner="19" indexofoutput="4" />
            <Link inputowner="9" indexofinput="2" outputowner="4" indexofoutput="4" />
            <Link inputowner="8" indexofinput="2" outputowner="20" indexofoutput="4" />
            <Link inputowner="12" indexofinput="2" outputowner="8" indexofoutput="4" />
            <Link inputowner="3" indexofinput="2" outputowner="21" indexofoutput="4" />
            <Link inputowner="16" indexofinput="2" outputowner="3" indexofoutput="4" />
            <Link inputowner="5" indexofinput="2" outputowner="22" indexofoutput="4" />
            <Link inputowner="18" indexofinput="2" outputowner="5" indexofoutput="4" />
          </Diagram>
        </BehaviorKeyframe>
      </BehaviorLayer>
    </Timeline>
  </Box>
</ChoregrapheProject>
